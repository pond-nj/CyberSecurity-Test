{"version":3,"file":"SignIn-e3dbf321.js","sources":["../src/ui/Auth/components/ForgotPassword.tsx","../src/ui/Auth/pages/SignIn.tsx"],"sourcesContent":["import React from 'react';\nimport TextButton from './internal/TextButton';\nimport styled from 'styled-components';\n\nconst ForgotPassword = styled(TextButton)(props => ({\n    marginTop: -53,\n    marginBottom: 53,\n    display: 'flex',\n    ...(props.theme.forgotPassword ? { ...props.theme.forgotPassword } : {})\n}))\n\nexport default function (props: React.ButtonHTMLAttributes<HTMLButtonElement>) {\n    return (\n        <ForgotPassword {...props} type=\"button\" />\n    )\n}\n","import React from 'react';\nimport Form from '../components/Form';\nimport EmailInput from '../components/EmailInput';\nimport PasswordInput from '../components/PasswordInput';\nimport HeaderText from '../components/HeaderText';\nimport ForgotPassword from '../components/ForgotPassword';\nimport SecondaryButton from '../components/SecondaryButton';\nimport SubmitButton from '../components/SubmitButton';\nimport Spacer from '../components/Spacer';\nimport { useForm } from 'react-hook-form';\nimport toast from 'react-hot-toast';\nimport { IPage } from '../../uiTypes';\nimport useEasybase from '../../../useEasybase';\n\nexport default function ({ setCurrentPage, dictionary }: IPage) {\n    const { register, handleSubmit, reset, formState: { isSubmitting } } = useForm();\n    const { signIn } = useEasybase();\n    const onSubmit = async (formData: Record<string, string>) => {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        const signInRes = await signIn(formData.email, formData.password);\n        if (!signInRes.success) {\n            if (signInRes.errorCode === \"NoUserExists\") {\n                toast.error(dictionary.errorUserDoesNotExist!)\n            } else if (signInRes.errorCode === \"BadFormat\") {\n                reset();\n                toast.error(dictionary.errorBadInputFormat!)\n            }\n        }\n        // Will automatically change views\n    }\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)}>\n            <HeaderText>{dictionary.signInHeader}</HeaderText>\n            <Spacer size=\"medium\" />\n            <EmailInput\n                register={() => register(\"email\")}\n                label={dictionary.emailLabel}\n                disabled={isSubmitting}\n            />\n            <Spacer size=\"xlarge\" />\n            <PasswordInput\n                register={() => register(\"password\")}\n                autoComplete=\"current-password\"\n                disabled={isSubmitting}\n                label={dictionary.passwordLabel}\n            />\n            <Spacer size=\"xlarge\" />\n            <ForgotPassword onClick={_ => setCurrentPage(\"ForgotPassword\")} disabled={isSubmitting}>{dictionary.forgotPasswordButton}</ForgotPassword>\n            <SubmitButton disabled={isSubmitting}>{dictionary.signInSubmitButton}</SubmitButton>\n            <SecondaryButton onClick={_ => setCurrentPage(\"SignUp\")} disabled={isSubmitting}>{dictionary.noAccountButton}</SecondaryButton>\n        </Form>\n    )\n}\n"],"names":["ForgotPassword","styled","TextButton","props","marginTop","marginBottom","display","theme","forgotPassword","React","type","setCurrentPage","dictionary","register","handleSubmit","reset","formState","isSubmitting","useForm","signIn","useEasybase","onSubmit","formData","Promise","resolve","setTimeout","signInRes","email","password","success","errorCode","toast","error","errorUserDoesNotExist","errorBadInputFormat","Form","HeaderText","signInHeader","Spacer","size","EmailInput","label","emailLabel","disabled","PasswordInput","autoComplete","passwordLabel","onClick","_","forgotPasswordButton","SubmitButton","signInSubmitButton","SecondaryButton","noAccountButton"],"mappings":"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"}