{"version":3,"file":"SignUp-3f867ad4.js","sources":["../src/ui/Auth/components/internal/Select.tsx","../src/ui/Auth/components/GenderSelect.tsx","../src/ui/Auth/pages/SignUp.tsx"],"sourcesContent":["import React from 'react';\nimport { UseFormRegisterReturn } from 'react-hook-form';\nimport styled from 'styled-components';\n\nconst SelectContainer = styled.div({\n    position: 'relative',\n    display: 'inline',\n    width: '100%',\n    maxWidth: '100%',\n    cursor: 'pointer',\n    '&:after': {\n        content: \"''\",\n        width: 0,\n        height: 0,\n        position: 'absolute',\n        pointerEvents: 'none',\n        top: '.3em',\n        right: '.75em',\n        borderTop: '8px solid black',\n        opacity: 0.5,\n        borderLeft: '5px solid transparent',\n        borderRight: '5px solid transparent'\n    }\n})\n\nconst Select = styled.select({\n    WebkitAppearance: 'none',\n    MozAppearance: 'none',\n    appearance: 'none',\n    padding: '1em 2em 1em 1em',\n    border: 'none',\n    width: '100%',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    cursor: 'pointer',\n    outline: 'none',\n    '&::-ms-expand': {\n        display: 'none'\n    }\n})\n\nconst SelectOption = styled.option(props => ({\n    width: '100%',\n    ...(props.theme.selectOption ? { ...props.theme.selectOption } : {})\n}))\n\ninterface ISelect extends React.SelectHTMLAttributes<HTMLSelectElement> {\n    options: string[];\n    id: string;\n    register(): UseFormRegisterReturn;\n}\n\nexport default function (props: ISelect) {\n    return (\n        <SelectContainer>\n            <Select {...props} {...props.register()} defaultValue=\"\">\n                <SelectOption key=\"empty-option\" value=\"\" disabled hidden style={{ display: 'none' }} />\n                {props.options.map(e => <SelectOption key={\"option\" + e}>{e}</SelectOption>)}\n            </Select>\n        </SelectContainer>\n    )\n}\n","import React from 'react';\nimport { UseFormRegisterReturn } from 'react-hook-form';\nimport styled from 'styled-components';\nimport Label from './internal/Label';\nimport Select from './internal/Select';\n\nconst GenderSelect = styled(Select)(props => ({\n    boxSizing: \"border-box\",\n    ...(props.theme.genderSelect ? { ...props.theme.genderSelect } : {})\n}))\n\nconst Root = styled.div({\n    position: \"relative\"\n})\n\ninterface ISelect extends React.SelectHTMLAttributes<HTMLSelectElement> {\n    register(): UseFormRegisterReturn;\n}\n\nconst GenderLabel = styled(Label)(props => ({\n    ...(props.theme.genderSelectLabel ? { ...props.theme.genderSelectLabel } : {})\n}))\n\nexport default function (props: ISelect) {\n    return (\n        <Root>\n            <GenderLabel htmlFor=\"select-gender\">Gender *</GenderLabel>\n            <GenderSelect id=\"select-gender\" {...props} options={[\"Male\", \"Female\", \"Prefer not to say\"]} />\n        </Root>\n    )\n}\n","import React, { Fragment } from 'react';\nimport Form from '../components/Form';\nimport EmailInput from '../components/EmailInput';\nimport PasswordInput from '../components/PasswordInput';\nimport HeaderText from '../components/HeaderText';\nimport SecondaryButton from '../components/SecondaryButton';\nimport SubmitButton from '../components/SubmitButton';\nimport Spacer from '../components/Spacer';\nimport ErrorText from '../components/ErrorText';\nimport GenderSelect from '../components/GenderSelect';\nimport Input from '../components/internal/Input';\nimport { useForm } from 'react-hook-form';\nimport { IPage, ISignUpFields } from '../../uiTypes';\nimport toast from 'react-hot-toast';\nimport useEasybase from '../../../useEasybase';\n\ninterface ISignUpPage extends IPage {\n    signUpFields: ISignUpFields\n}\n\nexport default function ({ setCurrentPage, dictionary, signUpFields }: ISignUpPage) {\n    const { register, handleSubmit, formState: { errors, isSubmitting }, reset } = useForm();\n    const { signUp, signIn } = useEasybase();\n\n    const onSubmit = async (formData: Record<string, string>) => {\n        if (!formData.email || !formData.password || !formData.passwordConfirm) {\n            return;\n        }\n        if (formData.password !== formData.passwordConfirm) {\n            toast.error(dictionary.errorPasswordsDoNotMatch!);\n            reset();\n            return;\n        }\n\n        const signUpAttrs = { createdAt: new Date().toISOString() };\n        for (const currField of [\"firstName\", \"lastName\", \"fullName\", \"dateOfBirth\", \"gender\", \"phoneNumber\"]) {\n            if (signUpFields[currField]) {\n                if (formData[currField]) {\n                    signUpAttrs[currField] = \"\" + formData[currField];\n                } else {\n                    toast.error(\"Missing sign up field value\");\n                    return;\n                }\n            }\n        }\n\n        const signUpRes = await signUp(formData.email, formData.password, signUpAttrs);\n        if (signUpRes.success) {\n            setCurrentPage(\"SignIn\")\n            await signIn(formData.email, formData.password)\n        } else {\n            if (signUpRes.errorCode === \"BadFormat\") {\n                reset();\n                toast.error(dictionary.errorBadInputFormat!);\n            } else if (signUpRes.errorCode === \"BadPasswordLength\") {\n                toast.error(dictionary.errorPasswordTooShort!);\n            } else if (signUpRes.errorCode === \"UserExists\") {\n                reset();\n                toast.error(dictionary.errorUserAlreadyExists!);\n            }\n        }\n    }\n\n    const passwordReqs = {\n        minLength: {\n            value: 8,\n            message: \"Password must be at least 8 characters long\"\n        },\n        maxLength: {\n            value: 100,\n            message: \"Password too long\"\n        },\n        pattern: {\n            value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{7,}$/gm,\n            message: \"Must contain a digit and uppercase and lowercase letters\"\n        }\n    }\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)}>\n            <HeaderText>{dictionary.signUpHeader}</HeaderText>\n            <Spacer size=\"medium\" />\n\n            <EmailInput\n                register={() => register(\"email\")}\n                label={dictionary.newEmailLabel}\n                disabled={isSubmitting}\n            />\n\n            { signUpFields.firstName &&\n                <Fragment>\n                    <Spacer size=\"xlarge\" />\n                    <Input\n                        register={() => register(\"firstName\", typeof signUpFields.firstName === \"boolean\" ? {} : signUpFields.firstName)}\n                        label={dictionary.newFirstNameLabel || \"\"}\n                        disabled={isSubmitting}\n                    />\n                    <ErrorText value={errors.firstName?.message} />\n                </Fragment>\n            }\n\n            { signUpFields.lastName &&\n                <Fragment>\n                    <Spacer size=\"xlarge\" />\n                    <Input\n                        register={() => register(\"lastName\", typeof signUpFields.lastName === \"boolean\" ? {} : signUpFields.lastName)}\n                        label={dictionary.newLastNameLabel || \"\"}\n                        disabled={isSubmitting}\n                    />\n                    <ErrorText value={errors.lastName?.message} />\n                </Fragment>\n            }\n\n            { signUpFields.fullName &&\n                <Fragment>\n                    <Spacer size=\"xlarge\" />\n                    <Input\n                        register={() => register(\"fullName\", typeof signUpFields.fullName === \"boolean\" ? {} : signUpFields.fullName)}\n                        label={dictionary.newFullNameLabel || \"\"}\n                        disabled={isSubmitting}\n                    />\n                    <ErrorText value={errors.fullName?.message} />\n                </Fragment>\n            }\n\n            { signUpFields.dateOfBirth &&\n                <Fragment>\n                    <Spacer size=\"xlarge\" />\n                    <Input\n                        type=\"date\"\n                        register={() => register(\"dateOfBirth\", typeof signUpFields.dateOfBirth === \"boolean\" ? {} : signUpFields.dateOfBirth)}\n                        label={dictionary.newDateOfBirthLabel || \"\"}\n                        disabled={isSubmitting}\n                        style={{ overflow: \"hidden\" }}\n                    />\n                    <ErrorText value={errors.dateOfBirth?.message} />\n                </Fragment>\n            }\n\n            { signUpFields.gender &&\n                <Fragment>\n                    <Spacer size=\"xlarge\" />\n                    <GenderSelect\n                        register={() => register(\"gender\", typeof signUpFields.gender === \"boolean\" ? {} : signUpFields.gender)}\n                        disabled={isSubmitting}\n                    />\n                    <ErrorText value={errors.gender?.message} />\n                </Fragment>\n            }\n\n            { signUpFields.phoneNumber &&\n                <Fragment>\n                    <Spacer size=\"xlarge\" />\n                    <Input\n                        type=\"tel\"\n                        label={dictionary.newPhoneNumberLabel || \"\"}\n                        register={() => register(\"phoneNumber\", typeof signUpFields.phoneNumber === \"boolean\" ? {} : signUpFields.phoneNumber)}\n                        disabled={isSubmitting}\n                    />\n                    <ErrorText value={errors.phoneNumber?.message} />\n                </Fragment>\n            }\n\n            <Spacer size=\"xlarge\" />\n            <PasswordInput\n                register={() => register(\"password\", passwordReqs)}\n                label={dictionary.newPasswordLabel}\n                autoComplete=\"new-password\"\n                disabled={isSubmitting}\n            />\n            <ErrorText value={errors.password?.message} />\n            <Spacer size=\"xlarge\" />\n            <PasswordInput\n                register={() => register(\"passwordConfirm\", passwordReqs)}\n                label={dictionary.confirmNewPasswordLabel}\n                autoComplete=\"new-password\"\n                disabled={isSubmitting}\n            />\n            <ErrorText value={errors.passwordConfirm?.message} />\n\n            <Spacer size=\"xlarge\" />\n            <SubmitButton disabled={isSubmitting}>{dictionary.signUpSubmitButton}</SubmitButton>\n            <SecondaryButton onClick={_ => setCurrentPage(\"SignIn\")} disabled={isSubmitting}>{dictionary.backToSignIn}</SecondaryButton>\n        </Form>\n    )\n}\n"],"names":["SelectContainer","styled","div","position","display","width","maxWidth","cursor","content","height","pointerEvents","top","right","borderTop","opacity","borderLeft","borderRight","Select","select","WebkitAppearance","MozAppearance","appearance","padding","border","fontFamily","fontSize","outline","SelectOption","option","props","theme","selectOption","React","register","defaultValue","key","value","disabled","hidden","style","options","map","e","GenderSelect","boxSizing","genderSelect","Root","GenderLabel","Label","genderSelectLabel","htmlFor","id","setCurrentPage","dictionary","signUpFields","useForm","handleSubmit","formState","errors","isSubmitting","reset","useEasybase","signUp","signIn","onSubmit","formData","email","password","passwordConfirm","toast","error","errorPasswordsDoNotMatch","signUpAttrs","createdAt","Date","toISOString","currField","signUpRes","success","errorCode","errorBadInputFormat","errorPasswordTooShort","errorUserAlreadyExists","passwordReqs","minLength","message","maxLength","pattern","Form","HeaderText","signUpHeader","Spacer","size","EmailInput","label","newEmailLabel","firstName","Fragment","Input","newFirstNameLabel","ErrorText","lastName","newLastNameLabel","fullName","newFullNameLabel","dateOfBirth","type","newDateOfBirthLabel","overflow","gender","phoneNumber","newPhoneNumberLabel","PasswordInput","newPasswordLabel","autoComplete","confirmNewPasswordLabel","SubmitButton","signUpSubmitButton","SecondaryButton","onClick","_","backToSignIn"],"mappings":"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"}