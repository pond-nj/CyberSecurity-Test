import React__default from 'react';
import { u as useForm, C as Controller } from './index.esm-51b86b60.js';
import { F as Form, H as HeaderText, M as MainView, I as Input, S as SpacerXL, a as ForgotPassword, V as View, b as SubmitButton, c as SpacerS, d as SecondaryButton } from './NativeAuth-42b1ee64.js';

const {
  useEasybase
} = require('easybase-react');

function SignIn ({
  setCurrentPage,
  dictionary,
  toast
}) {
  const {
    control,
    handleSubmit,
    reset,
    formState: {
      isSubmitting
    }
  } = useForm();
  const {
    signIn
  } = useEasybase();

  const onSubmit = async formData => {
    if (!formData.email || !formData.password) {
      return;
    }

    const signInRes = await signIn(formData.email, formData.password);

    if (!signInRes.success) {
      if (signInRes.errorCode === "NoUserExists") {
        toast(dictionary.errorUserDoesNotExist);
      } else if (signInRes.errorCode === "BadFormat") {
        reset();
        toast(dictionary.errorBadInputFormat);
      }
    } // Will automatically change views

  };

  return React__default.createElement(Form, null, React__default.createElement(HeaderText, null, dictionary.signInHeader), React__default.createElement(MainView, null, React__default.createElement(Controller, {
    control: control,
    render: ({
      field: {
        onChange,
        onBlur,
        value
      }
    }) => React__default.createElement(Input, {
      onBlur: onBlur,
      onChangeText: value => onChange(value),
      value: value,
      placeholder: dictionary.emailLabel,
      editable: !isSubmitting,
      keyboardType: "email-address",
      returnKeyType: "default",
      autoCompleteType: "email",
      autoCapitalize: "none"
    }),
    name: "email",
    defaultValue: ""
  }), React__default.createElement(SpacerXL, null), React__default.createElement(Controller, {
    control: control,
    render: ({
      field: {
        onChange,
        onBlur,
        value
      }
    }) => React__default.createElement(Input, {
      onBlur: onBlur,
      onChangeText: value => onChange(value),
      value: value,
      placeholder: dictionary.passwordLabel,
      editable: !isSubmitting,
      returnKeyType: "default",
      secureTextEntry: true,
      autoCompleteType: "password",
      autoCapitalize: "none"
    }),
    name: "password",
    defaultValue: ""
  }), React__default.createElement(ForgotPassword, {
    onPress: _ => setCurrentPage("ForgotPassword"),
    disabled: isSubmitting,
    title: dictionary.forgotPasswordButton
  })), React__default.createElement(View, null, React__default.createElement(SubmitButton, {
    onPress: handleSubmit(onSubmit),
    disabled: isSubmitting,
    title: dictionary.signInSubmitButton
  }), React__default.createElement(SpacerS, null), React__default.createElement(SecondaryButton, {
    onPress: _ => setCurrentPage("SignUp"),
    disabled: isSubmitting,
    title: dictionary.noAccountButton
  })));
}

export { SignIn as default };
//# sourceMappingURL=SignIn-42f5a985.js.map
