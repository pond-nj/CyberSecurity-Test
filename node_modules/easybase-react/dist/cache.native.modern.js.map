{"version":3,"file":"cache.native.modern.js","sources":["../src/storage/error.js","../src/storage/index.js","../src/cache.native.ts"],"sourcesContent":["/**\n * Ported from https://github.com/sunnylqm/react-native-storage\n * Credit: Sunny Luo /sunnylqm\n */\n\n/**\n * Created by sunny on 9/1/16.\n */\n\nexport class NotFoundError extends Error {\n    constructor(message) {\n        super(`Not Found! Params: ${message}`);\n        this.name = 'NotFoundError';\n        this.stack = new Error().stack; // Optional\n    }\n}\n// NotFoundError.prototype = Object.create(Error.prototype);\n\nexport class ExpiredError extends Error {\n    constructor(message) {\n        super(`Expired! Params: ${message}`);\n        this.name = 'ExpiredError';\n        this.stack = new Error().stack; // Optional\n    }\n}\n","/* eslint-disable */\n\n/**\n * Ported from https://github.com/sunnylqm/react-native-storage\n * Credit: Sunny Luo /sunnylqm\n */\n\n/*\n *  local storage(web/react native) wrapper\n *  sunnylqm\n */\nimport { NotFoundError, ExpiredError } from './error';\n\nexport { NotFoundError, ExpiredError };\n\nexport default class Storage {\n    constructor(options = {}) {\n        this._SIZE = options.size || 1000; // maximum key-ids capacity\n        this.sync = options.sync || {}; // remote sync method\n        this.defaultExpires = options.defaultExpires !== undefined ? options.defaultExpires : 1000 * 3600 * 24;\n        this.enableCache = options.enableCache !== false;\n        this._s = options.storageBackend || null;\n        this._innerVersion = 11;\n        this.cache = {};\n\n        if (this._s && this._s.setItem) {\n            try {\n                var promiseTest = this._s.setItem('__react_native_storage_test', 'test');\n                this.isPromise = !!(promiseTest && promiseTest.then);\n            } catch (e) {\n                console.warn(e);\n                delete this._s;\n                throw e;\n            }\n        } else {\n            console.warn(`Data would be lost after reload cause there is no storageBackend specified!\n      \\nEither use localStorage(for web) or AsyncStorage(for React Native) as a storageBackend.`);\n        }\n\n        this._mapPromise = this.getItem('map').then(map => {\n            this._m = this._checkMap((map && JSON.parse(map)) || {});\n        });\n    }\n    getItem(key) {\n        return this._s\n            ? this.isPromise\n                ? this._s.getItem(key)\n                : Promise.resolve(this._s.getItem(key))\n            : Promise.resolve();\n    }\n    setItem(key, value) {\n        return this._s\n            ? this.isPromise\n                ? this._s.setItem(key, value)\n                : Promise.resolve(this._s.setItem(key, value))\n            : Promise.resolve();\n    }\n    removeItem(key) {\n        return this._s\n            ? this.isPromise\n                ? this._s.removeItem(key)\n                : Promise.resolve(this._s.removeItem(key))\n            : Promise.resolve();\n    }\n    _initMap() {\n        return {\n            innerVersion: this._innerVersion,\n            index: 0,\n            __keys__: {},\n        };\n    }\n    _checkMap(map) {\n        if (map && map.innerVersion && map.innerVersion === this._innerVersion) {\n            return map;\n        } else {\n            return this._initMap();\n        }\n    }\n    _getId(key, id) {\n        return key + '_' + id;\n    }\n    _saveToMap(params) {\n        let { key, id, data } = params,\n            newId = this._getId(key, id),\n            m = this._m;\n        if (m[newId] !== undefined) {\n            // update existing data\n            if (this.enableCache) this.cache[newId] = JSON.parse(data);\n            return this.setItem('map_' + m[newId], data);\n        }\n        if (m[m.index] !== undefined) {\n            // loop over, delete old data\n            let oldId = m[m.index];\n            let splitOldId = oldId.split('_');\n            delete m[oldId];\n            this._removeIdInKey(splitOldId[0], splitOldId[1]);\n            if (this.enableCache) {\n                delete this.cache[oldId];\n            }\n        }\n        m[newId] = m.index;\n        m[m.index] = newId;\n\n        m.__keys__[key] = m.__keys__[key] || [];\n        m.__keys__[key].push(id);\n\n        if (this.enableCache) {\n            const cacheData = JSON.parse(data);\n            this.cache[newId] = cacheData;\n        }\n        let currentIndex = m.index;\n        if (++m.index === this._SIZE) {\n            m.index = 0;\n        }\n        this.setItem('map_' + currentIndex, data);\n        this.setItem('map', JSON.stringify(m));\n    }\n    save(params) {\n        const { key, id, data, rawData, expires = this.defaultExpires } = params;\n        if (key.toString().indexOf('_') !== -1) {\n            console.error('Please do not use \"_\" in key!');\n        }\n        let dataToSave = { rawData: data };\n        if (data === undefined) {\n            if (rawData !== undefined) {\n                console.warn('\"rawData\" is deprecated, please use \"data\" instead!');\n                dataToSave.rawData = rawData;\n            } else {\n                console.error('\"data\" is required in save()!');\n                return;\n            }\n        }\n        let now = Date.now();\n        if (expires !== null) {\n            dataToSave.expires = now + expires;\n        }\n        dataToSave = JSON.stringify(dataToSave);\n        if (id === undefined) {\n            if (this.enableCache) {\n                const cacheData = JSON.parse(dataToSave);\n                this.cache[key] = cacheData;\n            }\n            return this.setItem(key, dataToSave);\n        } else {\n            if (id.toString().indexOf('_') !== -1) {\n                console.error('Please do not use \"_\" in id!');\n            }\n            return this._mapPromise.then(() =>\n                this._saveToMap({\n                    key,\n                    id,\n                    data: dataToSave,\n                }),\n            );\n        }\n    }\n    getBatchData(querys) {\n        return Promise.all(querys.map(query => this.load(query)));\n    }\n    async getBatchDataWithIds(params) {\n        let { key, ids, syncInBackground, syncParams } = params;\n        const tasks = ids.map(id =>\n            this.load({\n                key,\n                id,\n                syncInBackground,\n                autoSync: false,\n                batched: true,\n            }),\n        );\n        const results = await Promise.all(tasks);\n        const missingIds = [];\n        results.forEach(value => {\n            if (value.syncId !== undefined) {\n                missingIds.push(value.syncId);\n            }\n        });\n        if (missingIds.length) {\n            const syncData = await this.sync[key]({\n                id: missingIds,\n                syncParams,\n            });\n            return results.map(value => {\n                return value.syncId ? syncData.shift() : value;\n            });\n        } else {\n            return results;\n        }\n    }\n    _lookupGlobalItem(params) {\n        const { key } = params;\n        if (this.enableCache && this.cache[key] !== undefined) {\n            return this._loadGlobalItem({ ret: this.cache[key], ...params });\n        }\n        return this.getItem(key).then(ret => this._loadGlobalItem({ ret, ...params }));\n    }\n    _loadGlobalItem(params) {\n        let { key, ret, autoSync, syncInBackground, syncParams } = params;\n        if (ret === null || ret === undefined) {\n            if (autoSync && this.sync[key]) {\n                return this.sync[key]({ syncParams });\n            }\n            throw new NotFoundError(JSON.stringify(params));\n        }\n        if (typeof ret === 'string') {\n            ret = JSON.parse(ret);\n            if (this.enableCache) {\n                this.cache[key] = ret;\n            }\n        }\n        let now = Date.now();\n        if (ret.expires < now) {\n            if (autoSync && this.sync[key]) {\n                if (syncInBackground) {\n                    try {\n                        this.sync[key]({ syncParams, syncInBackground });\n                    } catch (e) {\n                        // avoid uncaught exception\n                    }\n                    return ret.rawData;\n                }\n                return this.sync[key]({ syncParams, syncInBackground });\n            }\n            throw new ExpiredError(JSON.stringify(params));\n        }\n        return ret.rawData;\n    }\n    _noItemFound(params) {\n        let { key, id, autoSync, syncParams } = params;\n        if (this.sync[key]) {\n            if (autoSync) {\n                return this.sync[key]({ id, syncParams });\n            }\n            return { syncId: id };\n        }\n        throw new NotFoundError(JSON.stringify(params));\n    }\n    _loadMapItem(params) {\n        let { ret, key, id, autoSync, batched, syncInBackground, syncParams } = params;\n        if (ret === null || ret === undefined) {\n            return this._noItemFound(params);\n        }\n        if (typeof ret === 'string') {\n            ret = JSON.parse(ret);\n            const { key, id } = params;\n            const newId = this._getId(key, id);\n            if (this.enableCache) {\n                this.cache[newId] = ret;\n            }\n        }\n        let now = Date.now();\n        if (ret.expires < now) {\n            if (autoSync && this.sync[key]) {\n                if (syncInBackground) {\n                    try {\n                        this.sync[key]({ id, syncParams, syncInBackground });\n                    } catch (e) {\n                        // avoid uncaught exception\n                    }\n                    return ret.rawData;\n                }\n                return this.sync[key]({ id, syncParams, syncInBackground });\n            }\n            if (batched) {\n                return { syncId: id };\n            }\n            throw new ExpiredError(JSON.stringify(params));\n        }\n        return ret.rawData;\n    }\n    _lookUpInMap(params) {\n        let ret;\n        const m = this._m;\n        const { key, id } = params;\n        const newId = this._getId(key, id);\n        if (this.enableCache && this.cache[newId]) {\n            ret = this.cache[newId];\n            return this._loadMapItem({ ret, ...params });\n        }\n        if (m[newId] !== undefined) {\n            return this.getItem('map_' + m[newId]).then(ret => this._loadMapItem({ ret, ...params }));\n        }\n        return this._noItemFound({ ret, ...params });\n    }\n    remove(params) {\n        return this._mapPromise.then(() => {\n            let m = this._m;\n            let { key, id } = params;\n\n            if (id === undefined) {\n                if (this.enableCache && this.cache[key]) {\n                    delete this.cache[key];\n                }\n                return this.removeItem(key);\n            }\n            let newId = this._getId(key, id);\n\n            // remove existing data\n            if (m[newId] !== undefined) {\n                if (this.enableCache && this.cache[newId]) {\n                    delete this.cache[newId];\n                }\n                this._removeIdInKey(key, id);\n                let idTobeDeleted = m[newId];\n                delete m[newId];\n                this.setItem('map', JSON.stringify(m));\n                return this.removeItem('map_' + idTobeDeleted);\n            }\n        });\n    }\n    _removeIdInKey(key, id) {\n        const indexTobeRemoved = (this._m.__keys__[key] || []).indexOf(id);\n        if (indexTobeRemoved !== -1) {\n            this._m.__keys__[key].splice(indexTobeRemoved, 1);\n        }\n    }\n    load(params) {\n        const { key, id, autoSync = true, syncInBackground = true, syncParams, batched } = params;\n        return this._mapPromise.then(() => {\n            if (id === undefined) {\n                return this._lookupGlobalItem({\n                    key,\n                    autoSync,\n                    syncInBackground,\n                    syncParams,\n                });\n            } else {\n                return this._lookUpInMap({\n                    key,\n                    id,\n                    autoSync,\n                    syncInBackground,\n                    batched,\n                    syncParams,\n                });\n            }\n        });\n    }\n    clearAll() {\n        this._s.clear && this._s.clear();\n        this._m = this._initMap();\n    }\n    clearMap() {\n        return this.removeItem('map').then(() => {\n            this.cache = {};\n            this._m = this._initMap();\n        });\n    }\n    clearMapForKey(key) {\n        return this._mapPromise.then(() => {\n            let tasks = (this._m.__keys__[key] || []).map(id => this.remove({ key, id }));\n            return Promise.all(tasks);\n        });\n    }\n    getIdsForKey(key) {\n        return this._mapPromise.then(() => {\n            return this._m.__keys__[key] || [];\n        });\n    }\n    getAllDataForKey(key, options) {\n        options = Object.assign({ syncInBackground: true }, options);\n        return this.getIdsForKey(key).then(ids => {\n            const querys = ids.map(id => ({ key, id, syncInBackground: options.syncInBackground }));\n            return this.getBatchData(querys);\n        });\n    }\n}\n","import Storage from './storage';\nconst RN = require('react-native');\n\nconst storage = new Storage({ storageBackend: RN.AsyncStorage });\n\n// https://github.com/sunnylqm/react-native-storage\nexport async function getCacheTokens(cookieName: string): Promise<Record<string, any>> {\n    let cacheToken = false;\n    let cacheRefreshToken = false;\n    let cacheSession = false;\n\n    try {\n        cacheToken = await storage.load({ key: cookieName + \"token\" });\n    } catch (_) {}\n\n    try {\n        cacheRefreshToken = await storage.load({ key: cookieName + \"refreshToken\" });\n    } catch (_) {}\n\n    try {\n        cacheSession = await storage.load({ key: cookieName + \"session\" });\n    } catch (_) {}\n\n    return {\n        cacheToken,\n        cacheRefreshToken,\n        cacheSession\n    }\n}\n\nexport async function clearCacheTokens(cookieName: string) {\n    await storage.remove({ key: cookieName + \"token\" });\n    await storage.remove({ key: cookieName + \"refreshToken\" });\n    await storage.remove({ key: cookieName + \"session\" });\n}\n\nexport async function setCacheTokens(g: any, cookieName: string) {\n    await storage.save({\n        key: cookieName + \"token\",\n        data: g.token,\n        expires: 3600 * 1000 * 24\n    });\n\n    await storage.save({\n        key: cookieName + \"refreshToken\",\n        data: g.refreshToken,\n        expires: 3600 * 1000 * 24\n    });\n\n    await storage.save({\n        key: cookieName + \"session\",\n        data: g.session,\n        expires: null\n    });\n}\n"],"names":["NotFoundError","Error","constructor","message","name","stack","ExpiredError","Storage","options","_SIZE","size","sync","defaultExpires","undefined","enableCache","_s","storageBackend","_innerVersion","cache","setItem","promiseTest","isPromise","then","e","console","warn","_mapPromise","getItem","map","_m","_checkMap","JSON","parse","key","Promise","resolve","value","removeItem","_initMap","innerVersion","index","__keys__","_getId","id","_saveToMap","params","data","newId","m","oldId","splitOldId","split","_removeIdInKey","push","cacheData","currentIndex","stringify","save","rawData","expires","toString","indexOf","error","dataToSave","now","Date","getBatchData","querys","all","query","load","getBatchDataWithIds","ids","syncInBackground","syncParams","tasks","autoSync","batched","results","missingIds","forEach","syncId","length","syncData","shift","_lookupGlobalItem","_loadGlobalItem","ret","_noItemFound","_loadMapItem","_lookUpInMap","remove","idTobeDeleted","indexTobeRemoved","splice","clearAll","clear","clearMap","clearMapForKey","getIdsForKey","getAllDataForKey","Object","assign","RN","require","storage","AsyncStorage","getCacheTokens","cookieName","cacheToken","cacheRefreshToken","cacheSession","_","clearCacheTokens","setCacheTokens","g","token","refreshToken","session"],"mappings":"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"}