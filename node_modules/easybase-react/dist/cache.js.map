{"version":3,"file":"cache.js","sources":["../src/storage/error.js","../src/storage/index.js","../src/cache.ts"],"sourcesContent":["/**\n * Ported from https://github.com/sunnylqm/react-native-storage\n * Credit: Sunny Luo /sunnylqm\n */\n\n/**\n * Created by sunny on 9/1/16.\n */\n\nexport class NotFoundError extends Error {\n    constructor(message) {\n        super(`Not Found! Params: ${message}`);\n        this.name = 'NotFoundError';\n        this.stack = new Error().stack; // Optional\n    }\n}\n// NotFoundError.prototype = Object.create(Error.prototype);\n\nexport class ExpiredError extends Error {\n    constructor(message) {\n        super(`Expired! Params: ${message}`);\n        this.name = 'ExpiredError';\n        this.stack = new Error().stack; // Optional\n    }\n}\n","/* eslint-disable */\n\n/**\n * Ported from https://github.com/sunnylqm/react-native-storage\n * Credit: Sunny Luo /sunnylqm\n */\n\n/*\n *  local storage(web/react native) wrapper\n *  sunnylqm\n */\nimport { NotFoundError, ExpiredError } from './error';\n\nexport { NotFoundError, ExpiredError };\n\nexport default class Storage {\n    constructor(options = {}) {\n        this._SIZE = options.size || 1000; // maximum key-ids capacity\n        this.sync = options.sync || {}; // remote sync method\n        this.defaultExpires = options.defaultExpires !== undefined ? options.defaultExpires : 1000 * 3600 * 24;\n        this.enableCache = options.enableCache !== false;\n        this._s = options.storageBackend || null;\n        this._innerVersion = 11;\n        this.cache = {};\n\n        if (this._s && this._s.setItem) {\n            try {\n                var promiseTest = this._s.setItem('__react_native_storage_test', 'test');\n                this.isPromise = !!(promiseTest && promiseTest.then);\n            } catch (e) {\n                console.warn(e);\n                delete this._s;\n                throw e;\n            }\n        } else {\n            console.warn(`Data would be lost after reload cause there is no storageBackend specified!\n      \\nEither use localStorage(for web) or AsyncStorage(for React Native) as a storageBackend.`);\n        }\n\n        this._mapPromise = this.getItem('map').then(map => {\n            this._m = this._checkMap((map && JSON.parse(map)) || {});\n        });\n    }\n    getItem(key) {\n        return this._s\n            ? this.isPromise\n                ? this._s.getItem(key)\n                : Promise.resolve(this._s.getItem(key))\n            : Promise.resolve();\n    }\n    setItem(key, value) {\n        return this._s\n            ? this.isPromise\n                ? this._s.setItem(key, value)\n                : Promise.resolve(this._s.setItem(key, value))\n            : Promise.resolve();\n    }\n    removeItem(key) {\n        return this._s\n            ? this.isPromise\n                ? this._s.removeItem(key)\n                : Promise.resolve(this._s.removeItem(key))\n            : Promise.resolve();\n    }\n    _initMap() {\n        return {\n            innerVersion: this._innerVersion,\n            index: 0,\n            __keys__: {},\n        };\n    }\n    _checkMap(map) {\n        if (map && map.innerVersion && map.innerVersion === this._innerVersion) {\n            return map;\n        } else {\n            return this._initMap();\n        }\n    }\n    _getId(key, id) {\n        return key + '_' + id;\n    }\n    _saveToMap(params) {\n        let { key, id, data } = params,\n            newId = this._getId(key, id),\n            m = this._m;\n        if (m[newId] !== undefined) {\n            // update existing data\n            if (this.enableCache) this.cache[newId] = JSON.parse(data);\n            return this.setItem('map_' + m[newId], data);\n        }\n        if (m[m.index] !== undefined) {\n            // loop over, delete old data\n            let oldId = m[m.index];\n            let splitOldId = oldId.split('_');\n            delete m[oldId];\n            this._removeIdInKey(splitOldId[0], splitOldId[1]);\n            if (this.enableCache) {\n                delete this.cache[oldId];\n            }\n        }\n        m[newId] = m.index;\n        m[m.index] = newId;\n\n        m.__keys__[key] = m.__keys__[key] || [];\n        m.__keys__[key].push(id);\n\n        if (this.enableCache) {\n            const cacheData = JSON.parse(data);\n            this.cache[newId] = cacheData;\n        }\n        let currentIndex = m.index;\n        if (++m.index === this._SIZE) {\n            m.index = 0;\n        }\n        this.setItem('map_' + currentIndex, data);\n        this.setItem('map', JSON.stringify(m));\n    }\n    save(params) {\n        const { key, id, data, rawData, expires = this.defaultExpires } = params;\n        if (key.toString().indexOf('_') !== -1) {\n            console.error('Please do not use \"_\" in key!');\n        }\n        let dataToSave = { rawData: data };\n        if (data === undefined) {\n            if (rawData !== undefined) {\n                console.warn('\"rawData\" is deprecated, please use \"data\" instead!');\n                dataToSave.rawData = rawData;\n            } else {\n                console.error('\"data\" is required in save()!');\n                return;\n            }\n        }\n        let now = Date.now();\n        if (expires !== null) {\n            dataToSave.expires = now + expires;\n        }\n        dataToSave = JSON.stringify(dataToSave);\n        if (id === undefined) {\n            if (this.enableCache) {\n                const cacheData = JSON.parse(dataToSave);\n                this.cache[key] = cacheData;\n            }\n            return this.setItem(key, dataToSave);\n        } else {\n            if (id.toString().indexOf('_') !== -1) {\n                console.error('Please do not use \"_\" in id!');\n            }\n            return this._mapPromise.then(() =>\n                this._saveToMap({\n                    key,\n                    id,\n                    data: dataToSave,\n                }),\n            );\n        }\n    }\n    getBatchData(querys) {\n        return Promise.all(querys.map(query => this.load(query)));\n    }\n    async getBatchDataWithIds(params) {\n        let { key, ids, syncInBackground, syncParams } = params;\n        const tasks = ids.map(id =>\n            this.load({\n                key,\n                id,\n                syncInBackground,\n                autoSync: false,\n                batched: true,\n            }),\n        );\n        const results = await Promise.all(tasks);\n        const missingIds = [];\n        results.forEach(value => {\n            if (value.syncId !== undefined) {\n                missingIds.push(value.syncId);\n            }\n        });\n        if (missingIds.length) {\n            const syncData = await this.sync[key]({\n                id: missingIds,\n                syncParams,\n            });\n            return results.map(value => {\n                return value.syncId ? syncData.shift() : value;\n            });\n        } else {\n            return results;\n        }\n    }\n    _lookupGlobalItem(params) {\n        const { key } = params;\n        if (this.enableCache && this.cache[key] !== undefined) {\n            return this._loadGlobalItem({ ret: this.cache[key], ...params });\n        }\n        return this.getItem(key).then(ret => this._loadGlobalItem({ ret, ...params }));\n    }\n    _loadGlobalItem(params) {\n        let { key, ret, autoSync, syncInBackground, syncParams } = params;\n        if (ret === null || ret === undefined) {\n            if (autoSync && this.sync[key]) {\n                return this.sync[key]({ syncParams });\n            }\n            throw new NotFoundError(JSON.stringify(params));\n        }\n        if (typeof ret === 'string') {\n            ret = JSON.parse(ret);\n            if (this.enableCache) {\n                this.cache[key] = ret;\n            }\n        }\n        let now = Date.now();\n        if (ret.expires < now) {\n            if (autoSync && this.sync[key]) {\n                if (syncInBackground) {\n                    try {\n                        this.sync[key]({ syncParams, syncInBackground });\n                    } catch (e) {\n                        // avoid uncaught exception\n                    }\n                    return ret.rawData;\n                }\n                return this.sync[key]({ syncParams, syncInBackground });\n            }\n            throw new ExpiredError(JSON.stringify(params));\n        }\n        return ret.rawData;\n    }\n    _noItemFound(params) {\n        let { key, id, autoSync, syncParams } = params;\n        if (this.sync[key]) {\n            if (autoSync) {\n                return this.sync[key]({ id, syncParams });\n            }\n            return { syncId: id };\n        }\n        throw new NotFoundError(JSON.stringify(params));\n    }\n    _loadMapItem(params) {\n        let { ret, key, id, autoSync, batched, syncInBackground, syncParams } = params;\n        if (ret === null || ret === undefined) {\n            return this._noItemFound(params);\n        }\n        if (typeof ret === 'string') {\n            ret = JSON.parse(ret);\n            const { key, id } = params;\n            const newId = this._getId(key, id);\n            if (this.enableCache) {\n                this.cache[newId] = ret;\n            }\n        }\n        let now = Date.now();\n        if (ret.expires < now) {\n            if (autoSync && this.sync[key]) {\n                if (syncInBackground) {\n                    try {\n                        this.sync[key]({ id, syncParams, syncInBackground });\n                    } catch (e) {\n                        // avoid uncaught exception\n                    }\n                    return ret.rawData;\n                }\n                return this.sync[key]({ id, syncParams, syncInBackground });\n            }\n            if (batched) {\n                return { syncId: id };\n            }\n            throw new ExpiredError(JSON.stringify(params));\n        }\n        return ret.rawData;\n    }\n    _lookUpInMap(params) {\n        let ret;\n        const m = this._m;\n        const { key, id } = params;\n        const newId = this._getId(key, id);\n        if (this.enableCache && this.cache[newId]) {\n            ret = this.cache[newId];\n            return this._loadMapItem({ ret, ...params });\n        }\n        if (m[newId] !== undefined) {\n            return this.getItem('map_' + m[newId]).then(ret => this._loadMapItem({ ret, ...params }));\n        }\n        return this._noItemFound({ ret, ...params });\n    }\n    remove(params) {\n        return this._mapPromise.then(() => {\n            let m = this._m;\n            let { key, id } = params;\n\n            if (id === undefined) {\n                if (this.enableCache && this.cache[key]) {\n                    delete this.cache[key];\n                }\n                return this.removeItem(key);\n            }\n            let newId = this._getId(key, id);\n\n            // remove existing data\n            if (m[newId] !== undefined) {\n                if (this.enableCache && this.cache[newId]) {\n                    delete this.cache[newId];\n                }\n                this._removeIdInKey(key, id);\n                let idTobeDeleted = m[newId];\n                delete m[newId];\n                this.setItem('map', JSON.stringify(m));\n                return this.removeItem('map_' + idTobeDeleted);\n            }\n        });\n    }\n    _removeIdInKey(key, id) {\n        const indexTobeRemoved = (this._m.__keys__[key] || []).indexOf(id);\n        if (indexTobeRemoved !== -1) {\n            this._m.__keys__[key].splice(indexTobeRemoved, 1);\n        }\n    }\n    load(params) {\n        const { key, id, autoSync = true, syncInBackground = true, syncParams, batched } = params;\n        return this._mapPromise.then(() => {\n            if (id === undefined) {\n                return this._lookupGlobalItem({\n                    key,\n                    autoSync,\n                    syncInBackground,\n                    syncParams,\n                });\n            } else {\n                return this._lookUpInMap({\n                    key,\n                    id,\n                    autoSync,\n                    syncInBackground,\n                    batched,\n                    syncParams,\n                });\n            }\n        });\n    }\n    clearAll() {\n        this._s.clear && this._s.clear();\n        this._m = this._initMap();\n    }\n    clearMap() {\n        return this.removeItem('map').then(() => {\n            this.cache = {};\n            this._m = this._initMap();\n        });\n    }\n    clearMapForKey(key) {\n        return this._mapPromise.then(() => {\n            let tasks = (this._m.__keys__[key] || []).map(id => this.remove({ key, id }));\n            return Promise.all(tasks);\n        });\n    }\n    getIdsForKey(key) {\n        return this._mapPromise.then(() => {\n            return this._m.__keys__[key] || [];\n        });\n    }\n    getAllDataForKey(key, options) {\n        options = Object.assign({ syncInBackground: true }, options);\n        return this.getIdsForKey(key).then(ids => {\n            const querys = ids.map(id => ({ key, id, syncInBackground: options.syncInBackground }));\n            return this.getBatchData(querys);\n        });\n    }\n}\n","import Storage from './storage';\n\nconst storage = typeof window !== 'undefined' ? new Storage({ storageBackend: window.localStorage }) : undefined;\n\n// https://github.com/sunnylqm/react-native-storage\nexport async function getCacheTokens(cookieName: string): Promise<Record<string, any>> {\n    let cacheToken = false;\n    let cacheRefreshToken = false;\n    let cacheSession = false;\n\n    if (storage) {\n        try {\n            cacheToken = await storage.load({ key: cookieName + \"token\" });\n        } catch (_) { }\n\n        try {\n            cacheRefreshToken = await storage.load({ key: cookieName + \"refreshToken\" });\n        } catch (_) { }\n\n        try {\n            cacheSession = await storage.load({ key: cookieName + \"session\" });\n        } catch (_) { }\n    }\n\n    return {\n        cacheToken,\n        cacheRefreshToken,\n        cacheSession\n    }\n}\n\nexport async function clearCacheTokens(cookieName: string) {\n    if (storage) {\n        await storage.remove({ key: cookieName + \"token\" });\n        await storage.remove({ key: cookieName + \"refreshToken\" });\n        await storage.remove({ key: cookieName + \"session\" });\n    }\n}\n\nexport async function setCacheTokens(g: any, cookieName: string) {\n    if (storage) {\n        await storage.save({\n            key: cookieName + \"token\",\n            data: g.token,\n            expires: 3600 * 1000 * 24\n        });\n\n        await storage.save({\n            key: cookieName + \"refreshToken\",\n            data: g.refreshToken,\n            expires: 3600 * 1000 * 24\n        });\n\n        await storage.save({\n            key: cookieName + \"session\",\n            data: g.session,\n            expires: null\n        });\n    }\n}\n"],"names":["NotFoundError","message","name","stack","Error","ExpiredError","Storage","options","_SIZE","size","sync","defaultExpires","undefined","enableCache","_s","storageBackend","_innerVersion","cache","setItem","promiseTest","isPromise","then","e","console","warn","_mapPromise","getItem","map","_m","_checkMap","JSON","parse","key","Promise","resolve","value","removeItem","_initMap","innerVersion","index","__keys__","_getId","id","_saveToMap","params","data","newId","m","oldId","splitOldId","split","_removeIdInKey","push","cacheData","currentIndex","stringify","save","rawData","expires","toString","indexOf","error","dataToSave","now","Date","getBatchData","querys","all","query","load","getBatchDataWithIds","ids","syncInBackground","syncParams","tasks","autoSync","batched","results","missingIds","forEach","syncId","length","syncData","shift","_lookupGlobalItem","_loadGlobalItem","ret","_noItemFound","_loadMapItem","_lookUpInMap","remove","idTobeDeleted","indexTobeRemoved","splice","clearAll","clear","clearMap","clearMapForKey","getIdsForKey","getAllDataForKey","Object","assign","setCacheTokens","g","cookieName","storage","token","refreshToken","session","clearCacheTokens","getCacheTokens","cacheToken","cacheRefreshToken","cacheSession","window","localStorage"],"mappings":"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"}