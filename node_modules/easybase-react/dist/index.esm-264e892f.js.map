{"version":3,"file":"index.esm-264e892f.js","sources":["../node_modules/react-hook-form/dist/index.esm.js"],"sourcesContent":["import * as React from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (data) => data instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\r\nvar isObject = (value) => !isNullOrUndefined(value) &&\r\n    !Array.isArray(value) &&\r\n    isObjectType(value) &&\r\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\r\n    ? isCheckBoxInput(event.target)\r\n        ? event.target.checked\r\n        : event.target.value\r\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/.\\d/)) || name;\n\nvar isNameInFieldArray = (names, name) => [...names].some((current) => getNodeParentName(name) === current);\n\nvar compact = (value) => (value || []).filter(Boolean);\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (obj, path, defaultValue) => {\r\n    if (isObject(obj) && path) {\r\n        const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => (isNullOrUndefined(result) ? result : result[key]), obj);\r\n        return isUndefined(result) || result === obj\r\n            ? isUndefined(obj[path])\r\n                ? defaultValue\r\n                : obj[path]\r\n            : result;\r\n    }\r\n    return undefined;\r\n};\n\nconst EVENTS = {\r\n    BLUR: 'blur',\r\n    CHANGE: 'change',\r\n};\r\nconst VALIDATION_MODE = {\r\n    onBlur: 'onBlur',\r\n    onChange: 'onChange',\r\n    onSubmit: 'onSubmit',\r\n    onTouched: 'onTouched',\r\n    all: 'all',\r\n};\r\nconst INPUT_VALIDATION_RULES = {\r\n    max: 'max',\r\n    min: 'min',\r\n    maxLength: 'maxLength',\r\n    minLength: 'minLength',\r\n    pattern: 'pattern',\r\n    required: 'required',\r\n    validate: 'validate',\r\n};\n\nvar omit = (source, key) => {\r\n    const copy = Object.assign({}, source);\r\n    delete copy[key];\r\n    return copy;\r\n};\n\nconst HookFormContext = React.createContext(null);\r\nconst useFormContext = () => React.useContext(HookFormContext);\r\nconst FormProvider = (props) => (React.createElement(HookFormContext.Provider, { value: omit(props, 'children') }, props.children));\n\nvar getProxyFormState = (formState, _proxyFormState, localProxyFormState, isRoot = true) => {\r\n    function createGetter(prop) {\r\n        return () => {\r\n            if (prop in formState) {\r\n                if (_proxyFormState[prop] !== VALIDATION_MODE.all) {\r\n                    _proxyFormState[prop] = !isRoot || VALIDATION_MODE.all;\r\n                }\r\n                localProxyFormState && (localProxyFormState[prop] = true);\r\n                return formState[prop];\r\n            }\r\n            return undefined;\r\n        };\r\n    }\r\n    const result = {};\r\n    for (const key in formState) {\r\n        Object.defineProperty(result, key, {\r\n            get: createGetter(key),\r\n        });\r\n    }\r\n    return result;\r\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, isRoot) => {\r\n    const formState = omit(formStateData, 'name');\r\n    return (isEmptyObject(formState) ||\r\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\r\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\r\n            (!isRoot || VALIDATION_MODE.all)));\r\n};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar shouldSubscribeByName = (name, signalName, exact) => exact && signalName\r\n    ? name === signalName\r\n    : !name ||\r\n        !signalName ||\r\n        name === signalName ||\r\n        convertToArrayPayload(name).some((currentName) => currentName &&\r\n            (currentName.startsWith(signalName) ||\r\n                signalName.startsWith(currentName)));\n\nfunction useSubscribe(props) {\r\n    const _props = React.useRef(props);\r\n    _props.current = props;\r\n    React.useEffect(() => {\r\n        const tearDown = (subscription) => {\r\n            if (subscription) {\r\n                subscription.unsubscribe();\r\n            }\r\n        };\r\n        const subscription = !props.disabled &&\r\n            _props.current.subject.subscribe({\r\n                next: _props.current.callback,\r\n            });\r\n        return () => tearDown(subscription);\r\n    }, [props.disabled]);\r\n}\n\nfunction useFormState(props) {\r\n    const methods = useFormContext();\r\n    const { control = methods.control, disabled, name, exact } = props || {};\r\n    const [formState, updateFormState] = React.useState(control._formState);\r\n    const _localProxyFormState = React.useRef({\r\n        isDirty: false,\r\n        dirtyFields: false,\r\n        touchedFields: false,\r\n        isValidating: false,\r\n        isValid: false,\r\n        errors: false,\r\n    });\r\n    const _name = React.useRef(name);\r\n    _name.current = name;\r\n    useSubscribe({\r\n        disabled,\r\n        callback: (value) => shouldSubscribeByName(_name.current, value.name, exact) &&\r\n            shouldRenderFormState(value, _localProxyFormState.current) &&\r\n            updateFormState(Object.assign(Object.assign({}, control._formState), value)),\r\n        subject: control._subjects.state,\r\n    });\r\n    return getProxyFormState(formState, control._proxyFormState, _localProxyFormState.current, false);\r\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal) => {\r\n    const isArray = Array.isArray(names);\r\n    if (isString(names)) {\r\n        isGlobal && _names.watch.add(names);\r\n        return get(formValues, names);\r\n    }\r\n    if (isArray) {\r\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName),\r\n            get(formValues, fieldName)));\r\n    }\r\n    isGlobal && (_names.watchAll = true);\r\n    return formValues;\r\n};\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar objectHasFunction = (data) => {\r\n    for (const key in data) {\r\n        if (isFunction(data[key])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\n\nfunction useWatch(props) {\r\n    const methods = useFormContext();\r\n    const { control = methods.control, name, defaultValue, disabled, exact, } = props || {};\r\n    const _name = React.useRef(name);\r\n    _name.current = name;\r\n    useSubscribe({\r\n        disabled,\r\n        subject: control._subjects.watch,\r\n        callback: (formState) => {\r\n            if (shouldSubscribeByName(_name.current, formState.name, exact)) {\r\n                const fieldValues = generateWatchOutput(_name.current, control._names, formState.values || control._formValues);\r\n                updateValue(isUndefined(_name.current) ||\r\n                    (isObject(fieldValues) && !objectHasFunction(fieldValues))\r\n                    ? Object.assign({}, fieldValues) : Array.isArray(fieldValues)\r\n                    ? [...fieldValues]\r\n                    : fieldValues);\r\n            }\r\n        },\r\n    });\r\n    const [value, updateValue] = React.useState(isUndefined(defaultValue)\r\n        ? control._getWatch(name)\r\n        : defaultValue);\r\n    React.useEffect(() => {\r\n        control._removeUnmounted();\r\n    });\r\n    return value;\r\n}\n\nfunction useController(props) {\r\n    const methods = useFormContext();\r\n    const { name, control = methods.control, shouldUnregister } = props;\r\n    const isArrayField = isNameInFieldArray(control._names.array, name);\r\n    const value = useWatch({\r\n        control,\r\n        name,\r\n        defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),\r\n        exact: !isArrayField,\r\n    });\r\n    const formState = useFormState({\r\n        control,\r\n        name,\r\n    });\r\n    const _name = React.useRef(name);\r\n    _name.current = name;\r\n    const registerProps = control.register(name, Object.assign(Object.assign({}, props.rules), { value }));\r\n    React.useEffect(() => {\r\n        const updateMounted = (name, value) => {\r\n            const field = get(control._fields, name);\r\n            if (field) {\r\n                field._f.mount = value;\r\n            }\r\n        };\r\n        updateMounted(name, true);\r\n        return () => {\r\n            const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\r\n            if (isArrayField\r\n                ? _shouldUnregisterField && !control._stateFlags.action\r\n                : _shouldUnregisterField) {\r\n                control.unregister(name, { keepDefaultValue: true });\r\n            }\r\n            else {\r\n                updateMounted(name, false);\r\n            }\r\n        };\r\n    }, [name, control, isArrayField, shouldUnregister]);\r\n    return {\r\n        field: {\r\n            onChange: (event) => {\r\n                registerProps.onChange({\r\n                    target: {\r\n                        value: getEventValue(event),\r\n                        name: name,\r\n                    },\r\n                    type: EVENTS.CHANGE,\r\n                });\r\n            },\r\n            onBlur: () => {\r\n                registerProps.onBlur({\r\n                    target: {\r\n                        value: get(control._formValues, name),\r\n                        name: name,\r\n                    },\r\n                    type: EVENTS.BLUR,\r\n                });\r\n            },\r\n            name,\r\n            value,\r\n            ref: (elm) => {\r\n                const field = get(control._fields, name);\r\n                if (elm && field && elm.focus) {\r\n                    field._f.ref = {\r\n                        focus: () => elm.focus(),\r\n                        setCustomValidity: (message) => elm.setCustomValidity(message),\r\n                        reportValidity: () => elm.reportValidity(),\r\n                    };\r\n                }\r\n            },\r\n        },\r\n        formState,\r\n        fieldState: {\r\n            invalid: !!get(formState.errors, name),\r\n            isDirty: !!get(formState.dirtyFields, name),\r\n            isTouched: !!get(formState.touchedFields, name),\r\n            error: get(formState.errors, name),\r\n        },\r\n    };\r\n}\n\nconst Controller = (props) => props.render(useController(props));\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\r\n    ? Object.assign(Object.assign({}, errors[name]), { types: Object.assign(Object.assign({}, (errors[name] && errors[name].types ? errors[name].types : {})), { [type]: message || true }) }) : {};\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nfunction set(object, path, value) {\r\n    let index = -1;\r\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\r\n    const length = tempPath.length;\r\n    const lastIndex = length - 1;\r\n    while (++index < length) {\r\n        const key = tempPath[index];\r\n        let newValue = value;\r\n        if (index !== lastIndex) {\r\n            const objValue = object[key];\r\n            newValue =\r\n                isObject(objValue) || Array.isArray(objValue)\r\n                    ? objValue\r\n                    : !isNaN(+tempPath[index + 1])\r\n                        ? []\r\n                        : {};\r\n        }\r\n        object[key] = newValue;\r\n        object = object[key];\r\n    }\r\n    return object;\r\n}\n\nconst focusFieldBy = (fields, callback, fieldsNames) => {\r\n    for (const key of fieldsNames || Object.keys(fields)) {\r\n        const field = get(fields, key);\r\n        if (field) {\r\n            const _f = field._f;\r\n            const current = omit(field, '_f');\r\n            if (_f && callback(_f.name)) {\r\n                if (_f.ref.focus && isUndefined(_f.ref.focus())) {\r\n                    break;\r\n                }\r\n                else if (_f.refs) {\r\n                    _f.refs[0].focus();\r\n                    break;\r\n                }\r\n            }\r\n            else if (isObject(current)) {\r\n                focusFieldBy(current, callback);\r\n            }\r\n        }\r\n    }\r\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\r\n    ? options.focusName ||\r\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\r\n    : '';\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\r\n    (_names.watchAll ||\r\n        _names.watch.has(name) ||\r\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\r\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nvar mapCurrentIds = (values, _fieldIds, keyName) => values.map((value, index) => {\r\n    const output = _fieldIds.current[index];\r\n    return Object.assign(Object.assign({}, value), (output ? { [keyName]: output[keyName] } : {}));\r\n});\n\nvar generateId = () => {\r\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n        const r = (Math.random() * 16 + d) % 16 | 0;\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n};\n\nvar mapIds = (values = [], keyName) => values.map((value) => (Object.assign(Object.assign({}, (value[keyName] ? {} : { [keyName]: generateId() })), value)));\n\nfunction append(data, value) {\r\n    return [...convertToArrayPayload(data), ...convertToArrayPayload(value)];\r\n}\n\nfunction cloneObject(data) {\r\n    let copy;\r\n    const isArray = Array.isArray(data);\r\n    if (data instanceof Date) {\r\n        copy = new Date(data);\r\n    }\r\n    else if (data instanceof Set) {\r\n        copy = new Set(data);\r\n    }\r\n    else if (isArray || isObject(data)) {\r\n        copy = isArray ? [] : {};\r\n        for (const key in data) {\r\n            if (isFunction(data[key])) {\r\n                copy = data;\r\n                break;\r\n            }\r\n            copy[key] = cloneObject(data[key]);\r\n        }\r\n    }\r\n    else {\r\n        return data;\r\n    }\r\n    return copy;\r\n}\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nfunction insert(data, index, value) {\r\n    return [\r\n        ...data.slice(0, index),\r\n        ...convertToArrayPayload(value),\r\n        ...data.slice(index),\r\n    ];\r\n}\n\nvar moveArrayAt = (data, from, to) => {\r\n    if (Array.isArray(data)) {\r\n        if (isUndefined(data[to])) {\r\n            data[to] = undefined;\r\n        }\r\n        data.splice(to, 0, data.splice(from, 1)[0]);\r\n        return data;\r\n    }\r\n    return [];\r\n};\n\nvar omitKeys = (fields, keyName) => fields.map((field = {}) => omit(field, keyName));\n\nfunction prepend(data, value) {\r\n    return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\r\n}\n\nfunction removeAtIndexes(data, indexes) {\r\n    let i = 0;\r\n    const temp = [...data];\r\n    for (const index of indexes) {\r\n        temp.splice(index - i, 1);\r\n        i++;\r\n    }\r\n    return compact(temp).length ? temp : [];\r\n}\r\nvar removeArrayAt = (data, index) => isUndefined(index)\r\n    ? []\r\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\r\n    data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\r\n};\n\nvar updateAt = (fieldValues, index, value) => {\r\n    fieldValues[index] = value;\r\n    return fieldValues;\r\n};\n\nconst useFieldArray = (props) => {\r\n    const methods = useFormContext();\r\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\r\n    const [fields, setFields] = React.useState(mapIds(control._getFieldArray(name), keyName));\r\n    const _fieldIds = React.useRef(fields);\r\n    const _name = React.useRef(name);\r\n    const _actioned = React.useRef(false);\r\n    _name.current = name;\r\n    _fieldIds.current = fields;\r\n    control._names.array.add(name);\r\n    useSubscribe({\r\n        callback: ({ values, name: fieldArrayName }) => {\r\n            if (fieldArrayName === _name.current || !fieldArrayName) {\r\n                setFields(mapIds(get(values, _name.current), keyName));\r\n            }\r\n        },\r\n        subject: control._subjects.array,\r\n    });\r\n    const updateValues = React.useCallback((updatedFieldArrayValuesWithKey) => {\r\n        const updatedFieldArrayValues = omitKeys(updatedFieldArrayValuesWithKey, keyName);\r\n        _actioned.current = true;\r\n        set(control._formValues, name, updatedFieldArrayValues);\r\n        return updatedFieldArrayValues;\r\n    }, [control, name, keyName]);\r\n    const append$1 = (value, options) => {\r\n        const appendValue = convertToArrayPayload(cloneObject(value));\r\n        const updatedFieldArrayValuesWithKey = append(mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName), mapIds(appendValue, keyName));\r\n        const fieldArrayValues = updateValues(updatedFieldArrayValuesWithKey);\r\n        control._names.focus = getFocusFieldName(name, fieldArrayValues.length - 1, options);\r\n        setFields(updatedFieldArrayValuesWithKey);\r\n        control._updateFieldArray(name, append, {\r\n            argA: fillEmptyArray(value),\r\n        }, fieldArrayValues);\r\n    };\r\n    const prepend$1 = (value, options) => {\r\n        const updatedFieldArrayValuesWithKey = prepend(mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName), mapIds(convertToArrayPayload(cloneObject(value)), keyName));\r\n        const fieldArrayValues = updateValues(updatedFieldArrayValuesWithKey);\r\n        control._names.focus = getFocusFieldName(name, 0, options);\r\n        setFields(updatedFieldArrayValuesWithKey);\r\n        control._updateFieldArray(name, prepend, {\r\n            argA: fillEmptyArray(value),\r\n        }, fieldArrayValues);\r\n    };\r\n    const remove = (index) => {\r\n        const updatedFieldArrayValuesWithKey = removeArrayAt(mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName), index);\r\n        const fieldArrayValues = updateValues(updatedFieldArrayValuesWithKey);\r\n        setFields(updatedFieldArrayValuesWithKey);\r\n        control._updateFieldArray(name, removeArrayAt, {\r\n            argA: index,\r\n        }, fieldArrayValues);\r\n    };\r\n    const insert$1 = (index, value, options) => {\r\n        const updatedFieldArrayValuesWithKey = insert(mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName), index, mapIds(convertToArrayPayload(cloneObject(value)), keyName));\r\n        const fieldArrayValues = updateValues(updatedFieldArrayValuesWithKey);\r\n        control._names.focus = getFocusFieldName(name, index, options);\r\n        setFields(updatedFieldArrayValuesWithKey);\r\n        control._updateFieldArray(name, insert, {\r\n            argA: index,\r\n            argB: fillEmptyArray(value),\r\n        }, fieldArrayValues);\r\n    };\r\n    const swap = (indexA, indexB) => {\r\n        const updatedFieldArrayValuesWithKey = mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName);\r\n        swapArrayAt(updatedFieldArrayValuesWithKey, indexA, indexB);\r\n        const fieldArrayValues = updateValues(updatedFieldArrayValuesWithKey);\r\n        setFields(updatedFieldArrayValuesWithKey);\r\n        control._updateFieldArray(name, swapArrayAt, {\r\n            argA: indexA,\r\n            argB: indexB,\r\n        }, fieldArrayValues, false);\r\n    };\r\n    const move = (from, to) => {\r\n        const updatedFieldArrayValuesWithKey = mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName);\r\n        moveArrayAt(updatedFieldArrayValuesWithKey, from, to);\r\n        const fieldArrayValues = updateValues(updatedFieldArrayValuesWithKey);\r\n        setFields(updatedFieldArrayValuesWithKey);\r\n        control._updateFieldArray(name, moveArrayAt, {\r\n            argA: from,\r\n            argB: to,\r\n        }, fieldArrayValues, false);\r\n    };\r\n    const update = (index, value) => {\r\n        const updatedFieldArrayValuesWithKey = mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName);\r\n        const updatedFieldArrayValues = updateAt(updatedFieldArrayValuesWithKey, index, value);\r\n        _fieldIds.current = mapIds(updatedFieldArrayValues, keyName);\r\n        const fieldArrayValues = updateValues(_fieldIds.current);\r\n        setFields(_fieldIds.current);\r\n        control._updateFieldArray(name, updateAt, {\r\n            argA: index,\r\n            argB: value,\r\n        }, fieldArrayValues, true, false);\r\n    };\r\n    const replace = (value) => {\r\n        const updatedFieldArrayValuesWithKey = mapIds(convertToArrayPayload(value), keyName);\r\n        const fieldArrayValues = updateValues(updatedFieldArrayValuesWithKey);\r\n        setFields(updatedFieldArrayValuesWithKey);\r\n        control._updateFieldArray(name, () => updatedFieldArrayValuesWithKey, {}, fieldArrayValues, true, false);\r\n    };\r\n    React.useEffect(() => {\r\n        control._stateFlags.action = false;\r\n        isWatched(name, control._names) && control._subjects.state.next({});\r\n        if (_actioned.current) {\r\n            control._executeSchema([name]).then((result) => {\r\n                const error = get(result.errors, name);\r\n                if (error && error.type && !get(control._formState.errors, name)) {\r\n                    set(control._formState.errors, name, error);\r\n                    control._subjects.state.next({\r\n                        errors: control._formState.errors,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        control._subjects.watch.next({\r\n            name,\r\n            values: control._formValues,\r\n        });\r\n        control._names.focus &&\r\n            focusFieldBy(control._fields, (key) => key.startsWith(control._names.focus));\r\n        control._names.focus = '';\r\n        control._proxyFormState.isValid && control._updateValid();\r\n    }, [fields, name, control, keyName]);\r\n    React.useEffect(() => {\r\n        !get(control._formValues, name) && set(control._formValues, name, []);\r\n        return () => {\r\n            if (control._options.shouldUnregister || shouldUnregister) {\r\n                control.unregister(name);\r\n            }\r\n        };\r\n    }, [name, control, keyName, shouldUnregister]);\r\n    return {\r\n        swap: React.useCallback(swap, [updateValues, name, control, keyName]),\r\n        move: React.useCallback(move, [updateValues, name, control, keyName]),\r\n        prepend: React.useCallback(prepend$1, [updateValues, name, control, keyName]),\r\n        append: React.useCallback(append$1, [updateValues, name, control, keyName]),\r\n        remove: React.useCallback(remove, [updateValues, name, control, keyName]),\r\n        insert: React.useCallback(insert$1, [updateValues, name, control, keyName]),\r\n        update: React.useCallback(update, [updateValues, name, control, keyName]),\r\n        replace: React.useCallback(replace, [updateValues, name, control, keyName]),\r\n        fields: fields,\r\n    };\r\n};\n\nfunction createSubject() {\r\n    let _observers = [];\r\n    const next = (value) => {\r\n        for (const observer of _observers) {\r\n            observer.next(value);\r\n        }\r\n    };\r\n    const subscribe = (observer) => {\r\n        _observers.push(observer);\r\n        return {\r\n            unsubscribe: () => {\r\n                _observers = _observers.filter((o) => o !== observer);\r\n            },\r\n        };\r\n    };\r\n    const unsubscribe = () => {\r\n        _observers = [];\r\n    };\r\n    return {\r\n        get observers() {\r\n            return _observers;\r\n        },\r\n        next,\r\n        subscribe,\r\n        unsubscribe,\r\n    };\r\n}\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\r\n    if (isPrimitive(object1) || isPrimitive(object2)) {\r\n        return object1 === object2;\r\n    }\r\n    if (isDateObject(object1) && isDateObject(object2)) {\r\n        return object1.getTime() === object2.getTime();\r\n    }\r\n    const keys1 = Object.keys(object1);\r\n    const keys2 = Object.keys(object2);\r\n    if (keys1.length !== keys2.length) {\r\n        return false;\r\n    }\r\n    for (const key of keys1) {\r\n        const val1 = object1[key];\r\n        if (!keys2.includes(key)) {\r\n            return false;\r\n        }\r\n        if (key !== 'ref') {\r\n            const val2 = object2[key];\r\n            if ((isDateObject(val1) && isDateObject(val2)) ||\r\n                (isObject(val1) && isObject(val2)) ||\r\n                (Array.isArray(val1) && Array.isArray(val2))\r\n                ? !deepEqual(val1, val2)\r\n                : val1 !== val2) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\n\nvar getValidationModes = (mode) => ({\r\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\r\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\r\n    isOnChange: mode === VALIDATION_MODE.onChange,\r\n    isOnAll: mode === VALIDATION_MODE.all,\r\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\r\n});\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isHTMLElement = (value) => value instanceof HTMLElement;\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar isWeb = typeof window !== 'undefined' &&\r\n    typeof window.HTMLElement !== 'undefined' &&\r\n    typeof document !== 'undefined';\n\nvar live = (ref) => isHTMLElement(ref) && document.contains(ref);\n\nfunction baseGet(object, updatePath) {\r\n    const length = updatePath.slice(0, -1).length;\r\n    let index = 0;\r\n    while (index < length) {\r\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\r\n    }\r\n    return object;\r\n}\r\nfunction unset(object, path) {\r\n    const updatePath = isKey(path) ? [path] : stringToPath(path);\r\n    const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\r\n    const key = updatePath[updatePath.length - 1];\r\n    let previousObjRef;\r\n    if (childObject) {\r\n        delete childObject[key];\r\n    }\r\n    for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\r\n        let index = -1;\r\n        let objectRef;\r\n        const currentPaths = updatePath.slice(0, -(k + 1));\r\n        const currentPathsLength = currentPaths.length - 1;\r\n        if (k > 0) {\r\n            previousObjRef = object;\r\n        }\r\n        while (++index < currentPaths.length) {\r\n            const item = currentPaths[index];\r\n            objectRef = objectRef ? objectRef[item] : object[item];\r\n            if (currentPathsLength === index &&\r\n                ((isObject(objectRef) && isEmptyObject(objectRef)) ||\r\n                    (Array.isArray(objectRef) &&\r\n                        !objectRef.filter((data) => (isObject(data) && !isEmptyObject(data)) || isBoolean(data)).length))) {\r\n                previousObjRef ? delete previousObjRef[item] : delete object[item];\r\n            }\r\n            previousObjRef = objectRef;\r\n        }\r\n    }\r\n    return object;\r\n}\n\nfunction markFieldsDirty(data, fields = {}) {\r\n    const isParentNodeArray = Array.isArray(data);\r\n    if (isObject(data) || isParentNodeArray) {\r\n        for (const key in data) {\r\n            if (Array.isArray(data[key]) ||\r\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\r\n                fields[key] = Array.isArray(data[key]) ? [] : {};\r\n                markFieldsDirty(data[key], fields[key]);\r\n            }\r\n            else if (!isNullOrUndefined(data[key])) {\r\n                fields[key] = true;\r\n            }\r\n        }\r\n    }\r\n    return fields;\r\n}\r\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\r\n    const isParentNodeArray = Array.isArray(data);\r\n    if (isObject(data) || isParentNodeArray) {\r\n        for (const key in data) {\r\n            if (Array.isArray(data[key]) ||\r\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\r\n                if (isUndefined(formValues) ||\r\n                    isPrimitive(dirtyFieldsFromValues[key])) {\r\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\r\n                        ? markFieldsDirty(data[key], [])\r\n                        : Object.assign({}, markFieldsDirty(data[key]));\r\n                }\r\n                else {\r\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\r\n                }\r\n            }\r\n            else {\r\n                dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\r\n            }\r\n        }\r\n    }\r\n    return dirtyFieldsFromValues;\r\n}\r\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nconst defaultResult = {\r\n    value: false,\r\n    isValid: false,\r\n};\r\nconst validResult = { value: true, isValid: true };\r\nvar getCheckboxValue = (options) => {\r\n    if (Array.isArray(options)) {\r\n        if (options.length > 1) {\r\n            const values = options\r\n                .filter((option) => option && option.checked && !option.disabled)\r\n                .map((option) => option.value);\r\n            return { value: values, isValid: !!values.length };\r\n        }\r\n        return options[0].checked && !options[0].disabled\r\n            ? // @ts-expect-error expected to work in the browser\r\n                options[0].attributes && !isUndefined(options[0].attributes.value)\r\n                    ? isUndefined(options[0].value) || options[0].value === ''\r\n                        ? validResult\r\n                        : { value: options[0].value, isValid: true }\r\n                    : validResult\r\n            : defaultResult;\r\n    }\r\n    return defaultResult;\r\n};\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\r\n    ? value\r\n    : valueAsNumber\r\n        ? value === ''\r\n            ? NaN\r\n            : +value\r\n        : valueAsDate && isString(value)\r\n            ? new Date(value)\r\n            : setValueAs\r\n                ? setValueAs(value)\r\n                : value;\n\nconst defaultReturn = {\r\n    isValid: false,\r\n    value: null,\r\n};\r\nvar getRadioValue = (options) => Array.isArray(options)\r\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\r\n        ? {\r\n            isValid: true,\r\n            value: option.value,\r\n        }\r\n        : previous, defaultReturn)\r\n    : defaultReturn;\n\nfunction getFieldValue(_f) {\r\n    const ref = _f.ref;\r\n    if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\r\n        return;\r\n    }\r\n    if (isFileInput(ref)) {\r\n        return ref.files;\r\n    }\r\n    if (isRadioInput(ref)) {\r\n        return getRadioValue(_f.refs).value;\r\n    }\r\n    if (isMultipleSelect(ref)) {\r\n        return [...ref.selectedOptions].map(({ value }) => value);\r\n    }\r\n    if (isCheckBoxInput(ref)) {\r\n        return getCheckboxValue(_f.refs).value;\r\n    }\r\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\r\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\r\n    const fields = {};\r\n    for (const name of fieldsNames) {\r\n        const field = get(_fields, name);\r\n        field && set(fields, name, field._f);\r\n    }\r\n    return {\r\n        criteriaMode,\r\n        names: [...fieldsNames],\r\n        fields,\r\n        shouldUseNativeValidation,\r\n    };\r\n};\n\nvar isRegex = (value) => value instanceof RegExp;\n\nvar getRuleValue = (rule) => isUndefined(rule)\r\n    ? undefined\r\n    : isRegex(rule)\r\n        ? rule.source\r\n        : isObject(rule)\r\n            ? isRegex(rule.value)\r\n                ? rule.value.source\r\n                : rule.value\r\n            : rule;\n\nvar hasValidation = (options) => options.mount &&\r\n    (options.required ||\r\n        options.min ||\r\n        options.max ||\r\n        options.maxLength ||\r\n        options.minLength ||\r\n        options.pattern ||\r\n        options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\r\n    const error = get(errors, name);\r\n    if (error || isKey(name)) {\r\n        return {\r\n            error,\r\n            name,\r\n        };\r\n    }\r\n    const names = name.split('.');\r\n    while (names.length) {\r\n        const fieldName = names.join('.');\r\n        const field = get(_fields, fieldName);\r\n        const foundError = get(errors, fieldName);\r\n        if (field && !Array.isArray(field) && name !== fieldName) {\r\n            return { name };\r\n        }\r\n        if (foundError && foundError.type) {\r\n            return {\r\n                name: fieldName,\r\n                error: foundError,\r\n            };\r\n        }\r\n        names.pop();\r\n    }\r\n    return {\r\n        name,\r\n    };\r\n}\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\r\n    if (mode.isOnAll) {\r\n        return false;\r\n    }\r\n    else if (!isSubmitted && mode.isOnTouch) {\r\n        return !(isTouched || isBlurEvent);\r\n    }\r\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\r\n        return !isBlurEvent;\r\n    }\r\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\r\n        return isBlurEvent;\r\n    }\r\n    return true;\r\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nvar isMessage = (value) => isString(value) || React.isValidElement(value);\n\nfunction getValidateError(result, ref, type = 'validate') {\r\n    if (isMessage(result) ||\r\n        (Array.isArray(result) && result.every(isMessage)) ||\r\n        (isBoolean(result) && !result)) {\r\n        return {\r\n            type,\r\n            message: isMessage(result) ? result : '',\r\n            ref,\r\n        };\r\n    }\r\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\r\n    ? validationData\r\n    : {\r\n        value: validationData,\r\n        message: '',\r\n    };\n\nvar validateField = async (field, inputValue, validateAllFieldCriteria, shouldUseNativeValidation) => {\r\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, disabled, } = field._f;\r\n    if (!mount || disabled) {\r\n        return {};\r\n    }\r\n    const inputRef = refs ? refs[0] : ref;\r\n    const setCustomValidity = (message) => {\r\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\r\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\r\n            inputRef.reportValidity();\r\n        }\r\n    };\r\n    const error = {};\r\n    const isRadio = isRadioInput(ref);\r\n    const isCheckBox = isCheckBoxInput(ref);\r\n    const isRadioOrCheckbox = isRadio || isCheckBox;\r\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\r\n        inputValue === '' ||\r\n        (Array.isArray(inputValue) && !inputValue.length);\r\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\r\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\r\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\r\n        error[name] = Object.assign({ type: exceedMax ? maxType : minType, message,\r\n            ref }, appendErrorsCurry(exceedMax ? maxType : minType, message));\r\n    };\r\n    if (required &&\r\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\r\n            (isBoolean(inputValue) && !inputValue) ||\r\n            (isCheckBox && !getCheckboxValue(refs).isValid) ||\r\n            (isRadio && !getRadioValue(refs).isValid))) {\r\n        const { value, message } = isMessage(required)\r\n            ? { value: !!required, message: required }\r\n            : getValueAndMessage(required);\r\n        if (value) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.required, message, ref: inputRef }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\r\n        let exceedMax;\r\n        let exceedMin;\r\n        const maxOutput = getValueAndMessage(max);\r\n        const minOutput = getValueAndMessage(min);\r\n        if (!isNaN(inputValue)) {\r\n            const valueNumber = ref.valueAsNumber ||\r\n                parseFloat(inputValue);\r\n            if (!isNullOrUndefined(maxOutput.value)) {\r\n                exceedMax = valueNumber > maxOutput.value;\r\n            }\r\n            if (!isNullOrUndefined(minOutput.value)) {\r\n                exceedMin = valueNumber < minOutput.value;\r\n            }\r\n        }\r\n        else {\r\n            const valueDate = ref.valueAsDate || new Date(inputValue);\r\n            if (isString(maxOutput.value)) {\r\n                exceedMax = valueDate > new Date(maxOutput.value);\r\n            }\r\n            if (isString(minOutput.value)) {\r\n                exceedMin = valueDate < new Date(minOutput.value);\r\n            }\r\n        }\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(error[name].message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if ((maxLength || minLength) && !isEmpty && isString(inputValue)) {\r\n        const maxLengthOutput = getValueAndMessage(maxLength);\r\n        const minLengthOutput = getValueAndMessage(minLength);\r\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\r\n            inputValue.length > maxLengthOutput.value;\r\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\r\n            inputValue.length < minLengthOutput.value;\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(error[name].message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (pattern && !isEmpty && isString(inputValue)) {\r\n        const { value: patternValue, message } = getValueAndMessage(pattern);\r\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.pattern, message,\r\n                ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message));\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (validate) {\r\n        if (isFunction(validate)) {\r\n            const result = await validate(inputValue);\r\n            const validateError = getValidateError(result, inputRef);\r\n            if (validateError) {\r\n                error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\r\n                if (!validateAllFieldCriteria) {\r\n                    setCustomValidity(validateError.message);\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n        else if (isObject(validate)) {\r\n            let validationResult = {};\r\n            for (const key in validate) {\r\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\r\n                    break;\r\n                }\r\n                const validateError = getValidateError(await validate[key](inputValue), inputRef, key);\r\n                if (validateError) {\r\n                    validationResult = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\r\n                    setCustomValidity(validateError.message);\r\n                    if (validateAllFieldCriteria) {\r\n                        error[name] = validationResult;\r\n                    }\r\n                }\r\n            }\r\n            if (!isEmptyObject(validationResult)) {\r\n                error[name] = Object.assign({ ref: inputRef }, validationResult);\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setCustomValidity(true);\r\n    return error;\r\n};\n\nconst defaultOptions = {\r\n    mode: VALIDATION_MODE.onSubmit,\r\n    reValidateMode: VALIDATION_MODE.onChange,\r\n    shouldFocusError: true,\r\n};\r\nfunction createFormControl(props = {}) {\r\n    let _options = Object.assign(Object.assign({}, defaultOptions), props);\r\n    let _formState = {\r\n        isDirty: false,\r\n        isValidating: false,\r\n        dirtyFields: {},\r\n        isSubmitted: false,\r\n        submitCount: 0,\r\n        touchedFields: {},\r\n        isSubmitting: false,\r\n        isSubmitSuccessful: false,\r\n        isValid: false,\r\n        errors: {},\r\n    };\r\n    let _fields = {};\r\n    let _defaultValues = _options.defaultValues || {};\r\n    let _formValues = _options.shouldUnregister\r\n        ? {}\r\n        : cloneObject(_defaultValues);\r\n    let _stateFlags = {\r\n        action: false,\r\n        mount: false,\r\n        watch: false,\r\n    };\r\n    let _names = {\r\n        mount: new Set(),\r\n        unMount: new Set(),\r\n        array: new Set(),\r\n        watch: new Set(),\r\n    };\r\n    let delayErrorCallback;\r\n    let timer = 0;\r\n    let validateFields = {};\r\n    const _proxyFormState = {\r\n        isDirty: false,\r\n        dirtyFields: false,\r\n        touchedFields: false,\r\n        isValidating: false,\r\n        isValid: false,\r\n        errors: false,\r\n    };\r\n    const _subjects = {\r\n        watch: createSubject(),\r\n        array: createSubject(),\r\n        state: createSubject(),\r\n    };\r\n    const validationModeBeforeSubmit = getValidationModes(_options.mode);\r\n    const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\r\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\r\n    const debounce = (callback, wait) => (...args) => {\r\n        clearTimeout(timer);\r\n        timer = window.setTimeout(() => callback(...args), wait);\r\n    };\r\n    const _updateValid = async (shouldSkipRender) => {\r\n        let isValid = false;\r\n        if (_proxyFormState.isValid) {\r\n            isValid = _options.resolver\r\n                ? isEmptyObject((await _executeSchema()).errors)\r\n                : await executeBuildInValidation(_fields, true);\r\n            if (!shouldSkipRender && isValid !== _formState.isValid) {\r\n                _formState.isValid = isValid;\r\n                _subjects.state.next({\r\n                    isValid,\r\n                });\r\n            }\r\n        }\r\n        return isValid;\r\n    };\r\n    const _updateFieldArray = (name, method, args, values = [], shouldSetValues = true, shouldSetFields = true) => {\r\n        _stateFlags.action = true;\r\n        if (shouldSetFields && get(_fields, name)) {\r\n            const fieldValues = method(get(_fields, name), args.argA, args.argB);\r\n            shouldSetValues && set(_fields, name, fieldValues);\r\n        }\r\n        if (Array.isArray(get(_formState.errors, name))) {\r\n            const errors = method(get(_formState.errors, name), args.argA, args.argB);\r\n            shouldSetValues && set(_formState.errors, name, errors);\r\n            unsetEmptyArray(_formState.errors, name);\r\n        }\r\n        if (_proxyFormState.touchedFields && get(_formState.touchedFields, name)) {\r\n            const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\r\n            shouldSetValues &&\r\n                set(_formState.touchedFields, name, touchedFields);\r\n            unsetEmptyArray(_formState.touchedFields, name);\r\n        }\r\n        if (_proxyFormState.dirtyFields || _proxyFormState.isDirty) {\r\n            _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\r\n        }\r\n        _subjects.state.next({\r\n            isDirty: _getDirty(name, values),\r\n            dirtyFields: _formState.dirtyFields,\r\n            errors: _formState.errors,\r\n            isValid: _formState.isValid,\r\n        });\r\n    };\r\n    const updateErrors = (name, error) => (set(_formState.errors, name, error),\r\n        _subjects.state.next({\r\n            errors: _formState.errors,\r\n        }));\r\n    const updateValidAndValue = (name, shouldSkipSetValueAs, ref) => {\r\n        const field = get(_fields, name);\r\n        if (field) {\r\n            const defaultValue = get(_formValues, name, get(_defaultValues, name));\r\n            isUndefined(defaultValue) ||\r\n                (ref && ref.defaultChecked) ||\r\n                shouldSkipSetValueAs\r\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\r\n                : setFieldValue(name, defaultValue);\r\n        }\r\n        _stateFlags.mount && _updateValid();\r\n    };\r\n    const updateTouchAndDirty = (name, fieldValue, isCurrentTouched, shouldRender = true) => {\r\n        let isFieldDirty = false;\r\n        const output = {\r\n            name,\r\n        };\r\n        const isPreviousFieldTouched = get(_formState.touchedFields, name);\r\n        if (_proxyFormState.isDirty) {\r\n            const isPreviousFormDirty = _formState.isDirty;\r\n            _formState.isDirty = output.isDirty = _getDirty();\r\n            isFieldDirty = isPreviousFormDirty !== output.isDirty;\r\n        }\r\n        if (_proxyFormState.dirtyFields && !isCurrentTouched) {\r\n            const isPreviousFieldDirty = get(_formState.dirtyFields, name);\r\n            const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\r\n            isCurrentFieldPristine\r\n                ? unset(_formState.dirtyFields, name)\r\n                : set(_formState.dirtyFields, name, true);\r\n            output.dirtyFields = _formState.dirtyFields;\r\n            isFieldDirty =\r\n                isFieldDirty ||\r\n                    isPreviousFieldDirty !== get(_formState.dirtyFields, name);\r\n        }\r\n        if (isCurrentTouched && !isPreviousFieldTouched) {\r\n            set(_formState.touchedFields, name, isCurrentTouched);\r\n            output.touchedFields = _formState.touchedFields;\r\n            isFieldDirty =\r\n                isFieldDirty ||\r\n                    (_proxyFormState.touchedFields &&\r\n                        isPreviousFieldTouched !== isCurrentTouched);\r\n        }\r\n        isFieldDirty && shouldRender && _subjects.state.next(output);\r\n        return isFieldDirty ? output : {};\r\n    };\r\n    const shouldRenderByError = async (shouldSkipRender, name, isValid, error, fieldState) => {\r\n        const previousFieldError = get(_formState.errors, name);\r\n        const shouldUpdateValid = _proxyFormState.isValid && _formState.isValid !== isValid;\r\n        if (props.delayError && error) {\r\n            delayErrorCallback =\r\n                delayErrorCallback || debounce(updateErrors, props.delayError);\r\n            delayErrorCallback(name, error);\r\n        }\r\n        else {\r\n            clearTimeout(timer);\r\n            error\r\n                ? set(_formState.errors, name, error)\r\n                : unset(_formState.errors, name);\r\n        }\r\n        if (((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\r\n            !isEmptyObject(fieldState) ||\r\n            shouldUpdateValid) &&\r\n            !shouldSkipRender) {\r\n            const updatedFormState = Object.assign(Object.assign(Object.assign({}, fieldState), (shouldUpdateValid ? { isValid } : {})), { errors: _formState.errors, name });\r\n            _formState = Object.assign(Object.assign({}, _formState), updatedFormState);\r\n            _subjects.state.next(updatedFormState);\r\n        }\r\n        validateFields[name]--;\r\n        if (_proxyFormState.isValidating && !validateFields[name]) {\r\n            _subjects.state.next({\r\n                isValidating: false,\r\n            });\r\n            validateFields = {};\r\n        }\r\n    };\r\n    const _executeSchema = async (name) => _options.resolver\r\n        ? await _options.resolver(Object.assign({}, _formValues), _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation))\r\n        : {};\r\n    const executeSchemaAndUpdateState = async (names) => {\r\n        const { errors } = await _executeSchema();\r\n        if (names) {\r\n            for (const name of names) {\r\n                const error = get(errors, name);\r\n                error\r\n                    ? set(_formState.errors, name, error)\r\n                    : unset(_formState.errors, name);\r\n            }\r\n        }\r\n        else {\r\n            _formState.errors = errors;\r\n        }\r\n        return errors;\r\n    };\r\n    const executeBuildInValidation = async (fields, shouldOnlyCheckValid, context = {\r\n        valid: true,\r\n    }) => {\r\n        for (const name in fields) {\r\n            const field = fields[name];\r\n            if (field) {\r\n                const fieldReference = field._f;\r\n                const fieldValue = omit(field, '_f');\r\n                if (fieldReference) {\r\n                    const fieldError = await validateField(field, get(_formValues, fieldReference.name), shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation);\r\n                    if (fieldError[fieldReference.name]) {\r\n                        context.valid = false;\r\n                        if (shouldOnlyCheckValid) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!shouldOnlyCheckValid) {\r\n                        fieldError[fieldReference.name]\r\n                            ? set(_formState.errors, fieldReference.name, fieldError[fieldReference.name])\r\n                            : unset(_formState.errors, fieldReference.name);\r\n                    }\r\n                }\r\n                fieldValue &&\r\n                    (await executeBuildInValidation(fieldValue, shouldOnlyCheckValid, context));\r\n            }\r\n        }\r\n        return context.valid;\r\n    };\r\n    const _removeUnmounted = () => {\r\n        for (const name of _names.unMount) {\r\n            const field = get(_fields, name);\r\n            field &&\r\n                (field._f.refs\r\n                    ? field._f.refs.every((ref) => !live(ref))\r\n                    : !live(field._f.ref)) &&\r\n                unregister(name);\r\n        }\r\n        _names.unMount = new Set();\r\n    };\r\n    const _getDirty = (name, data) => (name && data && set(_formValues, name, data),\r\n        !deepEqual(getValues(), _defaultValues));\r\n    const _getWatch = (names, defaultValue, isGlobal) => {\r\n        const fieldValues = Object.assign({}, (_stateFlags.mount\r\n            ? _formValues\r\n            : isUndefined(defaultValue)\r\n                ? _defaultValues\r\n                : isString(names)\r\n                    ? { [names]: defaultValue }\r\n                    : defaultValue));\r\n        return generateWatchOutput(names, _names, fieldValues, isGlobal);\r\n    };\r\n    const _getFieldArray = (name) => get(_stateFlags.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []);\r\n    const setFieldValue = (name, value, options = {}) => {\r\n        const field = get(_fields, name);\r\n        let fieldValue = value;\r\n        if (field) {\r\n            const fieldReference = field._f;\r\n            if (fieldReference) {\r\n                set(_formValues, name, getFieldValueAs(value, fieldReference));\r\n                fieldValue =\r\n                    isWeb && isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\r\n                        ? ''\r\n                        : value;\r\n                if (isMultipleSelect(fieldReference.ref)) {\r\n                    [...fieldReference.ref.options].forEach((selectRef) => (selectRef.selected = fieldValue.includes(selectRef.value)));\r\n                }\r\n                else if (fieldReference.refs) {\r\n                    if (isCheckBoxInput(fieldReference.ref)) {\r\n                        fieldReference.refs.length > 1\r\n                            ? fieldReference.refs.forEach((checkboxRef) => (checkboxRef.checked = Array.isArray(fieldValue)\r\n                                ? !!fieldValue.find((data) => data === checkboxRef.value)\r\n                                : fieldValue === checkboxRef.value))\r\n                            : (fieldReference.refs[0].checked = !!fieldValue);\r\n                    }\r\n                    else {\r\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\r\n                    }\r\n                }\r\n                else if (!isFileInput(fieldReference.ref)) {\r\n                    fieldReference.ref.value = fieldValue;\r\n                    if (!fieldReference.ref.type) {\r\n                        _subjects.watch.next({\r\n                            name,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        (options.shouldDirty || options.shouldTouch) &&\r\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch);\r\n        options.shouldValidate && trigger(name);\r\n    };\r\n    const setValues = (name, value, options) => {\r\n        for (const fieldKey in value) {\r\n            const fieldValue = value[fieldKey];\r\n            const fieldName = `${name}.${fieldKey}`;\r\n            const field = get(_fields, fieldName);\r\n            (_names.array.has(name) ||\r\n                !isPrimitive(fieldValue) ||\r\n                (field && !field._f)) &&\r\n                !isDateObject(fieldValue)\r\n                ? setValues(fieldName, fieldValue, options)\r\n                : setFieldValue(fieldName, fieldValue, options);\r\n        }\r\n    };\r\n    const setValue = (name, value, options = {}) => {\r\n        const field = get(_fields, name);\r\n        const isFieldArray = _names.array.has(name);\r\n        set(_formValues, name, value);\r\n        if (isFieldArray) {\r\n            _subjects.array.next({\r\n                name,\r\n                values: _formValues,\r\n            });\r\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\r\n                options.shouldDirty) {\r\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\r\n                _subjects.state.next({\r\n                    name,\r\n                    dirtyFields: _formState.dirtyFields,\r\n                    isDirty: _getDirty(name, value),\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            field && !field._f && !isNullOrUndefined(value)\r\n                ? setValues(name, value, options)\r\n                : setFieldValue(name, value, options);\r\n        }\r\n        isWatched(name, _names) && _subjects.state.next({});\r\n        _subjects.watch.next({\r\n            name,\r\n        });\r\n    };\r\n    const onChange = async (event) => {\r\n        const target = event.target;\r\n        let name = target.name;\r\n        const field = get(_fields, name);\r\n        if (field) {\r\n            let error;\r\n            let isValid;\r\n            const fieldValue = target.type\r\n                ? getFieldValue(field._f)\r\n                : getEventValue(event);\r\n            const isBlurEvent = event.type === EVENTS.BLUR;\r\n            const shouldSkipValidation = (!hasValidation(field._f) &&\r\n                !_options.resolver &&\r\n                !get(_formState.errors, name) &&\r\n                !field._f.deps) ||\r\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\r\n            const watched = isWatched(name, _names, isBlurEvent);\r\n            if (isBlurEvent) {\r\n                field._f.onBlur && field._f.onBlur(event);\r\n            }\r\n            else if (field._f.onChange) {\r\n                field._f.onChange(event);\r\n            }\r\n            set(_formValues, name, fieldValue);\r\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\r\n            const shouldRender = !isEmptyObject(fieldState) || watched;\r\n            !isBlurEvent &&\r\n                _subjects.watch.next({\r\n                    name,\r\n                    type: event.type,\r\n                });\r\n            if (shouldSkipValidation) {\r\n                return (shouldRender &&\r\n                    _subjects.state.next(Object.assign({ name }, (watched ? {} : fieldState))));\r\n            }\r\n            !isBlurEvent && watched && _subjects.state.next({});\r\n            validateFields[name] = validateFields[name] ? +1 : 1;\r\n            _proxyFormState.isValidating &&\r\n                _subjects.state.next({\r\n                    isValidating: true,\r\n                });\r\n            if (_options.resolver) {\r\n                const { errors } = await _executeSchema([name]);\r\n                const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\r\n                const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\r\n                error = errorLookupResult.error;\r\n                name = errorLookupResult.name;\r\n                isValid = isEmptyObject(errors);\r\n            }\r\n            else {\r\n                error = (await validateField(field, get(_formValues, name), shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\r\n                isValid = await _updateValid(true);\r\n            }\r\n            field._f.deps && trigger(field._f.deps);\r\n            shouldRenderByError(false, name, isValid, error, fieldState);\r\n        }\r\n    };\r\n    const trigger = async (name, options = {}) => {\r\n        let isValid;\r\n        let validationResult;\r\n        const fieldNames = convertToArrayPayload(name);\r\n        _subjects.state.next({\r\n            isValidating: true,\r\n        });\r\n        if (_options.resolver) {\r\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\r\n            isValid = isEmptyObject(errors);\r\n            validationResult = name\r\n                ? !fieldNames.some((name) => get(errors, name))\r\n                : isValid;\r\n        }\r\n        else if (name) {\r\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\r\n                const field = get(_fields, fieldName);\r\n                return await executeBuildInValidation(field && field._f ? { [fieldName]: field } : field);\r\n            }))).every(Boolean);\r\n            !(!validationResult && !_formState.isValid) && _updateValid();\r\n        }\r\n        else {\r\n            validationResult = isValid = await executeBuildInValidation(_fields);\r\n        }\r\n        _subjects.state.next(Object.assign(Object.assign(Object.assign({}, (!isString(name) ||\r\n            (_proxyFormState.isValid && isValid !== _formState.isValid)\r\n            ? {}\r\n            : { name })), (_options.resolver ? { isValid } : {})), { errors: _formState.errors, isValidating: false }));\r\n        options.shouldFocus &&\r\n            !validationResult &&\r\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\r\n        return validationResult;\r\n    };\r\n    const getValues = (fieldNames) => {\r\n        const values = Object.assign(Object.assign({}, _defaultValues), (_stateFlags.mount ? _formValues : {}));\r\n        return isUndefined(fieldNames)\r\n            ? values\r\n            : isString(fieldNames)\r\n                ? get(values, fieldNames)\r\n                : fieldNames.map((name) => get(values, name));\r\n    };\r\n    const clearErrors = (name) => {\r\n        name\r\n            ? convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName))\r\n            : (_formState.errors = {});\r\n        _subjects.state.next({\r\n            errors: _formState.errors,\r\n            isValid: true,\r\n        });\r\n    };\r\n    const setError = (name, error, options) => {\r\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\r\n        set(_formState.errors, name, Object.assign(Object.assign({}, error), { ref }));\r\n        _subjects.state.next({\r\n            name,\r\n            errors: _formState.errors,\r\n            isValid: false,\r\n        });\r\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\r\n    };\r\n    const watch = (name, defaultValue) => isFunction(name)\r\n        ? _subjects.watch.subscribe({\r\n            next: (info) => name(_getWatch(undefined, defaultValue), info),\r\n        })\r\n        : _getWatch(name, defaultValue, true);\r\n    const unregister = (name, options = {}) => {\r\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\r\n            _names.mount.delete(fieldName);\r\n            _names.array.delete(fieldName);\r\n            if (get(_fields, fieldName)) {\r\n                if (!options.keepValue) {\r\n                    unset(_fields, fieldName);\r\n                    unset(_formValues, fieldName);\r\n                }\r\n                !options.keepError && unset(_formState.errors, fieldName);\r\n                !options.keepDirty && unset(_formState.dirtyFields, fieldName);\r\n                !options.keepTouched && unset(_formState.touchedFields, fieldName);\r\n                !_options.shouldUnregister &&\r\n                    !options.keepDefaultValue &&\r\n                    unset(_defaultValues, fieldName);\r\n            }\r\n        }\r\n        _subjects.watch.next({});\r\n        _subjects.state.next(Object.assign(Object.assign({}, _formState), (!options.keepDirty ? {} : { isDirty: _getDirty() })));\r\n        !options.keepIsValid && _updateValid();\r\n    };\r\n    const register = (name, options = {}) => {\r\n        let field = get(_fields, name);\r\n        set(_fields, name, {\r\n            _f: Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options),\r\n        });\r\n        _names.mount.add(name);\r\n        !isUndefined(options.value) &&\r\n            !options.disabled &&\r\n            set(_formValues, name, get(_formValues, name, options.value));\r\n        field\r\n            ? isBoolean(options.disabled) &&\r\n                set(_formValues, name, options.disabled\r\n                    ? undefined\r\n                    : get(_formValues, name, getFieldValue(field._f)))\r\n            : updateValidAndValue(name, true);\r\n        return Object.assign(Object.assign(Object.assign({}, (isBoolean(options.disabled) ? { disabled: options.disabled } : {})), (_options.shouldUseNativeValidation\r\n            ? {\r\n                required: !!options.required,\r\n                min: getRuleValue(options.min),\r\n                max: getRuleValue(options.max),\r\n                minLength: getRuleValue(options.minLength),\r\n                maxLength: getRuleValue(options.maxLength),\r\n                pattern: getRuleValue(options.pattern),\r\n            }\r\n            : {})), { name,\r\n            onChange, onBlur: onChange, ref: (ref) => {\r\n                if (ref) {\r\n                    register(name, options);\r\n                    field = get(_fields, name);\r\n                    const fieldRef = isUndefined(ref.value)\r\n                        ? ref.querySelectorAll\r\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\r\n                            : ref\r\n                        : ref;\r\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\r\n                    if (fieldRef === field._f.ref ||\r\n                        (radioOrCheckbox &&\r\n                            compact(field._f.refs).find((option) => option === fieldRef))) {\r\n                        return;\r\n                    }\r\n                    set(_fields, name, {\r\n                        _f: radioOrCheckbox\r\n                            ? Object.assign(Object.assign({}, field._f), { refs: [...compact(field._f.refs).filter(live), fieldRef], ref: { type: fieldRef.type, name } }) : Object.assign(Object.assign({}, field._f), { ref: fieldRef }),\r\n                    });\r\n                    !options.disabled && updateValidAndValue(name, false, fieldRef);\r\n                }\r\n                else {\r\n                    field = get(_fields, name, {});\r\n                    if (field._f) {\r\n                        field._f.mount = false;\r\n                    }\r\n                    (_options.shouldUnregister || options.shouldUnregister) &&\r\n                        !(isNameInFieldArray(_names.array, name) && _stateFlags.action) &&\r\n                        _names.unMount.add(name);\r\n                }\r\n            } });\r\n    };\r\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\r\n        if (e) {\r\n            e.preventDefault && e.preventDefault();\r\n            e.persist && e.persist();\r\n        }\r\n        let hasNoPromiseError = true;\r\n        let fieldValues = _options.shouldUnregister\r\n            ? cloneObject(_formValues)\r\n            : Object.assign({}, _formValues);\r\n        _subjects.state.next({\r\n            isSubmitting: true,\r\n        });\r\n        try {\r\n            if (_options.resolver) {\r\n                const { errors, values } = await _executeSchema();\r\n                _formState.errors = errors;\r\n                fieldValues = values;\r\n            }\r\n            else {\r\n                await executeBuildInValidation(_fields);\r\n            }\r\n            if (isEmptyObject(_formState.errors) &&\r\n                Object.keys(_formState.errors).every((name) => get(fieldValues, name))) {\r\n                _subjects.state.next({\r\n                    errors: {},\r\n                    isSubmitting: true,\r\n                });\r\n                await onValid(fieldValues, e);\r\n            }\r\n            else {\r\n                onInvalid && (await onInvalid(_formState.errors, e));\r\n                _options.shouldFocusError &&\r\n                    focusFieldBy(_fields, (key) => get(_formState.errors, key), _names.mount);\r\n            }\r\n        }\r\n        catch (err) {\r\n            hasNoPromiseError = false;\r\n            throw err;\r\n        }\r\n        finally {\r\n            _formState.isSubmitted = true;\r\n            _subjects.state.next({\r\n                isSubmitted: true,\r\n                isSubmitting: false,\r\n                isSubmitSuccessful: isEmptyObject(_formState.errors) && hasNoPromiseError,\r\n                submitCount: _formState.submitCount + 1,\r\n                errors: _formState.errors,\r\n            });\r\n        }\r\n    };\r\n    const resetField = (name, options = {}) => {\r\n        if (isUndefined(options.defaultValue)) {\r\n            setValue(name, get(_defaultValues, name));\r\n        }\r\n        else {\r\n            setValue(name, options.defaultValue);\r\n            set(_defaultValues, name, options.defaultValue);\r\n        }\r\n        if (!options.keepTouched) {\r\n            unset(_formState.touchedFields, name);\r\n        }\r\n        if (!options.keepDirty) {\r\n            unset(_formState.dirtyFields, name);\r\n            _formState.isDirty = options.defaultValue\r\n                ? _getDirty(name, get(_defaultValues, name))\r\n                : _getDirty();\r\n        }\r\n        if (!options.keepError) {\r\n            unset(_formState.errors, name);\r\n            _proxyFormState.isValid && _updateValid();\r\n        }\r\n        _subjects.state.next(Object.assign({}, _formState));\r\n    };\r\n    const reset = (formValues, keepStateOptions = {}) => {\r\n        const updatedValues = formValues || _defaultValues;\r\n        const cloneUpdatedValues = cloneObject(updatedValues);\r\n        const values = !isEmptyObject(formValues)\r\n            ? cloneUpdatedValues\r\n            : _defaultValues;\r\n        if (!keepStateOptions.keepDefaultValues) {\r\n            _defaultValues = updatedValues;\r\n        }\r\n        if (!keepStateOptions.keepValues) {\r\n            if (isWeb) {\r\n                for (const name of _names.mount) {\r\n                    const field = get(_fields, name);\r\n                    if (field && field._f) {\r\n                        const fieldReference = Array.isArray(field._f.refs)\r\n                            ? field._f.refs[0]\r\n                            : field._f.ref;\r\n                        try {\r\n                            isHTMLElement(fieldReference) &&\r\n                                fieldReference.closest('form').reset();\r\n                            break;\r\n                        }\r\n                        catch (_a) { }\r\n                    }\r\n                }\r\n            }\r\n            _formValues = props.shouldUnregister\r\n                ? keepStateOptions.keepDefaultValues\r\n                    ? cloneObject(_defaultValues)\r\n                    : {}\r\n                : cloneUpdatedValues;\r\n            _fields = {};\r\n            _subjects.watch.next({\r\n                values,\r\n            });\r\n            _subjects.array.next({\r\n                values,\r\n            });\r\n        }\r\n        _names = {\r\n            mount: new Set(),\r\n            unMount: new Set(),\r\n            array: new Set(),\r\n            watch: new Set(),\r\n            watchAll: false,\r\n            focus: '',\r\n        };\r\n        _subjects.state.next({\r\n            submitCount: keepStateOptions.keepSubmitCount\r\n                ? _formState.submitCount\r\n                : 0,\r\n            isDirty: keepStateOptions.keepDirty\r\n                ? _formState.isDirty\r\n                : keepStateOptions.keepDefaultValues\r\n                    ? !deepEqual(formValues, _defaultValues)\r\n                    : false,\r\n            isSubmitted: keepStateOptions.keepIsSubmitted\r\n                ? _formState.isSubmitted\r\n                : false,\r\n            dirtyFields: keepStateOptions.keepDirty\r\n                ? _formState.dirtyFields\r\n                : (keepStateOptions.keepDefaultValues && formValues\r\n                    ? Object.entries(formValues).reduce((previous, [key, value]) => (Object.assign(Object.assign({}, previous), { [key]: value !== get(_defaultValues, key) })), {})\r\n                    : {}),\r\n            touchedFields: keepStateOptions.keepTouched\r\n                ? _formState.touchedFields\r\n                : {},\r\n            errors: keepStateOptions.keepErrors\r\n                ? _formState.errors\r\n                : {},\r\n            isSubmitting: false,\r\n            isSubmitSuccessful: false,\r\n        });\r\n        _stateFlags.mount =\r\n            !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\r\n        _stateFlags.watch = !!props.shouldUnregister;\r\n    };\r\n    const setFocus = (name) => {\r\n        const field = get(_fields, name)._f;\r\n        (field.ref.focus ? field.ref : field.refs[0]).focus();\r\n    };\r\n    return {\r\n        control: {\r\n            register,\r\n            unregister,\r\n            _executeSchema,\r\n            _getWatch,\r\n            _getDirty,\r\n            _updateValid,\r\n            _removeUnmounted,\r\n            _updateFieldArray,\r\n            _getFieldArray,\r\n            _subjects,\r\n            _proxyFormState,\r\n            get _fields() {\r\n                return _fields;\r\n            },\r\n            set _fields(value) {\r\n                _fields = value;\r\n            },\r\n            get _formValues() {\r\n                return _formValues;\r\n            },\r\n            set _formValues(value) {\r\n                _formValues = value;\r\n            },\r\n            get _stateFlags() {\r\n                return _stateFlags;\r\n            },\r\n            set _stateFlags(value) {\r\n                _stateFlags = value;\r\n            },\r\n            get _defaultValues() {\r\n                return _defaultValues;\r\n            },\r\n            set _defaultValues(value) {\r\n                _defaultValues = value;\r\n            },\r\n            get _names() {\r\n                return _names;\r\n            },\r\n            set _names(value) {\r\n                _names = value;\r\n            },\r\n            get _formState() {\r\n                return _formState;\r\n            },\r\n            set _formState(value) {\r\n                _formState = value;\r\n            },\r\n            get _options() {\r\n                return _options;\r\n            },\r\n            set _options(value) {\r\n                _options = Object.assign(Object.assign({}, _options), value);\r\n            },\r\n        },\r\n        trigger,\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        setValue,\r\n        getValues,\r\n        reset,\r\n        resetField,\r\n        clearErrors,\r\n        unregister,\r\n        setError,\r\n        setFocus,\r\n    };\r\n}\n\nfunction useForm(props = {}) {\r\n    const _formControl = React.useRef();\r\n    const [formState, updateFormState] = React.useState({\r\n        isDirty: false,\r\n        isValidating: false,\r\n        dirtyFields: {},\r\n        isSubmitted: false,\r\n        submitCount: 0,\r\n        touchedFields: {},\r\n        isSubmitting: false,\r\n        isSubmitSuccessful: false,\r\n        isValid: false,\r\n        errors: {},\r\n    });\r\n    if (_formControl.current) {\r\n        _formControl.current.control._options = props;\r\n    }\r\n    else {\r\n        _formControl.current = Object.assign(Object.assign({}, createFormControl(props)), { formState });\r\n    }\r\n    const control = _formControl.current.control;\r\n    useSubscribe({\r\n        subject: control._subjects.state,\r\n        callback: (value) => {\r\n            if (shouldRenderFormState(value, control._proxyFormState, true)) {\r\n                control._formState = Object.assign(Object.assign({}, control._formState), value);\r\n                updateFormState(Object.assign({}, control._formState));\r\n            }\r\n        },\r\n    });\r\n    React.useEffect(() => {\r\n        if (!control._stateFlags.mount) {\r\n            control._proxyFormState.isValid && control._updateValid();\r\n            control._stateFlags.mount = true;\r\n        }\r\n        if (control._stateFlags.watch) {\r\n            control._stateFlags.watch = false;\r\n            control._subjects.state.next({});\r\n        }\r\n        control._removeUnmounted();\r\n    });\r\n    _formControl.current.formState = getProxyFormState(formState, control._proxyFormState);\r\n    return _formControl.current;\r\n}\n\nexport { Controller, FormProvider, appendErrors, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.js.map\n"],"names":["React"],"mappings":"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"}