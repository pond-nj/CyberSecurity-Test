var React = require('react');
var index_esm = require('./index.esm-f4de5e43.js');
var index = require('./index-04d24c4d.js');
var Auth = require('./Auth-dec80812.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var ForgotPassword = Auth.styled(index_esm.TextButton)(function (props) {
  return index._extends({
    marginTop: -53,
    marginBottom: 53,
    display: 'flex'
  }, props.theme.forgotPassword ? index._extends({}, props.theme.forgotPassword) : {});
});
function ForgotPassword$1 (props) {
  return React__default["default"].createElement(ForgotPassword, Object.assign({}, props, {
    type: "button"
  }));
}

function SignIn (_ref) {
  var setCurrentPage = _ref.setCurrentPage,
      dictionary = _ref.dictionary;

  var _useForm = index_esm.useForm(),
      _register = _useForm.register,
      handleSubmit = _useForm.handleSubmit,
      reset = _useForm.reset,
      isSubmitting = _useForm.formState.isSubmitting;

  var _useEasybase = index.useEasybase(),
      signIn = _useEasybase.signIn;

  var onSubmit = function onSubmit(formData) {
    try {
      return Promise.resolve(new Promise(function (resolve) {
        return setTimeout(resolve, 1000);
      })).then(function () {
        return Promise.resolve(signIn(formData.email, formData.password)).then(function (signInRes) {
          if (!signInRes.success) {
            if (signInRes.errorCode === "NoUserExists") {
              Auth.toast.error(dictionary.errorUserDoesNotExist);
            } else if (signInRes.errorCode === "BadFormat") {
              reset();
              Auth.toast.error(dictionary.errorBadInputFormat);
            }
          }
        }); // Will automatically change views
      });
    } catch (e) {
      return Promise.reject(e);
    }
  };

  return React__default["default"].createElement(index_esm.Form, {
    onSubmit: handleSubmit(onSubmit)
  }, React__default["default"].createElement(index_esm.HeaderText, null, dictionary.signInHeader), React__default["default"].createElement(index_esm.Spacer, {
    size: "medium"
  }), React__default["default"].createElement(index_esm.EmailInput, {
    register: function register() {
      return _register("email");
    },
    label: dictionary.emailLabel,
    disabled: isSubmitting
  }), React__default["default"].createElement(index_esm.Spacer, {
    size: "xlarge"
  }), React__default["default"].createElement(index_esm.PasswordInput, {
    register: function register() {
      return _register("password");
    },
    autoComplete: "current-password",
    disabled: isSubmitting,
    label: dictionary.passwordLabel
  }), React__default["default"].createElement(index_esm.Spacer, {
    size: "xlarge"
  }), React__default["default"].createElement(ForgotPassword$1, {
    onClick: function onClick(_) {
      return setCurrentPage("ForgotPassword");
    },
    disabled: isSubmitting
  }, dictionary.forgotPasswordButton), React__default["default"].createElement(index_esm.SubmitButton, {
    disabled: isSubmitting
  }, dictionary.signInSubmitButton), React__default["default"].createElement(index_esm.SecondaryButton, {
    onClick: function onClick(_) {
      return setCurrentPage("SignUp");
    },
    disabled: isSubmitting
  }, dictionary.noAccountButton));
}

exports["default"] = SignIn;
//# sourceMappingURL=SignIn-bcfe5c5b.js.map
