{"version":3,"file":"SignIn-bcfe5c5b.js","sources":["../src/ui/Auth/components/ForgotPassword.tsx","../src/ui/Auth/pages/SignIn.tsx"],"sourcesContent":["import React from 'react';\nimport TextButton from './internal/TextButton';\nimport styled from 'styled-components';\n\nconst ForgotPassword = styled(TextButton)(props => ({\n    marginTop: -53,\n    marginBottom: 53,\n    display: 'flex',\n    ...(props.theme.forgotPassword ? { ...props.theme.forgotPassword } : {})\n}))\n\nexport default function (props: React.ButtonHTMLAttributes<HTMLButtonElement>) {\n    return (\n        <ForgotPassword {...props} type=\"button\" />\n    )\n}\n","import React from 'react';\nimport Form from '../components/Form';\nimport EmailInput from '../components/EmailInput';\nimport PasswordInput from '../components/PasswordInput';\nimport HeaderText from '../components/HeaderText';\nimport ForgotPassword from '../components/ForgotPassword';\nimport SecondaryButton from '../components/SecondaryButton';\nimport SubmitButton from '../components/SubmitButton';\nimport Spacer from '../components/Spacer';\nimport { useForm } from 'react-hook-form';\nimport toast from 'react-hot-toast';\nimport { IPage } from '../../uiTypes';\nimport useEasybase from '../../../useEasybase';\n\nexport default function ({ setCurrentPage, dictionary }: IPage) {\n    const { register, handleSubmit, reset, formState: { isSubmitting } } = useForm();\n    const { signIn } = useEasybase();\n    const onSubmit = async (formData: Record<string, string>) => {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        const signInRes = await signIn(formData.email, formData.password);\n        if (!signInRes.success) {\n            if (signInRes.errorCode === \"NoUserExists\") {\n                toast.error(dictionary.errorUserDoesNotExist!)\n            } else if (signInRes.errorCode === \"BadFormat\") {\n                reset();\n                toast.error(dictionary.errorBadInputFormat!)\n            }\n        }\n        // Will automatically change views\n    }\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)}>\n            <HeaderText>{dictionary.signInHeader}</HeaderText>\n            <Spacer size=\"medium\" />\n            <EmailInput\n                register={() => register(\"email\")}\n                label={dictionary.emailLabel}\n                disabled={isSubmitting}\n            />\n            <Spacer size=\"xlarge\" />\n            <PasswordInput\n                register={() => register(\"password\")}\n                autoComplete=\"current-password\"\n                disabled={isSubmitting}\n                label={dictionary.passwordLabel}\n            />\n            <Spacer size=\"xlarge\" />\n            <ForgotPassword onClick={_ => setCurrentPage(\"ForgotPassword\")} disabled={isSubmitting}>{dictionary.forgotPasswordButton}</ForgotPassword>\n            <SubmitButton disabled={isSubmitting}>{dictionary.signInSubmitButton}</SubmitButton>\n            <SecondaryButton onClick={_ => setCurrentPage(\"SignUp\")} disabled={isSubmitting}>{dictionary.noAccountButton}</SecondaryButton>\n        </Form>\n    )\n}\n"],"names":["ForgotPassword","styled","TextButton","props","marginTop","marginBottom","display","theme","forgotPassword","React","type","setCurrentPage","dictionary","useForm","register","handleSubmit","reset","isSubmitting","formState","useEasybase","signIn","onSubmit","formData","Promise","resolve","setTimeout","email","password","signInRes","success","errorCode","toast","error","errorUserDoesNotExist","errorBadInputFormat","Form","HeaderText","signInHeader","Spacer","size","EmailInput","label","emailLabel","disabled","PasswordInput","autoComplete","passwordLabel","onClick","_","forgotPasswordButton","SubmitButton","signInSubmitButton","SecondaryButton","noAccountButton"],"mappings":";;;;;;;;;AAIA,IAAMA,cAAc,GAAGC,WAAM,CAACC,oBAAD,CAAN,CAAmB,UAAAC,KAAK;AAAA;AAC3CC,IAAAA,SAAS,EAAE,CAAC,EAD+B;AAE3CC,IAAAA,YAAY,EAAE,EAF6B;AAG3CC,IAAAA,OAAO,EAAE;AAHkC,KAIvCH,KAAK,CAACI,KAAN,CAAYC,cAAZ,sBAAkCL,KAAK,CAACI,KAAN,CAAYC,cAA9C,IAAiE,EAJ1B;AAAA,CAAxB,CAAvB;2BAOyBL;AACrB,SACIM,uCAAA,CAACT,cAAD,oBAAoBG;AAAOO,IAAAA,IAAI,EAAC;IAAhC,CADJ;AAGH;;;MCD0BC,sBAAAA;MAAgBC,kBAAAA;;AACvC,iBAAuEC,iBAAO,EAA9E;AAAA,MAAQC,SAAR,YAAQA,QAAR;AAAA,MAAkBC,YAAlB,YAAkBA,YAAlB;AAAA,MAAgCC,KAAhC,YAAgCA,KAAhC;AAAA,MAAoDC,YAApD,YAAuCC,SAAvC,CAAoDD,YAApD;;AACA,qBAAmBE,iBAAW,EAA9B;AAAA,MAAQC,MAAR,gBAAQA,MAAR;;AACA,MAAMC,QAAQ,YAARA,QAAQ,CAAUC,QAAV;AAAA;6BACJ,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,eAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAd;AAAA,OAAnB;+BACkBJ,MAAM,CAACE,QAAQ,CAACI,KAAV,EAAiBJ,QAAQ,CAACK,QAA1B,kBAAxBC;cACF,CAACA,SAAS,CAACC;gBACPD,SAAS,CAACE,SAAV,KAAwB;AACxBC,cAAAA,UAAK,CAACC,KAAN,CAAYpB,UAAU,CAACqB,qBAAvB;mBACG,IAAIL,SAAS,CAACE,SAAV,KAAwB,WAA5B,EAAyC;AAC5Cd,cAAAA,KAAK;AACLe,cAAAA,UAAK,CAACC,KAAN,CAAYpB,UAAU,CAACsB,mBAAvB;AACH;;;;AAGR,KAZa;AAAA;AAAA;AAAA,GAAd;;AAcA,SACIzB,uCAAA,CAAC0B,cAAD;AAAMd,IAAAA,QAAQ,EAAEN,YAAY,CAACM,QAAD;GAA5B,EACIZ,uCAAA,CAAC2B,oBAAD,MAAA,EAAaxB,UAAU,CAACyB,YAAxB,CADJ,EAEI5B,uCAAA,CAAC6B,gBAAD;AAAQC,IAAAA,IAAI,EAAC;GAAb,CAFJ,EAGI9B,uCAAA,CAAC+B,oBAAD;AACI1B,IAAAA,QAAQ,EAAE;AAAA,aAAMA,SAAQ,CAAC,OAAD,CAAd;AAAA;AACV2B,IAAAA,KAAK,EAAE7B,UAAU,CAAC8B;AAClBC,IAAAA,QAAQ,EAAE1B;GAHd,CAHJ,EAQIR,uCAAA,CAAC6B,gBAAD;AAAQC,IAAAA,IAAI,EAAC;GAAb,CARJ,EASI9B,uCAAA,CAACmC,uBAAD;AACI9B,IAAAA,QAAQ,EAAE;AAAA,aAAMA,SAAQ,CAAC,UAAD,CAAd;AAAA;AACV+B,IAAAA,YAAY,EAAC;AACbF,IAAAA,QAAQ,EAAE1B;AACVwB,IAAAA,KAAK,EAAE7B,UAAU,CAACkC;GAJtB,CATJ,EAeIrC,uCAAA,CAAC6B,gBAAD;AAAQC,IAAAA,IAAI,EAAC;GAAb,CAfJ,EAgBI9B,uCAAA,CAACT,gBAAD;AAAgB+C,IAAAA,OAAO,EAAE,iBAAAC,CAAC;AAAA,aAAIrC,cAAc,CAAC,gBAAD,CAAlB;AAAA;AAAsCgC,IAAAA,QAAQ,EAAE1B;GAA1E,EAAyFL,UAAU,CAACqC,oBAApG,CAhBJ,EAiBIxC,uCAAA,CAACyC,sBAAD;AAAcP,IAAAA,QAAQ,EAAE1B;GAAxB,EAAuCL,UAAU,CAACuC,kBAAlD,CAjBJ,EAkBI1C,uCAAA,CAAC2C,yBAAD;AAAiBL,IAAAA,OAAO,EAAE,iBAAAC,CAAC;AAAA,aAAIrC,cAAc,CAAC,QAAD,CAAlB;AAAA;AAA8BgC,IAAAA,QAAQ,EAAE1B;GAAnE,EAAkFL,UAAU,CAACyC,eAA7F,CAlBJ,CADJ;AAsBH;;;;"}