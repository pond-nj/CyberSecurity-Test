{"ast":null,"code":"import _toConsumableArray from\"/Users/nutdranai.jaruthikorn/Desktop/git-repo/CyberSecurity-Test/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"/Users/nutdranai.jaruthikorn/Desktop/git-repo/CyberSecurity-Test/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/nutdranai.jaruthikorn/Desktop/git-repo/CyberSecurity-Test/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/nutdranai.jaruthikorn/Desktop/git-repo/CyberSecurity-Test/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/nutdranai.jaruthikorn/Desktop/git-repo/CyberSecurity-Test/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import Header from'./Header';import PageManager from'./PageManager';import React from'react';import axios from'axios';import XMLData from'./xml/mc.xml';import'./mcstyle.css';/*\n  Problem:\n\n    change page title\n\n    Responder can comeback to edit choice\n\n    collect survey on user feeling, send data to server\n\n    ## change survey to a new module\n\n    ## change state that's string but is supposed to be int to int\n\n    ## create page manager\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.setDataSubmit=function(state){_this.setState({dataSubmit:state});};_this.updateSurveyResponse=function(response){_this.setState({surveyResponse:[].concat(_toConsumableArray(_this.state.surveyResponse),[parseInt(response)])});};_this.goToNextSurvey=function(){_this.setState({surveyNum:_this.state.surveyNum+1,selectedAnswer:-1,pressSubmit:0});};_this.skipQuestions=function(questionNum){_this.setState({questionNum:questionNum});};_this.setSubmit=function(state){_this.setState({pressSubmit:state});};_this.incrementValue=function(value){_this.setState({value:_this.state.value+parseInt(value)});};_this.setSelectedValue=function(value){_this.setState({selectedValue:parseInt(value)});};_this.resetSelected=function(){_this.setState({selectedAnswer:-1,pressSubmit:0});};_this.goToNextQuestion=function(){_this.setState({questionNum:_this.state.questionNum+1,selectedAnswer:-1,pressSubmit:0});};_this.setSelectedAnswer=function(answer){_this.setState({selectedAnswer:parseInt(answer),pressSubmit:0});};_this.state={questionsList:[],feedbackList:[],//xmlnode that contains feedback data\nsurveyList:[],//\nquestionNum:-1,//0 to total no. of question-1, 0 is the first question\nsurveyNum:-1,value:0,surveyResponse:[],selectedValue:-1,selectedAnswer:-1,pressSubmit:0,dataSubmit:-1};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchQuestionsWithAxios();}},{key:\"fetchQuestionsWithAxios\",value:function fetchQuestionsWithAxios(){var _this2=this;axios.get(XMLData,{\"Content-Type\":\"application/xml; charset=utf-8\"}).then(function(response){var parser=new DOMParser();var xml=parser.parseFromString(response.data,\"text/xml\");var questionsList=Array.from(xml.getElementsByTagName(\"question\"));var feedbackList=Array.from(xml.getElementsByTagName(\"feedbacks\"));var surveyList=Array.from(xml.getElementsByTagName(\"surveyText\"));console.log(surveyList);_this2.setState({questionsList:questionsList,feedbackList:feedbackList,surveyList:surveyList});}).catch(function(e){console.log(e);});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"div\",{id:\"wrapper\",\"data-role\":\"content\",children:/*#__PURE__*/_jsx(PageManager,{questionNum:this.state.questionNum,questionsList:this.state.questionsList,selectedAnswer:this.state.selectedAnswer,selectedValue:this.state.selectedValue,value:this.state.value,pressSubmit:this.state.pressSubmit,totalQuestions:this.state.questionsList.length,feedbackList:this.state.feedbackList,surveyNum:this.state.surveyNum,surveyList:this.state.surveyList,totalSurvey:this.state.surveyList.length,surveyResponse:this.state.surveyResponse,dataSubmit:this.state.dataSubmit,goToNextQuestion:this.goToNextQuestion// goToPrevQuestion={this.goToPrevQuestion}\n,setSelectedAnswer:this.setSelectedAnswer,resetSelected:this.resetSelected,incrementValue:this.incrementValue,setSelectedValue:this.setSelectedValue,setSubmit:this.setSubmit,skipQuestions:this.skipQuestions,goToNextSurvey:this.goToNextSurvey,updateSurveyResponse:this.updateSurveyResponse,setDataSubmit:this.setDataSubmit})})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/git-repo/CyberSecurity-Test/src/App.js"],"names":["Header","PageManager","React","axios","XMLData","App","props","setDataSubmit","state","setState","dataSubmit","updateSurveyResponse","response","surveyResponse","parseInt","goToNextSurvey","surveyNum","selectedAnswer","pressSubmit","skipQuestions","questionNum","setSubmit","incrementValue","value","setSelectedValue","selectedValue","resetSelected","goToNextQuestion","setSelectedAnswer","answer","questionsList","feedbackList","surveyList","fetchQuestionsWithAxios","get","then","parser","DOMParser","xml","parseFromString","data","Array","from","getElementsByTagName","console","log","catch","e","length","Component"],"mappings":"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","sourcesContent":["import Header from './Header'\nimport PageManager from './PageManager'\nimport React from 'react'\nimport axios from 'axios'\n\nimport XMLData from './xml/mc.xml'\nimport './mcstyle.css'\n\n\n/*\n  Problem:\n\n    change page title\n\n    Responder can comeback to edit choice\n\n    collect survey on user feeling, send data to server\n\n    ## change survey to a new module\n\n    ## change state that's string but is supposed to be int to int\n\n    ## create page manager\n*/\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      questionsList: [],\n      feedbackList: [], //xmlnode that contains feedback data\n      surveyList: [], //\n\n      questionNum: -1, //0 to total no. of question-1, 0 is the first question\n      surveyNum: -1,\n      value: 0,\n      surveyResponse: [],\n\n      selectedValue: -1,\n      selectedAnswer: -1,\n      pressSubmit: 0,\n      dataSubmit: -1\n    }\n  }\n\n  setDataSubmit = (state) => {\n    this.setState({\n      dataSubmit: state\n    })\n  }\n\n  updateSurveyResponse = (response) => {\n    this.setState({\n      surveyResponse: [...this.state.surveyResponse, parseInt(response)]\n    })\n  }\n\n  goToNextSurvey = () => {\n    this.setState({\n      surveyNum: this.state.surveyNum + 1,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  skipQuestions = (questionNum) => {\n    this.setState({\n      questionNum: questionNum\n    })\n  }\n\n  setSubmit = (state) => {\n    this.setState({\n      pressSubmit: state\n    })\n  }\n\n  incrementValue = (value) => {\n    this.setState({\n      value: this.state.value + parseInt(value)\n    })\n  }\n\n  setSelectedValue = (value) => {\n    this.setState({\n      selectedValue: parseInt(value)\n    })\n  }\n\n  resetSelected = () => {\n    this.setState({\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  goToNextQuestion = () => { \n    this.setState({\n      questionNum : this.state.questionNum + 1,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n\n  // goToPrevQuestion = () => { this.setState({\n  //     questionNum : this.state.questionNum - 1, \n  //     selectedAnswer: -1,\n  //     pressSubmit: 0\n  //   })\n  // }\n\n  setSelectedAnswer = (answer) => { this.setState({\n      selectedAnswer: parseInt(answer),\n      pressSubmit: 0\n     })\n  }\n\n  componentDidMount(){\n    this.fetchQuestionsWithAxios()\n  }\n\n  fetchQuestionsWithAxios(){\n    axios.get(XMLData,\n      {\"Content-Type\":\"application/xml; charset=utf-8\"\n    }).then((response)=>{\n      const parser = new DOMParser()\n      var xml = parser.parseFromString(response.data,\"text/xml\")\n\n      var questionsList = Array.from(xml.getElementsByTagName(\"question\"))\n      var feedbackList = Array.from(xml.getElementsByTagName(\"feedbacks\"))\n      var surveyList = Array.from(xml.getElementsByTagName(\"surveyText\"))\n      console.log( surveyList )\n\n      this.setState({\n          questionsList: questionsList,\n          feedbackList: feedbackList,\n          surveyList: surveyList\n      })\n    }).catch( e => {\n      console.log(e)\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header/>\n        <div id =\"wrapper\" data-role=\"content\">\n          <PageManager\n            questionNum={this.state.questionNum}\n            questionsList={this.state.questionsList}\n            selectedAnswer={this.state.selectedAnswer}\n            selectedValue={this.state.selectedValue}\n            value={this.state.value}\n            pressSubmit={this.state.pressSubmit}\n            totalQuestions={this.state.questionsList.length}\n            feedbackList={this.state.feedbackList}\n            surveyNum={this.state.surveyNum}\n            surveyList={this.state.surveyList}\n            totalSurvey={this.state.surveyList.length}\n            surveyResponse={this.state.surveyResponse}\n            dataSubmit={this.state.dataSubmit}\n            \n            goToNextQuestion={this.goToNextQuestion}\n            // goToPrevQuestion={this.goToPrevQuestion}\n            setSelectedAnswer={this.setSelectedAnswer}\n            resetSelected={this.resetSelected}\n            incrementValue={this.incrementValue}\n            setSelectedValue={this.setSelectedValue}\n            setSubmit={this.setSubmit}\n            skipQuestions={this.skipQuestions}\n            goToNextSurvey={this.goToNextSurvey}\n            updateSurveyResponse={this.updateSurveyResponse}\n            setDataSubmit={this.setDataSubmit}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}