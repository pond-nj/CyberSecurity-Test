{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/git-repo/CyberSecurity-Test/src/App.js\";\nimport Header from './Header';\nimport PageManager from './PageManager';\nimport React from 'react';\nimport axios from 'axios';\nimport XMLData from './xml/mc.xml';\nimport './mcstyle.css';\n/*\n  Problem:\n\n    change page title\n\n    Responder can comeback to edit choice\n\n    collect survey on user feeling, send data to server\n\n    ## change survey to a new module\n\n    ## change state that's string but is supposed to be int to int\n\n    ## create page manager\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setDataSubmit = state => {\n      this.setState({\n        dataSubmit: state\n      });\n    };\n\n    this.updateSurveyResponse = response => {\n      this.setState({\n        surveyResponse: [...this.state.surveyResponse, parseInt(response)]\n      });\n    };\n\n    this.goToNextSurvey = () => {\n      this.setState({\n        surveyNum: this.state.surveyNum + 1,\n        selectedAnswer: -1,\n        pressSubmit: 0\n      });\n    };\n\n    this.skipQuestions = questionNum => {\n      this.setState({\n        questionNum: questionNum\n      });\n    };\n\n    this.setSubmit = state => {\n      this.setState({\n        pressSubmit: state\n      });\n    };\n\n    this.incrementValue = value => {\n      this.setState({\n        value: this.state.value + parseInt(value)\n      });\n    };\n\n    this.setSelectedValue = value => {\n      this.setState({\n        selectedValue: parseInt(value)\n      });\n    };\n\n    this.resetSelected = () => {\n      this.setState({\n        selectedAnswer: -1,\n        pressSubmit: 0\n      });\n    };\n\n    this.goToNextQuestion = () => {\n      this.setState({\n        questionNum: this.state.questionNum + 1,\n        selectedAnswer: -1,\n        pressSubmit: 0\n      });\n    };\n\n    this.setSelectedAnswer = answer => {\n      this.setState({\n        selectedAnswer: parseInt(answer),\n        pressSubmit: 0\n      });\n    };\n\n    this.state = {\n      questionsList: [],\n      feedbackList: [],\n      //xmlnode that contains feedback data\n      surveyList: [],\n      //\n      questionNum: -1,\n      //0 to total no. of question-1, 0 is the first question\n      surveyNum: -1,\n      value: 0,\n      surveyResponse: [],\n      selectedValue: -1,\n      selectedAnswer: -1,\n      pressSubmit: 0,\n      dataSubmit: -1\n    };\n  }\n\n  componentDidMount() {\n    this.fetchQuestionsWithAxios();\n  }\n\n  fetchQuestionsWithAxios() {\n    // axios.get(\"https://raw.githubusercontent.com/pond-nj/CyberSecurity-Test/main/src/xml/mc.xml\",\n    axios.get(XMLData, {\n      \"Content-Type\": \"application/xml; charset=utf-8\"\n    }).then(response => {\n      console.log(response.data);\n      const parser = new DOMParser();\n      var xml = parser.parseFromString(response.data, \"text/xml\");\n      var questionsList = Array.from(xml.getElementsByTagName(\"question\"));\n      var feedbackList = Array.from(xml.getElementsByTagName(\"feedbacks\"));\n      var surveyList = Array.from(xml.getElementsByTagName(\"surveyText\"));\n      console.log(surveyList);\n      this.setState({\n        questionsList: questionsList,\n        feedbackList: feedbackList,\n        surveyList: surveyList\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"wrapper\",\n        \"data-role\": \"content\",\n        children: /*#__PURE__*/_jsxDEV(PageManager, {\n          questionNum: this.state.questionNum,\n          questionsList: this.state.questionsList,\n          selectedAnswer: this.state.selectedAnswer,\n          selectedValue: this.state.selectedValue,\n          value: this.state.value,\n          pressSubmit: this.state.pressSubmit,\n          totalQuestions: this.state.questionsList.length,\n          feedbackList: this.state.feedbackList,\n          surveyNum: this.state.surveyNum,\n          surveyList: this.state.surveyList,\n          totalSurvey: this.state.surveyList.length,\n          surveyResponse: this.state.surveyResponse,\n          dataSubmit: this.state.dataSubmit,\n          goToNextQuestion: this.goToNextQuestion // goToPrevQuestion={this.goToPrevQuestion}\n          ,\n          setSelectedAnswer: this.setSelectedAnswer,\n          resetSelected: this.resetSelected,\n          incrementValue: this.incrementValue,\n          setSelectedValue: this.setSelectedValue,\n          setSubmit: this.setSubmit,\n          skipQuestions: this.skipQuestions,\n          goToNextSurvey: this.goToNextSurvey,\n          updateSurveyResponse: this.updateSurveyResponse,\n          setDataSubmit: this.setDataSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/git-repo/CyberSecurity-Test/src/App.js"],"names":["Header","PageManager","React","axios","XMLData","App","Component","constructor","props","setDataSubmit","state","setState","dataSubmit","updateSurveyResponse","response","surveyResponse","parseInt","goToNextSurvey","surveyNum","selectedAnswer","pressSubmit","skipQuestions","questionNum","setSubmit","incrementValue","value","setSelectedValue","selectedValue","resetSelected","goToNextQuestion","setSelectedAnswer","answer","questionsList","feedbackList","surveyList","componentDidMount","fetchQuestionsWithAxios","get","then","console","log","data","parser","DOMParser","xml","parseFromString","Array","from","getElementsByTagName","catch","e","render","length"],"mappings":"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","sourcesContent":["import Header from './Header'\nimport PageManager from './PageManager'\nimport React from 'react'\nimport axios from 'axios'\n\nimport XMLData from './xml/mc.xml'\nimport './mcstyle.css'\n\n\n/*\n  Problem:\n\n    change page title\n\n    Responder can comeback to edit choice\n\n    collect survey on user feeling, send data to server\n\n    ## change survey to a new module\n\n    ## change state that's string but is supposed to be int to int\n\n    ## create page manager\n*/\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      questionsList: [],\n      feedbackList: [], //xmlnode that contains feedback data\n      surveyList: [], //\n\n      questionNum: -1, //0 to total no. of question-1, 0 is the first question\n      surveyNum: -1,\n      value: 0,\n      surveyResponse: [],\n\n      selectedValue: -1,\n      selectedAnswer: -1,\n      pressSubmit: 0,\n      dataSubmit: -1\n    }\n  }\n\n  setDataSubmit = (state) => {\n    this.setState({\n      dataSubmit: state\n    })\n  }\n\n  updateSurveyResponse = (response) => {\n    this.setState({\n      surveyResponse: [...this.state.surveyResponse, parseInt(response)]\n    })\n  }\n\n  goToNextSurvey = () => {\n    this.setState({\n      surveyNum: this.state.surveyNum + 1,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  skipQuestions = (questionNum) => {\n    this.setState({\n      questionNum: questionNum\n    })\n  }\n\n  setSubmit = (state) => {\n    this.setState({\n      pressSubmit: state\n    })\n  }\n\n  incrementValue = (value) => {\n    this.setState({\n      value: this.state.value + parseInt(value)\n    })\n  }\n\n  setSelectedValue = (value) => {\n    this.setState({\n      selectedValue: parseInt(value)\n    })\n  }\n\n  resetSelected = () => {\n    this.setState({\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  goToNextQuestion = () => { \n    this.setState({\n      questionNum : this.state.questionNum + 1,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n\n  // goToPrevQuestion = () => { this.setState({\n  //     questionNum : this.state.questionNum - 1, \n  //     selectedAnswer: -1,\n  //     pressSubmit: 0\n  //   })\n  // }\n\n  setSelectedAnswer = (answer) => { this.setState({\n      selectedAnswer: parseInt(answer),\n      pressSubmit: 0\n     })\n  }\n\n  componentDidMount(){\n    this.fetchQuestionsWithAxios()\n  }\n\n  fetchQuestionsWithAxios(){\n    // axios.get(\"https://raw.githubusercontent.com/pond-nj/CyberSecurity-Test/main/src/xml/mc.xml\",\n    axios.get(XMLData,\n\n      {\"Content-Type\":\"application/xml; charset=utf-8\"\n    }).then((response)=>{\n      console.log(response.data)\n      const parser = new DOMParser()\n      var xml = parser.parseFromString(response.data,\"text/xml\")\n\n      var questionsList = Array.from(xml.getElementsByTagName(\"question\"))\n      var feedbackList = Array.from(xml.getElementsByTagName(\"feedbacks\"))\n      var surveyList = Array.from(xml.getElementsByTagName(\"surveyText\"))\n      console.log( surveyList )\n\n      this.setState({\n          questionsList: questionsList,\n          feedbackList: feedbackList,\n          surveyList: surveyList\n      })\n    }).catch( e => {\n      console.log(e)\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header/>\n        <div id =\"wrapper\" data-role=\"content\">\n          <PageManager\n            questionNum={this.state.questionNum}\n            questionsList={this.state.questionsList}\n            selectedAnswer={this.state.selectedAnswer}\n            selectedValue={this.state.selectedValue}\n            value={this.state.value}\n            pressSubmit={this.state.pressSubmit}\n            totalQuestions={this.state.questionsList.length}\n            feedbackList={this.state.feedbackList}\n            surveyNum={this.state.surveyNum}\n            surveyList={this.state.surveyList}\n            totalSurvey={this.state.surveyList.length}\n            surveyResponse={this.state.surveyResponse}\n            dataSubmit={this.state.dataSubmit}\n            \n            goToNextQuestion={this.goToNextQuestion}\n            // goToPrevQuestion={this.goToPrevQuestion}\n            setSelectedAnswer={this.setSelectedAnswer}\n            resetSelected={this.resetSelected}\n            incrementValue={this.incrementValue}\n            setSelectedValue={this.setSelectedValue}\n            setSubmit={this.setSubmit}\n            skipQuestions={this.skipQuestions}\n            goToNextSurvey={this.goToNextSurvey}\n            updateSurveyResponse={this.updateSurveyResponse}\n            setDataSubmit={this.setDataSubmit}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}