{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/Survey.js\";\nimport Buttons from \"./Buttons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SurveyText = _ref => {\n  let {\n    props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"question-number\",\n      children: [\"Survey \", props.surveyNum + 1, \" out of \", props.totalSurvey]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"question\",\n      children: props.surveyList[props.surveyNum].textContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c = SurveyText;\n\nconst Messages = _ref2 => {\n  let {\n    props\n  } = _ref2;\n  // console.log( props.pressSubmit )\n  // console.log( props.selectedAnswer )\n  const Message = props.pressSubmit == 1 && props.selectedAnswer == -1 ? \"Please answer the above question.\" : \"\";\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"messages\",\n    children: Message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n};\n\n_c2 = Messages;\n\nconst FeedBackChoice = _ref3 => {\n  let {\n    props\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [1, 2, 3, 4, 5].map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui-radio\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"answer-\" + index,\n          className: \"hovereffect ui-btn ui-corner-all ui-btn-inherit ui-btn-icon-left \" + (props.selectedAnswer == index ? \"ui-radio-on\" : \"ui-radio-off\"),\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"answer-\" + props.questionNum,\n          index: index,\n          id: \"answer-\" + index,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_c3 = FeedBackChoice;\n\nconst UserForm = _ref4 => {\n  let {\n    props\n  } = _ref4;\n  console.log(props.surveyForm);\n  console.log(props.userIndustry);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"industry\",\n      children: props.surveyForm[0].getElementsByTagName(\"industry\")[0].textContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"industry\",\n      id: \"industry\",\n      value: props.userIndustry,\n      placeholder: \"industry\",\n      onChange: event => {\n        props.setUserInput(0, event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"position\",\n      children: props.surveyForm[0].getElementsByTagName(\"position\")[0].textContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"position\",\n      id: \"position\",\n      value: props.userPosition,\n      placeholder: \"position\",\n      onChange: event => {\n        props.setUserInput(1, event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"location\",\n      children: props.surveyForm[0].getElementsByTagName(\"location\")[0].textContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"location\",\n      id: \"location\",\n      value: props.userLocation,\n      placeholder: \"location\",\n      onChange: event => {\n        props.setUserInput(2, event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"comment\",\n      children: props.surveyForm[0].getElementsByTagName(\"comment\")[0].textContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      cols: \"40\",\n      rows: \"10\",\n      name: \"comment\",\n      id: \"comment\",\n      value: props.userComment,\n      onChange: event => {\n        props.setUserInput(3, event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c4 = UserForm;\n\nconst Survey = _ref5 => {\n  let {\n    props\n  } = _ref5;\n\n  if (props.surveyNum < props.totalSurvey) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"question cf\",\n        children: [/*#__PURE__*/_jsxDEV(SurveyText, {\n          props: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"mc cf\",\n          onClick: event => {\n            props.setSelectedAnswer(event.target.getAttribute(\"index\"));\n          },\n          children: /*#__PURE__*/_jsxDEV(FeedBackChoice, {\n            props: props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Messages, {\n          props: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        props: props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else if (props.surveyNum == props.totalSurvey) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onClick: event => {},\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"question cf\",\n          children: /*#__PURE__*/_jsxDEV(UserForm, {\n            props: props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n          props: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"question cf\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question\",\n          children: props.dataSubmit == -1 ? \"Sending Data to Server. Please do NOT close this tab.\" : \"Thank You for your cooperation. You can now close this tab.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c5 = Survey;\nexport default Survey;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"SurveyText\");\n$RefreshReg$(_c2, \"Messages\");\n$RefreshReg$(_c3, \"FeedBackChoice\");\n$RefreshReg$(_c4, \"UserForm\");\n$RefreshReg$(_c5, \"Survey\");","map":{"version":3,"sources":["/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/Survey.js"],"names":["Buttons","SurveyText","props","surveyNum","totalSurvey","surveyList","textContent","Messages","Message","pressSubmit","selectedAnswer","FeedBackChoice","map","value","index","questionNum","UserForm","console","log","surveyForm","userIndustry","getElementsByTagName","event","setUserInput","target","userPosition","userLocation","userComment","Survey","setSelectedAnswer","getAttribute","dataSubmit"],"mappings":"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","sourcesContent":["import Buttons from \"./Buttons\" \n\nconst SurveyText = ({props}) => {\n    return(<>\n        <p className=\"question-number\">\n            Survey {props.surveyNum + 1} out of {props.totalSurvey}\n        </p>\n        <p className=\"question\">\n            {props.surveyList[props.surveyNum].textContent}\n        </p>\n    </>)\n}\n\nconst Messages = ({props}) => {\n    // console.log( props.pressSubmit )\n    // console.log( props.selectedAnswer )\n    const Message = (props.pressSubmit == 1 && props.selectedAnswer == -1)? \"Please answer the above question.\" : \"\"\n\n    return (<p className=\"messages\">{Message}</p>)\n}\n\nconst FeedBackChoice = ({props}) => {\n    return (<>\n        {[1,2,3,4,5].map( (value, index) => {\n            return(\n            <div className=\"ui-radio\">\n                <label\n                    htmlFor={\"answer-\"+index}\n                    className={\"hovereffect ui-btn ui-corner-all ui-btn-inherit ui-btn-icon-left \" + ((props.selectedAnswer==index)?\"ui-radio-on\":\"ui-radio-off\")}>\n                {value}\n                </label>\n                <input\n                    type=\"radio\"\n                    name={\"answer-\"+props.questionNum}\n                    index={index}\n                    id={\"answer-\"+index}\n                    value={value}/>\n            </div>)\n        })}\n    </>)\n}\n\nconst UserForm = ({props}) => {\n    console.log(props.surveyForm)\n    console.log(props.userIndustry)\n    return(<>\n        <label for=\"industry\">{props.surveyForm[0].getElementsByTagName(\"industry\")[0].textContent}</label>\n        <input type=\"text\" name=\"industry\" id=\"industry\" value={props.userIndustry} placeholder=\"industry\" onChange={(event)=>{\n            props.setUserInput(0,event.target.value)\n        }}/>\n\n        <label for=\"position\">{props.surveyForm[0].getElementsByTagName(\"position\")[0].textContent}</label>\n        <input type=\"text\" name=\"position\" id=\"position\" value={props.userPosition} placeholder=\"position\" onChange={(event)=>{\n            props.setUserInput(1,event.target.value)\n        }}/>\n\n        <label for=\"location\">{props.surveyForm[0].getElementsByTagName(\"location\")[0].textContent}</label>\n        <input type=\"text\" name=\"location\" id=\"location\" value={props.userLocation} placeholder=\"location\" onChange={(event)=>{\n            props.setUserInput(2,event.target.value)\n        }}/>\n\n        <label for=\"comment\">{props.surveyForm[0].getElementsByTagName(\"comment\")[0].textContent}</label>\n        <textarea cols=\"40\" rows=\"10\" name=\"comment\" id=\"comment\" value={props.userComment} onChange={(event)=>{\n            props.setUserInput(3,event.target.value)\n        }}></textarea>\n    </>)\n\n}\n\nconst Survey = ({props}) => {\n\n    if( props.surveyNum < props.totalSurvey ){\n        return(<>\n            <section className=\"question cf\">\n                <SurveyText props={props}/>\n                <form className=\"mc cf\" onClick={(event) => {\n                    props.setSelectedAnswer(event.target.getAttribute(\"index\"))\n                    }}>\n                    <FeedBackChoice props={props} />\n                </form>\n                <Messages props={props}/>\n            </section>\n            <Buttons props={props} />\n        </>)\n    }else if( props.surveyNum == props.totalSurvey ){\n        return(<>\n        {/* still have to edit here */}\n            <form onClick={(event) =>{\n\n            }}>\n                <section className=\"question cf\">\n                    <UserForm props={props} />\n                </section>\n                <Buttons props={props}/>\n            </form>\n        </>)\n    } else {\n        \n        return(<>\n            <section className=\"question cf\">\n                <p className=\"question\">\n                {(props.dataSubmit == -1) ?\n                    \"Sending Data to Server. Please do NOT close this tab.\" :\n                    \"Thank You for your cooperation. You can now close this tab.\"}\n                </p>\n            </section>\n        </>)\n    }\n}\n\nexport default Survey"]},"metadata":{},"sourceType":"module"}