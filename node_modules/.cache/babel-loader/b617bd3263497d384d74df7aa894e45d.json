{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/p-nurse-quiz/src/App.js\";\nimport Header from './Header';\nimport Instruction from './Instruction';\nimport Question from './Question';\nimport React from 'react';\nimport axios from 'axios'; //import './App.css';\n\nimport XMLData from './xml/mc.xml';\nimport './mcstyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSubmit = state => {\n      this.setState({\n        pressSubmit: state\n      });\n    };\n\n    this.incrementValue = value => {\n      this.setState({\n        value: this.state.value + value\n      });\n    };\n\n    this.setSelectedValue = value => {\n      this.setState({\n        selectedValue: value\n      });\n    };\n\n    this.resetSelected = () => {\n      this.setState({\n        selectedAnswer: -1,\n        pressSubmit: 0\n      });\n    };\n\n    this.goToNextQuestion = () => {\n      this.setState({\n        questionNum: this.state.questionNum + 1,\n        selectedAnswer: -1,\n        pressSubmit: 0\n      });\n    };\n\n    this.goToPrevQuestion = () => {\n      this.setState({\n        questionNum: this.state.questionNum - 1,\n        selectedAnswer: -1,\n        pressSubmit: 0\n      });\n    };\n\n    this.setSelectedAnswer = answer => {\n      this.setState({\n        selectedAnswer: answer,\n        pressSubmit: 0\n      });\n    };\n\n    this.state = {\n      questionsList: [],\n      questionNum: -1,\n      value: 0,\n      selectedValue: -1,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    };\n  }\n\n  componentDidMount() {\n    this.fetchQuestionsWithAxios();\n  }\n\n  fetchQuestionsWithAxios() {\n    axios.get(XMLData, {\n      \"Content-Type\": \"application/xml; charset=utf-8\"\n    }).then(response => {\n      const parser = new DOMParser();\n      var xml = parser.parseFromString(response.data, \"text/xml\");\n      var questionsList = Array.from(xml.getElementsByTagName(\"question\"));\n      var feedbackList = Array.from(xml.getElementsByTagName(\"feedback\"));\n      this.setState({\n        questionsList: questionsList,\n        feedbackList: feedbackList\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"wrapper\",\n        \"data-role\": \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Instruction, {\n          questionNum: this.state.questionNum,\n          goToNextQuestion: this.goToNextQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          questionNum: this.state.questionNum,\n          questionsList: this.state.questionsList,\n          selectedAnswer: this.state.selectedAnswer,\n          selectedValue: this.state.selectedValue,\n          value: this.state.value,\n          pressSubmit: this.state.pressSubmit,\n          totalQuestions: this.state.questionsList.length,\n          goToNextQuestion: this.goToNextQuestion,\n          goToPrevQuestion: this.goToPrevQuestion,\n          setSelectedAnswer: this.setSelectedAnswer,\n          resetSelected: this.resetSelected,\n          incrementValue: this.incrementValue,\n          setSelectedValue: this.setSelectedValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/p-nurse-quiz/src/App.js"],"names":["Header","Instruction","Question","React","axios","XMLData","App","Component","constructor","props","setSubmit","state","setState","pressSubmit","incrementValue","value","setSelectedValue","selectedValue","resetSelected","selectedAnswer","goToNextQuestion","questionNum","goToPrevQuestion","setSelectedAnswer","answer","questionsList","componentDidMount","fetchQuestionsWithAxios","get","then","response","parser","DOMParser","xml","parseFromString","data","Array","from","getElementsByTagName","feedbackList","catch","e","console","log","render","length"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAO,eAAP;;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAYlBC,SAZkB,GAYLC,KAAD,IAAW;AACrB,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEF;AADD,OAAd;AAGD,KAhBiB;;AAAA,SAkBlBG,cAlBkB,GAkBAC,KAAD,IAAW;AAC1B,WAAKH,QAAL,CAAc;AACZG,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,KAAX,GAAmBA;AADd,OAAd;AAGD,KAtBiB;;AAAA,SAwBlBC,gBAxBkB,GAwBED,KAAD,IAAW;AAC5B,WAAKH,QAAL,CAAc;AACZK,QAAAA,aAAa,EAAEF;AADH,OAAd;AAGD,KA5BiB;;AAAA,SA8BlBG,aA9BkB,GA8BF,MAAM;AACpB,WAAKN,QAAL,CAAc;AACZO,QAAAA,cAAc,EAAE,CAAC,CADL;AAEZN,QAAAA,WAAW,EAAE;AAFD,OAAd;AAID,KAnCiB;;AAAA,SAqClBO,gBArCkB,GAqCC,MAAM;AACvB,WAAKR,QAAL,CAAc;AACZS,QAAAA,WAAW,EAAG,KAAKV,KAAL,CAAWU,WAAX,GAAyB,CAD3B;AAEZF,QAAAA,cAAc,EAAE,CAAC,CAFL;AAGZN,QAAAA,WAAW,EAAE;AAHD,OAAd;AAKD,KA3CiB;;AAAA,SA6ClBS,gBA7CkB,GA6CC,MAAM;AAAE,WAAKV,QAAL,CAAc;AACrCS,QAAAA,WAAW,EAAG,KAAKV,KAAL,CAAWU,WAAX,GAAyB,CADF;AAErCF,QAAAA,cAAc,EAAE,CAAC,CAFoB;AAGrCN,QAAAA,WAAW,EAAE;AAHwB,OAAd;AAK1B,KAlDiB;;AAAA,SAoDlBU,iBApDkB,GAoDGC,MAAD,IAAY;AAAE,WAAKZ,QAAL,CAAc;AAC5CO,QAAAA,cAAc,EAAEK,MAD4B;AAE5CX,QAAAA,WAAW,EAAE;AAF+B,OAAd;AAIjC,KAxDiB;;AAEhB,SAAKF,KAAL,GAAa;AACXc,MAAAA,aAAa,EAAE,EADJ;AAEXJ,MAAAA,WAAW,EAAE,CAAC,CAFH;AAGXN,MAAAA,KAAK,EAAE,CAHI;AAIXE,MAAAA,aAAa,EAAE,CAAC,CAJL;AAKXE,MAAAA,cAAc,EAAE,CAAC,CALN;AAMXN,MAAAA,WAAW,EAAE;AANF,KAAb;AAQD;;AAgDDa,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,uBAAL;AACD;;AAEDA,EAAAA,uBAAuB,GAAE;AACvBvB,IAAAA,KAAK,CAACwB,GAAN,CAAUvB,OAAV,EACE;AAAC,sBAAe;AAAhB,KADF,EAEGwB,IAFH,CAESC,QAAD,IAAY;AAClB,YAAMC,MAAM,GAAG,IAAIC,SAAJ,EAAf;AACA,UAAIC,GAAG,GAAGF,MAAM,CAACG,eAAP,CAAuBJ,QAAQ,CAACK,IAAhC,EAAqC,UAArC,CAAV;AAEA,UAAIV,aAAa,GAAGW,KAAK,CAACC,IAAN,CAAWJ,GAAG,CAACK,oBAAJ,CAAyB,UAAzB,CAAX,CAApB;AACA,UAAIC,YAAY,GAAGH,KAAK,CAACC,IAAN,CAAWJ,GAAG,CAACK,oBAAJ,CAAyB,UAAzB,CAAX,CAAnB;AAEA,WAAK1B,QAAL,CAAc;AACVa,QAAAA,aAAa,EAAEA,aADL;AAEVc,QAAAA,YAAY,EAAEA;AAFJ,OAAd;AAID,KAbD,EAaGC,KAbH,CAaUC,CAAC,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,KAfD;AAgBD;;AAEDG,EAAAA,MAAM,GAAE;AACNF,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAKhC,KAAlB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,EAAE,EAAE,SAAT;AAAmB,qBAAU,SAA7B;AAAA,gCACE,QAAC,WAAD;AACE,UAAA,WAAW,EAAE,KAAKA,KAAL,CAAWU,WAD1B;AAEE,UAAA,gBAAgB,EAAE,KAAKD;AAFzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,QAAD;AACE,UAAA,WAAW,EAAE,KAAKT,KAAL,CAAWU,WAD1B;AAEE,UAAA,aAAa,EAAE,KAAKV,KAAL,CAAWc,aAF5B;AAGE,UAAA,cAAc,EAAE,KAAKd,KAAL,CAAWQ,cAH7B;AAIE,UAAA,aAAa,EAAE,KAAKR,KAAL,CAAWM,aAJ5B;AAKE,UAAA,KAAK,EAAE,KAAKN,KAAL,CAAWI,KALpB;AAME,UAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWE,WAN1B;AAOE,UAAA,cAAc,EAAE,KAAKF,KAAL,CAAWc,aAAX,CAAyBoB,MAP3C;AAQE,UAAA,gBAAgB,EAAE,KAAKzB,gBARzB;AASE,UAAA,gBAAgB,EAAE,KAAKE,gBATzB;AAUE,UAAA,iBAAiB,EAAE,KAAKC,iBAV1B;AAWE,UAAA,aAAa,EAAE,KAAKL,aAXtB;AAYE,UAAA,cAAc,EAAE,KAAKJ,cAZvB;AAaE,UAAA,gBAAgB,EAAE,KAAKE;AAbzB;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AA/G+B;;AAkHlC,eAAeV,GAAf","sourcesContent":["import Header from './Header'\nimport Instruction from './Instruction'\nimport Question from './Question'\nimport React from 'react'\nimport axios from 'axios'\n\n//import './App.css';\n\nimport XMLData from './xml/mc.xml'\nimport './mcstyle.css'\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      questionsList: [],\n      questionNum: -1,\n      value: 0,\n      selectedValue: -1,\n      selectedAnswer: -1,\n      pressSubmit: 0 \n    }\n  }\n\n  setSubmit = (state) => {\n    this.setState({\n      pressSubmit: state\n    })\n  }\n\n  incrementValue = (value) => {\n    this.setState({\n      value: this.state.value + value\n    })\n  }\n\n  setSelectedValue = (value) => {\n    this.setState({\n      selectedValue: value\n    })\n  }\n\n  resetSelected = () => {\n    this.setState({\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  goToNextQuestion = () => { \n    this.setState({\n      questionNum : this.state.questionNum + 1,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  goToPrevQuestion = () => { this.setState({\n      questionNum : this.state.questionNum - 1, \n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  setSelectedAnswer = (answer) => { this.setState({\n      selectedAnswer: answer,\n      pressSubmit: 0\n     })\n  }\n\n  componentDidMount(){\n    this.fetchQuestionsWithAxios()\n  }\n\n  fetchQuestionsWithAxios(){\n    axios.get(XMLData,\n      {\"Content-Type\":\"application/xml; charset=utf-8\"\n    }).then((response)=>{\n      const parser = new DOMParser()\n      var xml = parser.parseFromString(response.data,\"text/xml\")\n\n      var questionsList = Array.from(xml.getElementsByTagName(\"question\"))\n      var feedbackList = Array.from(xml.getElementsByTagName(\"feedback\"))\n\n      this.setState({\n          questionsList: questionsList,\n          feedbackList: feedbackList\n      })\n    }).catch( e => {\n      console.log(e)\n    })\n  }\n\n  render(){\n    console.log( this.state )\n    return (\n      <div className=\"App\">\n        <Header/>\n        <div id =\"wrapper\" data-role=\"content\">\n          <Instruction\n            questionNum={this.state.questionNum}\n            goToNextQuestion={this.goToNextQuestion}/>\n          <Question\n            questionNum={this.state.questionNum}\n            questionsList={this.state.questionsList}\n            selectedAnswer={this.state.selectedAnswer}\n            selectedValue={this.state.selectedValue}\n            value={this.state.value}\n            pressSubmit={this.state.pressSubmit}\n            totalQuestions={this.state.questionsList.length}\n            goToNextQuestion={this.goToNextQuestion}\n            goToPrevQuestion={this.goToPrevQuestion}\n            setSelectedAnswer={this.setSelectedAnswer}\n            resetSelected={this.resetSelected}\n            incrementValue={this.incrementValue}\n            setSelectedValue={this.setSelectedValue}\n            \n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}