{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/p-nurse-quiz/src/App.js\";\nimport Header from './Header';\nimport Instruction from './Instruction';\nimport Question from './Question';\nimport React from 'react';\nimport axios from 'axios'; //import './App.css';\n\nimport XMLData from './xml/mc.xml'; //import './arrangeprotein.css'\n//import './bootstrap.min.css'\n//import './jquery.mobile-1.4.0.css'\n\nimport './mcstyle.css'; //import './quiz.css'\n//import './style.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.incrementValue = value => {\n      this.setState({\n        value: this.state.value + value\n      });\n    };\n\n    this.setValue = value => {\n      this.setState({\n        selectedValue: value\n      });\n    };\n\n    this.resetSelected = () => {\n      this.setState({\n        selectedAnswer: -1\n      });\n    };\n\n    this.goToNextQuestion = () => {\n      this.setState({\n        questionNum: this.state.questionNum + 1,\n        selectedAnswer: -1\n      });\n    };\n\n    this.goToPrevQuestion = () => {\n      this.setState({\n        questionNum: this.state.questionNum - 1,\n        selectedAnswer: -1\n      });\n    };\n\n    this.setSelectedAnswer = answer => {\n      this.setState({\n        selectedAnswer: answer\n      });\n    };\n\n    this.state = {\n      questions: [],\n      start: -1,\n      questionNum: -1,\n      questionTexts: [],\n      answers: [],\n      valueList: [],\n      value: 0,\n      selectedValue: -1,\n      selectedAnswer: -1\n    };\n  }\n\n  componentDidMount() {\n    this.fetchQuestionsWithAxios();\n  }\n\n  fetchQuestionsWithAxios() {\n    axios.get(XMLData, {\n      \"Content-Type\": \"application/xml; charset=utf-8\"\n    }).then(response => {\n      const parser = new DOMParser();\n      var xml = parser.parseFromString(response.data, \"text/xml\");\n      var questions = Array.from(xml.getElementsByTagName(\"question\"));\n      var answers = Array.from(xml.getElementsByTagName(\"answer\")); //answers should be an array of <answer>\n\n      var valueList = Array.from(xml.getElementsByTagName(\"value\"));\n      this.setState({\n        questions: questions,\n        answers: answers,\n        valueList: valueList\n      });\n    }).catch(e => {\n      console.log(e); //this.setState({ isFetched: false })\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"wrapper\",\n        \"data-role\": \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Instruction, {\n          questionNum: this.state.questionNum,\n          goToNextQuestion: this.goToNextQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          questionNum: this.state.questionNum,\n          questions: this.state.questions,\n          selectedAnswer: this.state.selectedAnswer,\n          choices: this.state.answers.filter((_, index) => {\n            return this.state.questionNum * 4 <= index && index <= this.state.questionNum * 4 + 3;\n          }),\n          values: this.state.valueList.filter((_, index) => {\n            return this.state.questionNum * 4 <= index && index <= this.state.questionNum * 4 + 3;\n          }),\n          goToNextQuestion: this.goToNextQuestion,\n          goToPrevQuestion: this.goToPrevQuestion,\n          setSelectedAnswer: this.setSelectedAnswer,\n          resetSelected: this.resetSelected,\n          incrementValue: this.incrementValue,\n          setValue: this.setValue,\n          state: this.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/p-nurse-quiz/src/App.js"],"names":["Header","Instruction","Question","React","axios","XMLData","App","Component","constructor","props","incrementValue","value","setState","state","setValue","selectedValue","resetSelected","selectedAnswer","goToNextQuestion","questionNum","goToPrevQuestion","setSelectedAnswer","answer","questions","start","questionTexts","answers","valueList","componentDidMount","fetchQuestionsWithAxios","get","then","response","parser","DOMParser","xml","parseFromString","data","Array","from","getElementsByTagName","catch","e","console","log","render","filter","_","index"],"mappings":"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","sourcesContent":["import Header from './Header'\nimport Instruction from './Instruction'\nimport Question from './Question'\nimport React from 'react'\nimport axios from 'axios'\n\n//import './App.css';\n\nimport XMLData from './xml/mc.xml'\n//import './arrangeprotein.css'\n//import './bootstrap.min.css'\n//import './jquery.mobile-1.4.0.css'\nimport './mcstyle.css'\n//import './quiz.css'\n//import './style.css'\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      questions: [],\n      start: -1,\n      questionNum: -1,\n      questionTexts: [],\n      answers: [],\n      valueList: [],\n      value: 0,\n      selectedValue: -1,\n      selectedAnswer: -1,\n    }\n  }\n\n  incrementValue = (value) => {\n    this.setState({\n      value: this.state.value + value\n    })\n  }\n\n  setValue = (value) => {\n    this.setState({\n      selectedValue: value\n    })\n  }\n\n  resetSelected = () => {\n    this.setState({\n      selectedAnswer: -1\n    })\n  }\n\n  goToNextQuestion = () => { \n    this.setState({\n      questionNum : this.state.questionNum + 1,\n      selectedAnswer: -1\n    })\n  }\n\n  goToPrevQuestion = () => { this.setState({\n      questionNum : this.state.questionNum - 1, \n      selectedAnswer: -1\n    })\n  }\n\n  setSelectedAnswer = (answer) => { this.setState({\n      selectedAnswer: answer\n     })\n  }\n\n  componentDidMount(){\n    this.fetchQuestionsWithAxios()\n  }\n\n  fetchQuestionsWithAxios(){\n    axios.get(XMLData,\n      {\"Content-Type\":\"application/xml; charset=utf-8\"\n    }).then((response)=>{\n      const parser = new DOMParser()\n      var xml = parser.parseFromString(response.data,\"text/xml\")\n\n      var questions = Array.from(xml.getElementsByTagName(\"question\"))\n\n      var answers = Array.from(xml.getElementsByTagName(\"answer\"))\n      //answers should be an array of <answer>\n\n      var valueList = Array.from(xml.getElementsByTagName(\"value\"))\n\n      this.setState({\n          questions: questions,\n          answers: answers,\n          valueList: valueList\n      })\n    }).catch( e => {\n      console.log(e)\n      //this.setState({ isFetched: false })\n    })\n  }\n\n  render(){\n    console.log( this.state )\n    return (\n      <div className=\"App\">\n        <Header/>\n        <div id =\"wrapper\" data-role=\"content\">\n          <Instruction\n            questionNum={this.state.questionNum}\n            goToNextQuestion={this.goToNextQuestion}/>\n          <Question\n            questionNum={this.state.questionNum}\n            questions={this.state.questions}\n            selectedAnswer={this.state.selectedAnswer}\n            choices = {this.state.answers.filter( (_ , index) => {\n              return ((this.state.questionNum*4 <= index) && (index <= this.state.questionNum*4 + 3))\n            })}\n            values = {this.state.valueList.filter( (_ , index) => {\n              return ((this.state.questionNum*4 <= index) && (index <= this.state.questionNum*4 + 3))\n            })}\n\n            goToNextQuestion={this.goToNextQuestion}\n            goToPrevQuestion={this.goToPrevQuestion}\n            setSelectedAnswer={this.setSelectedAnswer}\n            resetSelected={this.resetSelected}\n            incrementValue={this.incrementValue}\n            setValue={this.setValue}\n            state={this.state}\n\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}