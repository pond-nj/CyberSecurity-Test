{"ast":null,"code":"import _classCallCheck from\"/Users/nutdranai.jaruthikorn/Desktop/git-repo/CyberSecurity-Test/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/nutdranai.jaruthikorn/Desktop/git-repo/CyberSecurity-Test/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/nutdranai.jaruthikorn/Desktop/git-repo/CyberSecurity-Test/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/nutdranai.jaruthikorn/Desktop/git-repo/CyberSecurity-Test/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import Header from'./Header';import Instruction from'./Instruction';import Question from'./Question';import React from'react';import axios from'axios';//import './App.css';\nimport XMLData from'./xml/mc.xml';import'./mcstyle.css';/*\n  Problem:\n\n    change page title\n\n    Responder can comeback to edit choice\n\n    collect survey on user feeling, send data to server\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.setSubmit=function(state){_this.setState({pressSubmit:state});};_this.incrementValue=function(value){_this.setState({value:_this.state.value+value});};_this.setSelectedValue=function(value){_this.setState({selectedValue:value});};_this.resetSelected=function(){_this.setState({selectedAnswer:-1,pressSubmit:0});};_this.goToNextQuestion=function(){_this.setState({questionNum:_this.state.questionNum+1,selectedAnswer:-1,pressSubmit:0});};_this.goToPrevQuestion=function(){_this.setState({questionNum:_this.state.questionNum-1,selectedAnswer:-1,pressSubmit:0});};_this.setSelectedAnswer=function(answer){_this.setState({selectedAnswer:answer,pressSubmit:0});};_this.state={questionsList:[],questionNum:-1,//0 to total no. of question-1, 0 is the first question\nvalue:0,selectedValue:-1,selectedAnswer:-1,pressSubmit:0,feedbackList:[]//node that contains feedback data\n};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchQuestionsWithAxios();}},{key:\"fetchQuestionsWithAxios\",value:function fetchQuestionsWithAxios(){var _this2=this;axios.get(XMLData,{\"Content-Type\":\"application/xml; charset=utf-8\"}).then(function(response){var parser=new DOMParser();var xml=parser.parseFromString(response.data,\"text/xml\");var questionsList=Array.from(xml.getElementsByTagName(\"question\"));var feedbackList=Array.from(xml.getElementsByTagName(\"feedbacks\"));console.log(feedbackList[0]);_this2.setState({questionsList:questionsList,feedbackList:feedbackList});}).catch(function(e){console.log(e);});}},{key:\"render\",value:function render(){console.log(this.state);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{id:\"wrapper\",\"data-role\":\"content\",children:[/*#__PURE__*/_jsx(Instruction,{questionNum:this.state.questionNum,goToNextQuestion:this.goToNextQuestion}),/*#__PURE__*/_jsx(Question,{questionNum:this.state.questionNum,questionsList:this.state.questionsList,selectedAnswer:this.state.selectedAnswer,selectedValue:this.state.selectedValue,value:this.state.value,pressSubmit:this.state.pressSubmit,totalQuestions:this.state.questionsList.length,feedbackList:this.state.feedbackList,goToNextQuestion:this.goToNextQuestion,goToPrevQuestion:this.goToPrevQuestion,setSelectedAnswer:this.setSelectedAnswer,resetSelected:this.resetSelected,incrementValue:this.incrementValue,setSelectedValue:this.setSelectedValue,setSubmit:this.setSubmit})]})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/git-repo/CyberSecurity-Test/src/App.js"],"names":["Header","Instruction","Question","React","axios","XMLData","App","props","setSubmit","state","setState","pressSubmit","incrementValue","value","setSelectedValue","selectedValue","resetSelected","selectedAnswer","goToNextQuestion","questionNum","goToPrevQuestion","setSelectedAnswer","answer","questionsList","feedbackList","fetchQuestionsWithAxios","get","then","response","parser","DOMParser","xml","parseFromString","data","Array","from","getElementsByTagName","console","log","catch","e","length","Component"],"mappings":"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","sourcesContent":["import Header from './Header'\nimport Instruction from './Instruction'\nimport Question from './Question'\nimport React from 'react'\nimport axios from 'axios'\n\n//import './App.css';\n\nimport XMLData from './xml/mc.xml'\nimport './mcstyle.css'\n\n\n/*\n  Problem:\n\n    change page title\n\n    Responder can comeback to edit choice\n\n    collect survey on user feeling, send data to server\n*/\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      questionsList: [],\n      questionNum: -1, //0 to total no. of question-1, 0 is the first question\n      value: 0,\n      selectedValue: -1,\n      selectedAnswer: -1,\n      pressSubmit: 0,\n      feedbackList: [] //node that contains feedback data\n    }\n  }\n\n  setSubmit = (state) => {\n    this.setState({\n      pressSubmit: state\n    })\n  }\n\n  incrementValue = (value) => {\n    this.setState({\n      value: this.state.value + value\n    })\n  }\n\n  setSelectedValue = (value) => {\n    this.setState({\n      selectedValue: value\n    })\n  }\n\n  resetSelected = () => {\n    this.setState({\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  goToNextQuestion = () => { \n    this.setState({\n      questionNum : this.state.questionNum + 1,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  goToPrevQuestion = () => { this.setState({\n      questionNum : this.state.questionNum - 1, \n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  setSelectedAnswer = (answer) => { this.setState({\n      selectedAnswer: answer,\n      pressSubmit: 0\n     })\n  }\n\n  componentDidMount(){\n    this.fetchQuestionsWithAxios()\n  }\n\n  fetchQuestionsWithAxios(){\n    axios.get(XMLData,\n      {\"Content-Type\":\"application/xml; charset=utf-8\"\n    }).then((response)=>{\n      const parser = new DOMParser()\n      var xml = parser.parseFromString(response.data,\"text/xml\")\n\n      var questionsList = Array.from(xml.getElementsByTagName(\"question\"))\n      var feedbackList = Array.from(xml.getElementsByTagName(\"feedbacks\"))\n      console.log( feedbackList[0] )\n      this.setState({\n          questionsList: questionsList,\n          feedbackList: feedbackList\n      })\n    }).catch( e => {\n      console.log(e)\n    })\n  }\n\n  render(){\n    console.log( this.state )\n    return (\n      <div className=\"App\">\n        <Header/>\n        <div id =\"wrapper\" data-role=\"content\">\n          <Instruction\n            questionNum={this.state.questionNum}\n            goToNextQuestion={this.goToNextQuestion}/>\n          <Question\n            questionNum={this.state.questionNum}\n            questionsList={this.state.questionsList}\n            selectedAnswer={this.state.selectedAnswer}\n            selectedValue={this.state.selectedValue}\n            value={this.state.value}\n            pressSubmit={this.state.pressSubmit}\n            totalQuestions={this.state.questionsList.length}\n            feedbackList={this.state.feedbackList}\n            \n            goToNextQuestion={this.goToNextQuestion}\n            goToPrevQuestion={this.goToPrevQuestion}\n            setSelectedAnswer={this.setSelectedAnswer}\n            resetSelected={this.resetSelected}\n            incrementValue={this.incrementValue}\n            setSelectedValue={this.setSelectedValue}\n            setSubmit={this.setSubmit}\n            \n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}