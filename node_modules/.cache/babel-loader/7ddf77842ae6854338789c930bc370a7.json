{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/p-nurse-quiz/src/Question.js\";\nimport React, { useState } from \"react\";\nimport Buttons from \"./Buttons\"; //contain question text\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DisplayText = _ref => {\n  let {\n    props\n  } = _ref;\n\n  if (props.questionNum != -1 && props.questionNum != props.totalQuestions) {\n    //-1 is start menu\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-number\",\n        children: [\"Question \", props.questionNum + 1, \" out of \", props.totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: props.questionsList[props.questionNum].textContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}; //display choices\n\n\n_c = DisplayText;\n\nconst ChoiceList = _ref2 => {\n  let {\n    props\n  } = _ref2;\n  //console.log(props)\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"mc cf\",\n    onClick: event => {\n      props.setSelectedAnswer(event.target.getAttribute(\"index\"));\n      props.setSelectedValue(parseInt(event.target.getAttribute(\"index\")));\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui-radio\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"answer-\" + 1,\n        className: \"hovereffect ui-btn ui-corner-all ui-btn-inherit ui-btn-icon-left \" + (props.selectedAnswer == 1 ? \"ui-radio-on\" : \"ui-radio-off\"),\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"answer-\" + props.questionNum,\n        index: 1,\n        id: \"answer-\" + 1,\n        value: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui-radio\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"answer-\" + 0,\n        className: \"hovereffect ui-btn ui-corner-all ui-btn-inherit ui-btn-icon-left \" + (props.selectedAnswer == 0 ? \"ui-radio-on\" : \"ui-radio-off\"),\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"answer-\" + props.questionNum,\n        index: 0,\n        id: \"answer-\" + 0,\n        value: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ChoiceList;\n\nconst Messages = _ref3 => {\n  let {\n    props\n  } = _ref3;\n  const Message = props.pressSubmit == 1 && props.selectedAnswer == -1 ? \"Please answer the above question.\" : \"\";\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"messages\",\n    children: Message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }, this);\n};\n\n_c3 = Messages;\n\nconst Question = props => {\n  if (props.questionNum != -1 && props.questionNum != props.totalQuestions) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"question cf\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instruction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DisplayText, {\n          props: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ChoiceList, {\n          props: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Messages, {\n          props: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Value: \", props.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"selectedValue: \", props.selectedValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        props: props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else if (props.questionNum == props.totalQuestions) {\n    console.log(props.feedbackList);\n    console.log(props.feedbackList[0]);\n    console.log(props.feedbackList);\n    const weakThreshold = props.feedbackList[0].childNodes[1].getAttribute(\"threshold\");\n    const moderateThreshold = props.feedbackList[0].childNodes[3].getAttribute(\"threshold\");\n    var result;\n\n    if (props.value <= weakThreshold) {\n      result = \"weak\";\n    } else if (props.value <= moderateThreshold) {\n      result = \"moderate\";\n    } else {\n      result = \"strong\";\n    } //SHOULDN'T DEPEND ON INDEX, SHOULD DEPEND ON TAG NAME INSTEAD\n\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"question cf\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.feedbackList[0].childNodes[1].textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.feedbackList[0].childNodes[3].textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.feedbackList[0].childNodes[5].textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Score: \", props.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Your result is \", result, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n\n_c4 = Question;\nexport default Question;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DisplayText\");\n$RefreshReg$(_c2, \"ChoiceList\");\n$RefreshReg$(_c3, \"Messages\");\n$RefreshReg$(_c4, \"Question\");","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/p-nurse-quiz/src/Question.js"],"names":["React","useState","Buttons","DisplayText","props","questionNum","totalQuestions","questionsList","textContent","ChoiceList","event","setSelectedAnswer","target","getAttribute","setSelectedValue","parseInt","selectedAnswer","Messages","Message","pressSubmit","Question","value","selectedValue","console","log","feedbackList","weakThreshold","childNodes","moderateThreshold","result"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport Buttons from \"./Buttons\"\n\n//contain question text\nconst DisplayText = ({props}) => {\n    if( props.questionNum != -1 && props.questionNum != props.totalQuestions ){ //-1 is start menu\n        return (<>\n            <p className=\"question-number\">Question {props.questionNum + 1} out of {props.totalQuestions}</p>\n            <p className=\"question\">{props.questionsList[props.questionNum].textContent}</p>\n        </>)\n    } \n}\n\n\n//display choices\nconst ChoiceList = ({props}) => {\n    //console.log(props)\n\n    return(\n        <form className=\"mc cf\" onClick={(event) => {\n            props.setSelectedAnswer(event.target.getAttribute(\"index\"))\n            props.setSelectedValue(parseInt(event.target.getAttribute(\"index\")))\n            }}>\n            <div className=\"ui-radio\">\n                <label\n                    htmlFor={\"answer-\"+1}\n                    className={\"hovereffect ui-btn ui-corner-all ui-btn-inherit ui-btn-icon-left \" + ((props.selectedAnswer==1)?\"ui-radio-on\":\"ui-radio-off\")}>\n                Yes\n                </label>\n                <input\n                    type=\"radio\"\n                    name={\"answer-\"+props.questionNum}\n                    index={1}\n                    id={\"answer-\"+1}\n                    value=\"Yes\"/>\n            </div>\n            <div className=\"ui-radio\">\n                <label\n                    htmlFor={\"answer-\"+0}\n                    className={\"hovereffect ui-btn ui-corner-all ui-btn-inherit ui-btn-icon-left \" + ((props.selectedAnswer==0)?\"ui-radio-on\":\"ui-radio-off\")}>\n                No\n                </label>\n                <input\n                    type=\"radio\"\n                    name={\"answer-\"+props.questionNum}\n                    index={0}\n                    id={\"answer-\"+0}\n                    value=\"No\"/>\n            </div>\n        </form>\n    )\n}\n\nconst Messages = ({props}) => {\n    const Message = (props.pressSubmit == 1 && props.selectedAnswer == -1)? \"Please answer the above question.\" : \"\"\n\n    return (<p className=\"messages\">{Message}</p>)\n}\n\nconst Question = (props) => {\n    if( props.questionNum != - 1 && props.questionNum != props.totalQuestions ){\n        return(<>\n            <section className=\"question cf\">\n                <p className=\"instruction\"></p>\n                <DisplayText props={props} />\n                <ChoiceList props={props}/>\n                <Messages props = {props}/>\n            </section>\n\n            <p>Value: {props.value}</p>\n            <p>selectedValue: {props.selectedValue}</p>\n\n            <Buttons\n                props={props}\n            />\n        </>)\n    } else if( props.questionNum == props.totalQuestions ){\n\n        console.log( props.feedbackList )\n        console.log( props.feedbackList[0] )\n        console.log( props.feedbackList )\n        \n\n        const weakThreshold = props.feedbackList[0].childNodes[1].getAttribute(\"threshold\")\n        const moderateThreshold = props.feedbackList[0].childNodes[3].getAttribute(\"threshold\")\n        \n        var result\n        if( props.value <= weakThreshold ){ result = \"weak\"\n        } else if( props.value <= moderateThreshold ){ result = \"moderate\"\n        } else { result = \"strong\" }\n\n        //SHOULDN'T DEPEND ON INDEX, SHOULD DEPEND ON TAG NAME INSTEAD\n\n\n        return (<>\n            <section className=\"question cf\">\n                <p>{props.feedbackList[0].childNodes[1].textContent}</p>\n                <p>{props.feedbackList[0].childNodes[3].textContent}</p>\n                <p>{props.feedbackList[0].childNodes[5].textContent}</p>\n                <p>Total Score: {props.value}</p>\n                <p> Your result is {result} </p>\n            </section>\n        </>)\n    } else { return(<></>)}\n    \n    \n}\n\nexport default Question"]},"metadata":{},"sourceType":"module"}