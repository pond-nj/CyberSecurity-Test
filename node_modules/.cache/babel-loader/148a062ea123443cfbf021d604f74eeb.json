{"ast":null,"code":"import _toConsumableArray from\"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import Header from'./Header';import PageManager from'./PageManager';import React from'react';import axios from'axios';// import XMLData from './xml/mc.xml'\nimport'./mcstyle.css';/*\n  Problem:\n\n    change page title\n\n    Responder can comeback to edit choice\n\n    collect survey on user feeling, send data to server\n\n    ## change survey to a new module\n\n    ## change state that's string but is supposed to be int to int\n\n    ## create page manager\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.setUserInput=function(index,inputText){if(index==0){_this.setState({userIndustry:inputText});}else if(index==1){_this.setState({userPosition:inputText});}else if(index==2){_this.setState({userLocation:inputText});}else if(index==3){_this.setState({userComment:inputText});}};_this.setDataSubmit=function(state){_this.setState({dataSubmit:state});};_this.updateUserChoice=function(response){_this.setState({userChoice:[].concat(_toConsumableArray(_this.state.userChoice),[parseInt(response)])});};_this.updateSurveyResponse=function(response){_this.setState({surveyResponse:[].concat(_toConsumableArray(_this.state.surveyResponse),[parseInt(response)])});};_this.goToNextSurvey=function(){_this.setState({surveyNum:_this.state.surveyNum+1,selectedAnswer:-1,pressSubmit:0});};_this.skipQuestions=function(questionNum){_this.setState({questionNum:questionNum});};_this.setSubmit=function(state){_this.setState({pressSubmit:state});};_this.incrementValue=function(value){_this.setState({value:_this.state.value+parseInt(value)});};_this.setSelectedValue=function(value){_this.setState({selectedValue:parseInt(value)});};_this.resetSelected=function(){_this.setState({//for reset selected reset everything\nselectedAnswer:-1,selectedValue:-1,pressSubmit:0});};_this.goToNextQuestion=function(){_this.setState({questionNum:_this.state.questionNum+1,selectedAnswer:-1,pressSubmit:0});};_this.setSelectedAnswer=function(answer){_this.setState({selectedAnswer:parseInt(answer),pressSubmit:0});};_this.state={questionsList:[],feedbackList:[],//xmlnode that contains feedback data\nsurveyList:[],//\nsurveyForm:[],questionNum:-1,//0 to total no. of question-1, 0 is the first question\nsurveyNum:-1,value:0,surveyResponse:[],//save user's multiple choice response in this array\nuserChoice:[],userIndustry:\"\",userPosition:\"\",userLocation:\"\",//save user's text input in this array\nuserComment:\"\",selectedValue:-1,selectedAnswer:-1,pressSubmit:0,dataSubmit:-1};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchQuestionsWithAxios();}},{key:\"fetchQuestionsWithAxios\",value:function fetchQuestionsWithAxios(){var _this2=this;// axios.get(XMLData,\naxios.get(\"https://raw.githubusercontent.com/pond-nj/CyberSecurity-Test/main/src/xml/mc.xml\",{\"Content-Type\":\"application/xml; charset=utf-8\"}).then(function(response){var parser=new DOMParser();var xml=parser.parseFromString(response.data,\"text/xml\");var questionsList=Array.from(xml.getElementsByTagName(\"question\"));var feedbackList=Array.from(xml.getElementsByTagName(\"feedbacks\"));var surveyList=Array.from(xml.getElementsByTagName(\"surveyText\"));var surveyForm=Array.from(xml.getElementsByTagName(\"surveyForm\"));_this2.setState({questionsList:questionsList,feedbackList:feedbackList,surveyList:surveyList,surveyForm:surveyForm});}).catch(function(e){console.log(e);});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"div\",{id:\"wrapper\",\"data-role\":\"content\",children:/*#__PURE__*/_jsx(PageManager,{questionNum:this.state.questionNum,questionsList:this.state.questionsList,selectedAnswer:this.state.selectedAnswer,selectedValue:this.state.selectedValue,value:this.state.value,pressSubmit:this.state.pressSubmit,totalQuestions:this.state.questionsList.length,feedbackList:this.state.feedbackList,surveyNum:this.state.surveyNum,surveyList:this.state.surveyList,totalSurvey:this.state.surveyList.length,surveyResponse:this.state.surveyResponse,surveyForm:this.state.surveyForm,dataSubmit:this.state.dataSubmit,userIndustry:this.state.userIndustry,userPosition:this.state.userPosition,userLocation:this.state.userLocation,userComment:this.state.userComment,userChoice:this.state.userChoice,goToNextQuestion:this.goToNextQuestion// goToPrevQuestion={this.goToPrevQuestion}\n,setSelectedAnswer:this.setSelectedAnswer,resetSelected:this.resetSelected,incrementValue:this.incrementValue,setSelectedValue:this.setSelectedValue,setSubmit:this.setSubmit,skipQuestions:this.skipQuestions,goToNextSurvey:this.goToNextSurvey,updateSurveyResponse:this.updateSurveyResponse,setDataSubmit:this.setDataSubmit,setUserInput:this.setUserInput,updateUserChoice:this.updateUserChoice})})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/App.js"],"names":["Header","PageManager","React","axios","App","props","setUserInput","index","inputText","setState","userIndustry","userPosition","userLocation","userComment","setDataSubmit","state","dataSubmit","updateUserChoice","response","userChoice","parseInt","updateSurveyResponse","surveyResponse","goToNextSurvey","surveyNum","selectedAnswer","pressSubmit","skipQuestions","questionNum","setSubmit","incrementValue","value","setSelectedValue","selectedValue","resetSelected","goToNextQuestion","setSelectedAnswer","answer","questionsList","feedbackList","surveyList","surveyForm","fetchQuestionsWithAxios","get","then","parser","DOMParser","xml","parseFromString","data","Array","from","getElementsByTagName","catch","e","console","log","length","Component"],"mappings":"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","sourcesContent":["import Header from './Header'\nimport PageManager from './PageManager'\nimport React from 'react'\nimport axios from 'axios'\n\n// import XMLData from './xml/mc.xml'\nimport './mcstyle.css'\n\n\n/*\n  Problem:\n\n    change page title\n\n    Responder can comeback to edit choice\n\n    collect survey on user feeling, send data to server\n\n    ## change survey to a new module\n\n    ## change state that's string but is supposed to be int to int\n\n    ## create page manager\n*/\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      questionsList: [],\n      feedbackList: [], //xmlnode that contains feedback data\n      surveyList: [], //\n      surveyForm: [],\n\n      questionNum: -1, //0 to total no. of question-1, 0 is the first question\n      surveyNum: -1,\n      value: 0,\n      surveyResponse: [], //save user's multiple choice response in this array\n      userChoice: [],\n      userIndustry: \"\",\n      userPosition: \"\",\n      userLocation: \"\", //save user's text input in this array\n      userComment: \"\",\n\n      selectedValue: -1,\n      selectedAnswer: -1,\n      pressSubmit: 0,\n      dataSubmit: -1\n    }\n  }\n\n  setUserInput = (index, inputText) => { \n    if( index == 0) { this.setState({\n      userIndustry: inputText\n    })} else if( index == 1 ){ this.setState({\n      userPosition: inputText\n    })} else if( index == 2 ){this.setState({\n      userLocation: inputText\n    })} else if( index == 3 ){this.setState({\n      userComment: inputText\n    })}\n  }\n\n  setDataSubmit = (state) => { this.setState({\n      dataSubmit: state\n    })\n  }\n\n  updateUserChoice = (response) => { this.setState({\n    userChoice: [...this.state.userChoice, parseInt(response)]\n  })}\n\n  updateSurveyResponse = (response) => { this.setState({\n      surveyResponse: [...this.state.surveyResponse, parseInt(response)]\n    })\n  }\n\n  goToNextSurvey = () => { this.setState({\n      surveyNum: this.state.surveyNum + 1,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  skipQuestions = (questionNum) => { this.setState({\n      questionNum: questionNum\n    })\n  }\n\n  setSubmit = (state) => { this.setState({\n      pressSubmit: state\n    })\n  }\n\n  incrementValue = (value) => { \n    this.setState({\n      value: this.state.value + parseInt(value)\n    })\n  }\n\n  setSelectedValue = (value) => { this.setState({\n      selectedValue: parseInt(value)\n    })\n  }\n\n  resetSelected = () => { this.setState({ //for reset selected reset everything\n      selectedAnswer: -1,\n      selectedValue: -1,\n      pressSubmit: 0\n    })\n  }\n\n  goToNextQuestion = () => { this.setState({\n      questionNum : this.state.questionNum + 1,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n\n  // goToPrevQuestion = () => { this.setState({\n  //     questionNum : this.state.questionNum - 1, \n  //     selectedAnswer: -1,\n  //     pressSubmit: 0\n  //   })\n  // }\n\n  setSelectedAnswer = (answer) => { \n    this.setState({\n      selectedAnswer: parseInt(answer),\n      pressSubmit: 0\n     })\n  }\n\n  componentDidMount(){\n    this.fetchQuestionsWithAxios()\n  }\n\n  fetchQuestionsWithAxios(){\n    // axios.get(XMLData,\n    \n    axios.get(\"https://raw.githubusercontent.com/pond-nj/CyberSecurity-Test/main/src/xml/mc.xml\",\n      {\"Content-Type\":\"application/xml; charset=utf-8\"\n    }).then((response)=>{\n      const parser = new DOMParser()\n      var xml = parser.parseFromString(response.data,\"text/xml\")\n\n      var questionsList = Array.from(xml.getElementsByTagName(\"question\"))\n      var feedbackList = Array.from(xml.getElementsByTagName(\"feedbacks\"))\n      var surveyList = Array.from(xml.getElementsByTagName(\"surveyText\"))\n      var surveyForm = Array.from(xml.getElementsByTagName(\"surveyForm\"))\n\n      this.setState({\n          questionsList: questionsList,\n          feedbackList: feedbackList,\n          surveyList: surveyList,\n          surveyForm: surveyForm\n      })\n    }).catch( e => {\n      console.log(e)\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header/>\n        <div id =\"wrapper\" data-role=\"content\">\n          <PageManager\n            questionNum={this.state.questionNum}\n            questionsList={this.state.questionsList}\n            selectedAnswer={this.state.selectedAnswer}\n            selectedValue={this.state.selectedValue}\n            value={this.state.value}\n            pressSubmit={this.state.pressSubmit}\n            totalQuestions={this.state.questionsList.length}\n            feedbackList={this.state.feedbackList}\n            surveyNum={this.state.surveyNum}\n            surveyList={this.state.surveyList}\n            totalSurvey={this.state.surveyList.length}\n            surveyResponse={this.state.surveyResponse}\n            surveyForm={this.state.surveyForm}\n            dataSubmit={this.state.dataSubmit}\n            userIndustry={this.state.userIndustry}\n            userPosition={this.state.userPosition}\n            userLocation={this.state.userLocation}\n            userComment={this.state.userComment}\n            userChoice={this.state.userChoice}\n            \n            goToNextQuestion={this.goToNextQuestion}\n            // goToPrevQuestion={this.goToPrevQuestion}\n            setSelectedAnswer={this.setSelectedAnswer}\n            resetSelected={this.resetSelected}\n            incrementValue={this.incrementValue}\n            setSelectedValue={this.setSelectedValue}\n            setSubmit={this.setSubmit}\n            skipQuestions={this.skipQuestions}\n            goToNextSurvey={this.goToNextSurvey}\n            updateSurveyResponse={this.updateSurveyResponse}\n            setDataSubmit={this.setDataSubmit}\n            setUserInput={this.setUserInput}\n            updateUserChoice={this.updateUserChoice}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}