{"ast":null,"code":"var _jsxFileName = \"/Users/nutdranai.jaruthikorn/Desktop/itsc/p-nurse-quiz/src/App.js\";\nimport Header from './Header';\nimport Instruction from './Instruction';\nimport Question from './Question';\nimport React from 'react';\nimport axios from 'axios'; //import './App.css';\n\nimport XMLData from './xml/mc.xml';\nimport './mcstyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSubmit = state => {\n      this.setState({\n        pressSubmit: state\n      });\n    };\n\n    this.incrementValue = value => {\n      this.setState({\n        value: this.state.value + value\n      });\n    };\n\n    this.setSelectedValue = value => {\n      this.setState({\n        selectedValue: value\n      });\n    };\n\n    this.resetSelected = () => {\n      this.setState({\n        selectedAnswer: -1,\n        pressSubmit: 0\n      });\n    };\n\n    this.goToNextQuestion = () => {\n      this.setState({\n        questionNum: this.state.questionNum + 1,\n        selectedAnswer: -1,\n        pressSubmit: 0\n      });\n    };\n\n    this.goToPrevQuestion = () => {\n      this.setState({\n        questionNum: this.state.questionNum - 1,\n        selectedAnswer: -1,\n        pressSubmit: 0\n      });\n    };\n\n    this.setSelectedAnswer = answer => {\n      this.setState({\n        selectedAnswer: answer\n      });\n    };\n\n    this.state = {\n      questions: [],\n      questionNum: -1,\n      questionTexts: [],\n      answers: [],\n      value: 0,\n      selectedValue: -1,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    };\n  }\n\n  componentDidMount() {\n    this.fetchQuestionsWithAxios();\n  }\n\n  fetchQuestionsWithAxios() {\n    axios.get(XMLData, {\n      \"Content-Type\": \"application/xml; charset=utf-8\"\n    }).then(response => {\n      const parser = new DOMParser();\n      var xml = parser.parseFromString(response.data, \"text/xml\");\n      var questions = Array.from(xml.getElementsByTagName(\"question\"));\n      var answers = Array.from(xml.getElementsByTagName(\"answer\"));\n      this.setState({\n        questions: questions,\n        answers: answers\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"wrapper\",\n        \"data-role\": \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Instruction, {\n          questionNum: this.state.questionNum,\n          goToNextQuestion: this.goToNextQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          questionNum: this.state.questionNum,\n          questions: this.state.questions,\n          selectedAnswer: this.state.selectedAnswer,\n          selectedValue: this.state.selectedValue,\n          value: this.state.value,\n          choices: this.state.answers.filter((_, index) => {\n            return this.state.questionNum * 4 <= index && index <= this.state.questionNum * 4 + 3;\n          }),\n          goToNextQuestion: this.goToNextQuestion,\n          goToPrevQuestion: this.goToPrevQuestion,\n          setSelectedAnswer: this.setSelectedAnswer,\n          resetSelected: this.resetSelected,\n          incrementValue: this.incrementValue,\n          setSelectedValue: this.setSelectedValue,\n          state: this.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nutdranai.jaruthikorn/Desktop/itsc/p-nurse-quiz/src/App.js"],"names":["Header","Instruction","Question","React","axios","XMLData","App","Component","constructor","props","setSubmit","state","setState","pressSubmit","incrementValue","value","setSelectedValue","selectedValue","resetSelected","selectedAnswer","goToNextQuestion","questionNum","goToPrevQuestion","setSelectedAnswer","answer","questions","questionTexts","answers","componentDidMount","fetchQuestionsWithAxios","get","then","response","parser","DOMParser","xml","parseFromString","data","Array","from","getElementsByTagName","catch","e","console","log","render","filter","_","index"],"mappings":"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","sourcesContent":["import Header from './Header'\nimport Instruction from './Instruction'\nimport Question from './Question'\nimport React from 'react'\nimport axios from 'axios'\n\n//import './App.css';\n\nimport XMLData from './xml/mc.xml'\nimport './mcstyle.css'\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      questions: [],\n      questionNum: -1,\n      questionTexts: [],\n      answers: [],\n      value: 0,\n      selectedValue: -1,\n      selectedAnswer: -1,\n      pressSubmit: 0 \n    }\n  }\n\n  setSubmit = (state) => {\n    this.setState({\n      pressSubmit: state\n    })\n  }\n\n  incrementValue = (value) => {\n    this.setState({\n      value: this.state.value + value\n    })\n  }\n\n  setSelectedValue = (value) => {\n    this.setState({\n      selectedValue: value\n    })\n  }\n\n  resetSelected = () => {\n    this.setState({\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  goToNextQuestion = () => { \n    this.setState({\n      questionNum : this.state.questionNum + 1,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  goToPrevQuestion = () => { this.setState({\n      questionNum : this.state.questionNum - 1, \n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  setSelectedAnswer = (answer) => { this.setState({\n      selectedAnswer: answer\n     })\n  }\n\n  componentDidMount(){\n    this.fetchQuestionsWithAxios()\n  }\n\n  fetchQuestionsWithAxios(){\n    axios.get(XMLData,\n      {\"Content-Type\":\"application/xml; charset=utf-8\"\n    }).then((response)=>{\n      const parser = new DOMParser()\n      var xml = parser.parseFromString(response.data,\"text/xml\")\n\n      var questions = Array.from(xml.getElementsByTagName(\"question\"))\n\n      var answers = Array.from(xml.getElementsByTagName(\"answer\"))\n\n      this.setState({\n          questions: questions,\n          answers: answers\n      })\n    }).catch( e => {\n      console.log(e)\n    })\n  }\n\n  render(){\n    console.log( this.state )\n    return (\n      <div className=\"App\">\n        <Header/>\n        <div id =\"wrapper\" data-role=\"content\">\n          <Instruction\n            questionNum={this.state.questionNum}\n            goToNextQuestion={this.goToNextQuestion}/>\n          <Question\n            questionNum={this.state.questionNum}\n            questions={this.state.questions}\n            selectedAnswer={this.state.selectedAnswer}\n            selectedValue={this.state.selectedValue}\n            value={this.state.value}\n            choices = {this.state.answers.filter( (_ , index) => {\n              return ((this.state.questionNum*4 <= index) && (index <= this.state.questionNum*4 + 3))\n            })}\n            goToNextQuestion={this.goToNextQuestion}\n            goToPrevQuestion={this.goToPrevQuestion}\n            setSelectedAnswer={this.setSelectedAnswer}\n            resetSelected={this.resetSelected}\n            incrementValue={this.incrementValue}\n            setSelectedValue={this.setSelectedValue}\n            \n            state={this.state}\n\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}