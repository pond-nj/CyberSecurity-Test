[{"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/index.js":"1","/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/reportWebVitals.js":"2","/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/App.js":"3","/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/PageManager.js":"4","/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/Header.js":"5","/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/Instruction.js":"6","/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/Question.js":"7","/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/Results.js":"8","/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/Survey.js":"9","/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/Buttons.js":"10"},{"size":502,"mtime":1647599006983,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1647599006984,"results":"13","hashOfConfig":"12"},{"size":5451,"mtime":1647612845506,"results":"14","hashOfConfig":"12"},{"size":682,"mtime":1647599006943,"results":"15","hashOfConfig":"12"},{"size":219,"mtime":1647599006942,"results":"16","hashOfConfig":"12"},{"size":1150,"mtime":1647599006943,"results":"17","hashOfConfig":"12"},{"size":2580,"mtime":1647605130042,"results":"18","hashOfConfig":"12"},{"size":1811,"mtime":1647599006943,"results":"19","hashOfConfig":"12"},{"size":4029,"mtime":1647612681411,"results":"20","hashOfConfig":"12"},{"size":5881,"mtime":1647612769882,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xwlboa",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"51"},"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/index.js",[],[],"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/reportWebVitals.js",[],[],"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/App.js",["56","57","58","59"],[],"import Header from './Header'\nimport PageManager from './PageManager'\nimport React from 'react'\nimport axios from 'axios'\n\n// import XMLData from './xml/mc.xml'\nimport './mcstyle.css'\n\n\n/*\n  Problem:\n\n    change page title\n\n    Responder can comeback to edit choice\n\n    collect survey on user feeling, send data to server\n\n    ## change survey to a new module\n\n    ## change state that's string but is supposed to be int to int\n\n    ## create page manager\n*/\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      questionsList: [],\n      feedbackList: [], //xmlnode that contains feedback data\n      surveyList: [], //\n      surveyForm: [],\n\n      questionNum: -1, //0 to total no. of question-1, 0 is the first question\n      surveyNum: -1,\n      value: 0,\n      surveyResponse: [], //save user's multiple choice response in this array\n      userIndustry: \"\",\n      userPosition: \"\",\n      userLocation: \"\", //save user's text input in this array\n      userComment: \"\",\n\n      selectedValue: -1,\n      selectedAnswer: -1,\n      pressSubmit: 0,\n      dataSubmit: -1\n    }\n  }\n\n  setUserInput = (index, inputText) => { \n    if( index == 0) { this.setState({\n      userIndustry: inputText\n    })} else if( index == 1 ){ this.setState({\n      userPosition: inputText\n    })} else if( index == 2 ){this.setState({\n      userLocation: inputText\n    })} else if( index == 3 ){this.setState({\n      userComment: inputText\n    })}\n  }\n\n  setDataSubmit = (state) => { this.setState({\n      dataSubmit: state\n    })\n  }\n\n  updateSurveyResponse = (response) => { this.setState({\n      surveyResponse: [...this.state.surveyResponse, parseInt(response)]\n    })\n  }\n\n  goToNextSurvey = () => { this.setState({\n      surveyNum: this.state.surveyNum + 1,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  skipQuestions = (questionNum) => { this.setState({\n      questionNum: questionNum\n    })\n  }\n\n  setSubmit = (state) => { this.setState({\n      pressSubmit: state\n    })\n  }\n\n  incrementValue = (value) => { this.setState({\n      value: this.state.value + parseInt(value)\n    })\n  }\n\n  setSelectedValue = (value) => { this.setState({\n      selectedValue: parseInt(value)\n    })\n  }\n\n  resetSelected = () => { this.setState({\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n  goToNextQuestion = () => { this.setState({\n      questionNum : this.state.questionNum + 1,\n      selectedAnswer: -1,\n      pressSubmit: 0\n    })\n  }\n\n\n  // goToPrevQuestion = () => { this.setState({\n  //     questionNum : this.state.questionNum - 1, \n  //     selectedAnswer: -1,\n  //     pressSubmit: 0\n  //   })\n  // }\n\n  setSelectedAnswer = (answer) => { this.setState({\n      selectedAnswer: parseInt(answer),\n      pressSubmit: 0\n     })\n  }\n\n  componentDidMount(){\n    this.fetchQuestionsWithAxios()\n  }\n\n  fetchQuestionsWithAxios(){\n    // axios.get(XMLData,\n    \n    axios.get(\"https://raw.githubusercontent.com/pond-nj/CyberSecurity-Test/main/src/xml/mc.xml\",\n      {\"Content-Type\":\"application/xml; charset=utf-8\"\n    }).then((response)=>{\n      const parser = new DOMParser()\n      var xml = parser.parseFromString(response.data,\"text/xml\")\n\n      var questionsList = Array.from(xml.getElementsByTagName(\"question\"))\n      var feedbackList = Array.from(xml.getElementsByTagName(\"feedbacks\"))\n      var surveyList = Array.from(xml.getElementsByTagName(\"surveyText\"))\n      var surveyForm = Array.from(xml.getElementsByTagName(\"surveyForm\"))\n\n      this.setState({\n          questionsList: questionsList,\n          feedbackList: feedbackList,\n          surveyList: surveyList,\n          surveyForm: surveyForm\n      })\n    }).catch( e => {\n      console.log(e)\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header/>\n        <div id =\"wrapper\" data-role=\"content\">\n          <PageManager\n            questionNum={this.state.questionNum}\n            questionsList={this.state.questionsList}\n            selectedAnswer={this.state.selectedAnswer}\n            selectedValue={this.state.selectedValue}\n            value={this.state.value}\n            pressSubmit={this.state.pressSubmit}\n            totalQuestions={this.state.questionsList.length}\n            feedbackList={this.state.feedbackList}\n            surveyNum={this.state.surveyNum}\n            surveyList={this.state.surveyList}\n            totalSurvey={this.state.surveyList.length}\n            surveyResponse={this.state.surveyResponse}\n            surveyForm={this.state.surveyForm}\n            dataSubmit={this.state.dataSubmit}\n            userIndustry={this.state.userIndustry}\n            userPosition={this.state.userPosition}\n            userLocation={this.state.userLocation}\n            userComment={this.state.userComment}\n            \n            goToNextQuestion={this.goToNextQuestion}\n            // goToPrevQuestion={this.goToPrevQuestion}\n            setSelectedAnswer={this.setSelectedAnswer}\n            resetSelected={this.resetSelected}\n            incrementValue={this.incrementValue}\n            setSelectedValue={this.setSelectedValue}\n            setSubmit={this.setSubmit}\n            skipQuestions={this.skipQuestions}\n            goToNextSurvey={this.goToNextSurvey}\n            updateSurveyResponse={this.updateSurveyResponse}\n            setDataSubmit={this.setDataSubmit}\n            setUserInput={this.setUserInput}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/PageManager.js",["60","61","62"],[],"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/Header.js",[],[],"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/Instruction.js",["63"],[],"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/Question.js",["64","65","66","67","68","69","70"],[],"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/Results.js",["71"],[],"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/Survey.js",["72","73","74","75","76"],[],"import Buttons from \"./Buttons\" \n\nconst SurveyText = ({props}) => {\n    return(<>\n        <p className=\"question-number\">\n            Survey {props.surveyNum + 1} out of {props.totalSurvey}\n        </p>\n        <p className=\"question\">\n            {props.surveyList[props.surveyNum].textContent}\n        </p>\n    </>)\n}\n\nconst Messages = ({props}) => {\n    // console.log( props.pressSubmit )\n    // console.log( props.selectedAnswer )\n    const Message = (props.pressSubmit == 1 && props.selectedAnswer == -1)? \"Please answer the above question.\" : \"\"\n\n    return (<p className=\"messages\">{Message}</p>)\n}\n\nconst FeedBackChoice = ({props}) => {\n    return (<>\n        {[1,2,3,4,5].map( (value, index) => {\n            return(\n            <div className=\"ui-radio\">\n                <label\n                    htmlFor={\"answer-\"+index}\n                    className={\"hovereffect ui-btn ui-corner-all ui-btn-inherit ui-btn-icon-left \" + ((props.selectedAnswer==index)?\"ui-radio-on\":\"ui-radio-off\")}>\n                {value}\n                </label>\n                <input\n                    type=\"radio\"\n                    name={\"answer-\"+props.questionNum}\n                    index={index}\n                    id={\"answer-\"+index}\n                    value={value}/>\n            </div>)\n        })}\n    </>)\n}\n\nconst UserForm = ({props}) => {\n    console.log(props.surveyForm)\n    console.log(props.userIndustry)\n    return(<>\n        <form >\n            <label htmlFor=\"industry\">{props.surveyForm[0].getElementsByTagName(\"industry\")[0].textContent}</label>\n            <input type=\"text\" name=\"industry\" id=\"industry\" value={props.userIndustry} placeholder=\"industry\" onChange={(event)=>{\n                props.setUserInput(0,event.target.value)\n            }}/>\n\n            <label htmlFor=\"position\">{props.surveyForm[0].getElementsByTagName(\"position\")[0].textContent}</label>\n            <input type=\"text\" name=\"position\" id=\"position\" value={props.userPosition} placeholder=\"position\" onChange={(event)=>{\n                props.setUserInput(1,event.target.value)\n            }}/>\n\n            <label htmlFor=\"location\">{props.surveyForm[0].getElementsByTagName(\"location\")[0].textContent}</label>\n            <input type=\"text\" name=\"location\" id=\"location\" value={props.userLocation} placeholder=\"location\" onChange={(event)=>{\n                props.setUserInput(2,event.target.value)\n            }}/>\n\n            <label htmlFor=\"comment\">{props.surveyForm[0].getElementsByTagName(\"comment\")[0].textContent}</label>\n            <textarea cols=\"40\" rows=\"10\" name=\"comment\" id=\"comment\" value={props.userComment} onChange={(event)=>{\n                props.setUserInput(3,event.target.value)\n            }}></textarea>\n        </form>\n    </>)\n\n}\n\nconst Survey = ({props}) => {\n    console.log( props.surveyNum )\n    console.log( props.totalSurvey )\n\n    if( props.surveyNum < props.totalSurvey ){\n        return(<>\n            <section className=\"question cf\">\n                <SurveyText props={props}/>\n                <form className=\"mc cf\" onClick={(event) => {\n                    props.setSelectedAnswer(event.target.getAttribute(\"index\"))\n                    }}>\n                    <FeedBackChoice props={props} />\n                </form>\n                <Messages props={props}/>\n            </section>\n            <Buttons props={props} />\n        </>)\n    }else if( props.surveyNum == props.totalSurvey ){\n        return(<>\n            <section className=\"question cf\">\n                <UserForm props={props} />\n            </section>\n            <Buttons props={props}/>\n        </>)\n    } else {\n        \n        return(<>\n            <section className=\"question cf\">\n                <p className=\"question\">\n                {(props.dataSubmit == -1) ?\n                    \"Sending Data to Server. Please do NOT close this tab.\" :\n                    \"Thank You for your cooperation. You can now close this tab.\"}\n                </p>\n            </section>\n        </>)\n    }\n}\n\nexport default Survey",["77","78"],"/Users/nutdranaijaruthikorn/Downloads/2022/itsc/p-nurse-quiz/CyberSecurity-Test/src/Buttons.js",["79","80","81","82","83","84","85","86","87"],[],"import axios from 'axios'\n\nconst Previous = ({props}) => {\n    return(\n        <button\n            name=\"control\"\n            className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-mini ui-corner-all\"\n            id=\"controlBtn-prev\"\n            value=\"prev\"\n            onClick={props.goToPrevQuestion}>\n            Previous\n        </button>\n    )\n}\n\nconst Next = ({props}) => {\n    return(\n        <button\n            name=\"control\"\n            className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-corner-all ui-mini\"\n            id=\"controlBtn-next\"\n            value=\"next\"\n            onClick={ () => {\n                if( props.selectedAnswer != -1 ){\n                    props.goToNextQuestion()\n                    props.resetSelected()\n                    props.incrementValue(props.selectedValue)\n                } else {\n                    props.setSubmit(1)\n                }\n            }}>\n            Next\n        </button>\n    )\n}\n\n\n\nconst Skip = ({props}) => {\n    return(<button\n        name=\"control\"\n        className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-corner-all ui-mini\"\n        id=\"controlBtn-next\"\n        value=\"next\"\n        onClick={ () => {\n            if( props.selectedAnswer != -1 ){\n                props.skipQuestions(12)\n                props.resetSelected()\n                props.incrementValue(props.selectedValue)\n            } else {\n                props.setSubmit(1)\n            }\n        }}>\n        Skip\n    </button>)\n}\n\nconst Log = ({props}) => {\n    return(<button\n        name=\"control\"\n        className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-corner-all ui-mini\"\n        id=\"controlBtn-next\"\n        value=\"next\"\n        onClick={ () => {\n            console.log(props.state)\n        }}>\n        Log\n    </button>)\n}\n\nconst Submit = ({props}) => {\n    return(<button\n        className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-corner-all ui-mini\"\n        onClick={ () => {\n            props.goToNextSurvey()\n            console.log( props.surveyResponse[0] )\n            console.log( props.surveyResponse[1] )\n            console.log( props.userIndustry)\n            console.log( props.userLocation)\n            console.log( props.userPosition)\n            console.log( props.userComment)\n\n            var jsondata = {\"score\": props.value,\"securityAwareness\": props.surveyResponse[0], \"brandAwareness\": props.surveyResponse[1], \"industry\": props.userIndustry, \"position\":props.userPosition, \"location\":props.userLocation, \"comment\":props.userComment};\n            var settings = {\n                \"async\": true,\n                \"crossDomain\": true,\n                \"url\": \"https://cybersecuritytest-f559.restdb.io/rest/survey-info\",\n                \"method\": \"POST\",\n                \"headers\": {\n                    \"content-type\": \"application/json\",\n                    \"x-apikey\": \"621a3f2d34fd6215658589f7\",\n                    \"cache-control\": \"no-cache\"\n                },\n                \"processData\": false,\n                \"data\": JSON.stringify(jsondata)\n            }\n            axios(settings).then( (response) => {\n                if(response.statusText.localeCompare(\"created\") == 1){\n                    console.log( response )\n                    props.setDataSubmit(1)\n                }\n            }).catch( e => {\n                console.log(e)\n            })\n        }}\n        >\n        Submit\n        </button>)\n}\n\nconst ProceedToSurvey = ({props}) => {\n    return(<button\n        className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-corner-all ui-mini\"\n        onClick={ () => {\n            props.goToNextQuestion()\n            props.goToNextSurvey()\n        }}>\n        Proceed\n    </button>)\n}\n\nconst NextSurvey = ({props}) => {\n    return(<button\n        className=\"controlBtn ui-btn-right ui-btn ui-btn-b ui-btn-inline ui-corner-all ui-mini\"\n        onClick={ () => {\n            if( props.surveyNum < props.totalSurvey ){\n                if( props.selectedAnswer != -1 ){\n                    props.goToNextSurvey()\n                    props.updateSurveyResponse(props.selectedAnswer+1)\n                } else {\n                    props.setSubmit(1)\n                }\n            }\n        }}>\n        Next\n    </button>)\n}\n\n\n\nconst Buttons = ({props}) => {\n\n    if( props.questionNum < props.totalQuestions ){\n        return(\n            <div\n                id=\"footer\"\n                data-role=\"footer\"\n                className=\"cf ui-footer ui-bar-inherit\"\n                role=\"contentinfo\">\n                \n                {/* <Previous props={props}/> */}\n                {/* <Log props={props}/> */}\n                <Skip props={props} />\n\n                <Next props = {props}/>\n            </div>\n        )\n    }else if (props.questionNum == props.totalQuestions ){\n        return(\n            <div\n                id=\"footer\"\n                data-role=\"footer\"\n                className=\"cf ui-footer ui-bar-inherit\"\n                role=\"contentinfo\">\n                <ProceedToSurvey props={props}/>\n            </div>\n        )\n    } else if (props.questionNum > props.totalQuestions && props.surveyNum != props.totalSurvey ){\n        return(\n            <div\n                id=\"footer\"\n                data-role=\"footer\"\n                className=\"cf ui-footer ui-bar-inherit\"\n                role=\"contentinfo\">\n                <NextSurvey props={props}/>\n            </div>)\n    } else if( props.surveyNum == props.totalSurvey ){\n        return(<div\n                id=\"footer\"\n                data-role=\"footer\"\n                className=\"cf ui-footer ui-bar-inherit\"\n                role=\"contentinfo\">\n                <Submit props={props}/>\n            </div>)\n    }\n\n    // console.log( props.questionNum )\n    // console.log( props.totalQuestions )\n}\n\nexport default Buttons",{"ruleId":"88","severity":1,"message":"89","line":53,"column":15,"nodeType":"90","messageId":"91","endLine":53,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":55,"column":24,"nodeType":"90","messageId":"91","endLine":55,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":57,"column":24,"nodeType":"90","messageId":"91","endLine":57,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":59,"column":24,"nodeType":"90","messageId":"91","endLine":59,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":8,"column":27,"nodeType":"90","messageId":"91","endLine":8,"endColumn":29},{"ruleId":"88","severity":1,"message":"92","line":10,"column":34,"nodeType":"90","messageId":"91","endLine":10,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":13,"column":34,"nodeType":"90","messageId":"91","endLine":13,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":5,"column":24,"nodeType":"90","messageId":"91","endLine":5,"endColumn":26},{"ruleId":"93","severity":1,"message":"94","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":8,"column":27,"nodeType":"90","messageId":"91","endLine":8,"endColumn":29},{"ruleId":"88","severity":1,"message":"92","line":8,"column":54,"nodeType":"90","messageId":"91","endLine":8,"endColumn":56},{"ruleId":"88","severity":1,"message":"89","line":32,"column":124,"nodeType":"90","messageId":"91","endLine":32,"endColumn":126},{"ruleId":"88","severity":1,"message":"89","line":45,"column":124,"nodeType":"90","messageId":"91","endLine":45,"endColumn":126},{"ruleId":"88","severity":1,"message":"89","line":62,"column":40,"nodeType":"90","messageId":"91","endLine":62,"endColumn":42},{"ruleId":"88","severity":1,"message":"89","line":62,"column":69,"nodeType":"90","messageId":"91","endLine":62,"endColumn":71},{"ruleId":"88","severity":1,"message":"92","line":16,"column":23,"nodeType":"90","messageId":"91","endLine":16,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":17,"column":40,"nodeType":"90","messageId":"91","endLine":17,"endColumn":42},{"ruleId":"88","severity":1,"message":"89","line":17,"column":69,"nodeType":"90","messageId":"91","endLine":17,"endColumn":71},{"ruleId":"88","severity":1,"message":"89","line":29,"column":124,"nodeType":"90","messageId":"91","endLine":29,"endColumn":126},{"ruleId":"88","severity":1,"message":"89","line":89,"column":31,"nodeType":"90","messageId":"91","endLine":89,"endColumn":33},{"ruleId":"88","severity":1,"message":"89","line":101,"column":36,"nodeType":"90","messageId":"91","endLine":101,"endColumn":38},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"93","severity":1,"message":"101","line":3,"column":7,"nodeType":"95","messageId":"96","endLine":3,"endColumn":15},{"ruleId":"88","severity":1,"message":"92","line":24,"column":42,"nodeType":"90","messageId":"91","endLine":24,"endColumn":44},{"ruleId":"88","severity":1,"message":"92","line":46,"column":38,"nodeType":"90","messageId":"91","endLine":46,"endColumn":40},{"ruleId":"93","severity":1,"message":"102","line":58,"column":7,"nodeType":"95","messageId":"96","endLine":58,"endColumn":10},{"ruleId":"88","severity":1,"message":"89","line":98,"column":65,"nodeType":"90","messageId":"91","endLine":98,"endColumn":67},{"ruleId":"88","severity":1,"message":"92","line":127,"column":42,"nodeType":"90","messageId":"91","endLine":127,"endColumn":44},{"ruleId":"88","severity":1,"message":"89","line":158,"column":33,"nodeType":"90","messageId":"91","endLine":158,"endColumn":35},{"ruleId":"88","severity":1,"message":"92","line":168,"column":76,"nodeType":"90","messageId":"91","endLine":168,"endColumn":78},{"ruleId":"88","severity":1,"message":"89","line":177,"column":32,"nodeType":"90","messageId":"91","endLine":177,"endColumn":34},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"'Previous' is assigned a value but never used.","'Log' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]